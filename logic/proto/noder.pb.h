// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: noder.proto

#ifndef PROTOBUF_INCLUDED_noder_2eproto
#define PROTOBUF_INCLUDED_noder_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_noder_2eproto 

namespace protobuf_noder_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_noder_2eproto
class oAccountLogout;
class oAccountLogoutDefaultTypeInternal;
extern oAccountLogoutDefaultTypeInternal _oAccountLogout_default_instance_;
class oAccountRelogin;
class oAccountReloginDefaultTypeInternal;
extern oAccountReloginDefaultTypeInternal _oAccountRelogin_default_instance_;
class oAccountReport;
class oAccountReportDefaultTypeInternal;
extern oAccountReportDefaultTypeInternal _oAccountReport_default_instance_;
class oAddress;
class oAddressDefaultTypeInternal;
extern oAddressDefaultTypeInternal _oAddress_default_instance_;
class oAssigneID;
class oAssigneIDDefaultTypeInternal;
extern oAssigneIDDefaultTypeInternal _oAssigneID_default_instance_;
class oBroadcastNoder;
class oBroadcastNoderDefaultTypeInternal;
extern oBroadcastNoderDefaultTypeInternal _oBroadcastNoder_default_instance_;
class oLoadReport;
class oLoadReportDefaultTypeInternal;
extern oLoadReportDefaultTypeInternal _oLoadReport_default_instance_;
class oMatcher;
class oMatcherDefaultTypeInternal;
extern oMatcherDefaultTypeInternal _oMatcher_default_instance_;
class oNoderInited;
class oNoderInitedDefaultTypeInternal;
extern oNoderInitedDefaultTypeInternal _oNoderInited_default_instance_;
class oRelayClientMessageToNoder;
class oRelayClientMessageToNoderDefaultTypeInternal;
extern oRelayClientMessageToNoderDefaultTypeInternal _oRelayClientMessageToNoder_default_instance_;
class oRelayServerMessageToClient;
class oRelayServerMessageToClientDefaultTypeInternal;
extern oRelayServerMessageToClientDefaultTypeInternal _oRelayServerMessageToClient_default_instance_;
class oReport;
class oReportDefaultTypeInternal;
extern oReportDefaultTypeInternal _oReport_default_instance_;
class oTellGameOver;
class oTellGameOverDefaultTypeInternal;
extern oTellGameOverDefaultTypeInternal _oTellGameOver_default_instance_;
class oTellNoderMatchSuccessd;
class oTellNoderMatchSuccessdDefaultTypeInternal;
extern oTellNoderMatchSuccessdDefaultTypeInternal _oTellNoderMatchSuccessd_default_instance_;
namespace google {
namespace protobuf {
template<> ::oAccountLogout* Arena::CreateMaybeMessage<::oAccountLogout>(Arena*);
template<> ::oAccountRelogin* Arena::CreateMaybeMessage<::oAccountRelogin>(Arena*);
template<> ::oAccountReport* Arena::CreateMaybeMessage<::oAccountReport>(Arena*);
template<> ::oAddress* Arena::CreateMaybeMessage<::oAddress>(Arena*);
template<> ::oAssigneID* Arena::CreateMaybeMessage<::oAssigneID>(Arena*);
template<> ::oBroadcastNoder* Arena::CreateMaybeMessage<::oBroadcastNoder>(Arena*);
template<> ::oLoadReport* Arena::CreateMaybeMessage<::oLoadReport>(Arena*);
template<> ::oMatcher* Arena::CreateMaybeMessage<::oMatcher>(Arena*);
template<> ::oNoderInited* Arena::CreateMaybeMessage<::oNoderInited>(Arena*);
template<> ::oRelayClientMessageToNoder* Arena::CreateMaybeMessage<::oRelayClientMessageToNoder>(Arena*);
template<> ::oRelayServerMessageToClient* Arena::CreateMaybeMessage<::oRelayServerMessageToClient>(Arena*);
template<> ::oReport* Arena::CreateMaybeMessage<::oReport>(Arena*);
template<> ::oTellGameOver* Arena::CreateMaybeMessage<::oTellGameOver>(Arena*);
template<> ::oTellNoderMatchSuccessd* Arena::CreateMaybeMessage<::oTellNoderMatchSuccessd>(Arena*);
}  // namespace protobuf
}  // namespace google

enum eNProtoID {
  Report = 0,
  AssigneID = 1,
  NoderInited = 2,
  BroadcastNoder = 3,
  AccountReport = 4,
  AccountLogout = 5,
  AccountRelogin = 6,
  RelayClientMessageToNoder = 7,
  RelayServerMessageToClient = 8,
  LoadReport = 50,
  TellNoderMatchSuccessd = 51,
  TellGameOver = 100,
  eNProtoID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  eNProtoID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool eNProtoID_IsValid(int value);
const eNProtoID eNProtoID_MIN = Report;
const eNProtoID eNProtoID_MAX = TellGameOver;
const int eNProtoID_ARRAYSIZE = eNProtoID_MAX + 1;

const ::google::protobuf::EnumDescriptor* eNProtoID_descriptor();
inline const ::std::string& eNProtoID_Name(eNProtoID value) {
  return ::google::protobuf::internal::NameOfEnum(
    eNProtoID_descriptor(), value);
}
inline bool eNProtoID_Parse(
    const ::std::string& name, eNProtoID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eNProtoID>(
    eNProtoID_descriptor(), name, value);
}
// ===================================================================

class oAddress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oAddress) */ {
 public:
  oAddress();
  virtual ~oAddress();

  oAddress(const oAddress& from);

  inline oAddress& operator=(const oAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oAddress(oAddress&& from) noexcept
    : oAddress() {
    *this = ::std::move(from);
  }

  inline oAddress& operator=(oAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oAddress* internal_default_instance() {
    return reinterpret_cast<const oAddress*>(
               &_oAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(oAddress* other);
  friend void swap(oAddress& a, oAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oAddress* New() const final {
    return CreateMaybeMessage<oAddress>(NULL);
  }

  oAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oAddress& from);
  void MergeFrom(const oAddress& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // int32 area = 1;
  void clear_area();
  static const int kAreaFieldNumber = 1;
  ::google::protobuf::int32 area() const;
  void set_area(::google::protobuf::int32 value);

  // int32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oAddress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 area_;
  ::google::protobuf::int32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oReport) */ {
 public:
  oReport();
  virtual ~oReport();

  oReport(const oReport& from);

  inline oReport& operator=(const oReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oReport(oReport&& from) noexcept
    : oReport() {
    *this = ::std::move(from);
  }

  inline oReport& operator=(oReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oReport* internal_default_instance() {
    return reinterpret_cast<const oReport*>(
               &_oReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(oReport* other);
  friend void swap(oReport& a, oReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oReport* New() const final {
    return CreateMaybeMessage<oReport>(NULL);
  }

  oReport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oReport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oReport& from);
  void MergeFrom(const oReport& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .oAddress address = 3;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 3;
  private:
  const ::oAddress& _internal_address() const;
  public:
  const ::oAddress& address() const;
  ::oAddress* release_address();
  ::oAddress* mutable_address();
  void set_allocated_address(::oAddress* address);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::oAddress* address_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oAssigneID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oAssigneID) */ {
 public:
  oAssigneID();
  virtual ~oAssigneID();

  oAssigneID(const oAssigneID& from);

  inline oAssigneID& operator=(const oAssigneID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oAssigneID(oAssigneID&& from) noexcept
    : oAssigneID() {
    *this = ::std::move(from);
  }

  inline oAssigneID& operator=(oAssigneID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oAssigneID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oAssigneID* internal_default_instance() {
    return reinterpret_cast<const oAssigneID*>(
               &_oAssigneID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(oAssigneID* other);
  friend void swap(oAssigneID& a, oAssigneID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oAssigneID* New() const final {
    return CreateMaybeMessage<oAssigneID>(NULL);
  }

  oAssigneID* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oAssigneID>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oAssigneID& from);
  void MergeFrom(const oAssigneID& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oAssigneID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oAssigneID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oNoderInited : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oNoderInited) */ {
 public:
  oNoderInited();
  virtual ~oNoderInited();

  oNoderInited(const oNoderInited& from);

  inline oNoderInited& operator=(const oNoderInited& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oNoderInited(oNoderInited&& from) noexcept
    : oNoderInited() {
    *this = ::std::move(from);
  }

  inline oNoderInited& operator=(oNoderInited&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oNoderInited& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oNoderInited* internal_default_instance() {
    return reinterpret_cast<const oNoderInited*>(
               &_oNoderInited_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(oNoderInited* other);
  friend void swap(oNoderInited& a, oNoderInited& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oNoderInited* New() const final {
    return CreateMaybeMessage<oNoderInited>(NULL);
  }

  oNoderInited* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oNoderInited>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oNoderInited& from);
  void MergeFrom(const oNoderInited& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oNoderInited* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:oNoderInited)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oBroadcastNoder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oBroadcastNoder) */ {
 public:
  oBroadcastNoder();
  virtual ~oBroadcastNoder();

  oBroadcastNoder(const oBroadcastNoder& from);

  inline oBroadcastNoder& operator=(const oBroadcastNoder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oBroadcastNoder(oBroadcastNoder&& from) noexcept
    : oBroadcastNoder() {
    *this = ::std::move(from);
  }

  inline oBroadcastNoder& operator=(oBroadcastNoder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oBroadcastNoder& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oBroadcastNoder* internal_default_instance() {
    return reinterpret_cast<const oBroadcastNoder*>(
               &_oBroadcastNoder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(oBroadcastNoder* other);
  friend void swap(oBroadcastNoder& a, oBroadcastNoder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oBroadcastNoder* New() const final {
    return CreateMaybeMessage<oBroadcastNoder>(NULL);
  }

  oBroadcastNoder* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oBroadcastNoder>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oBroadcastNoder& from);
  void MergeFrom(const oBroadcastNoder& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oBroadcastNoder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .oAddress address = 3;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 3;
  private:
  const ::oAddress& _internal_address() const;
  public:
  const ::oAddress& address() const;
  ::oAddress* release_address();
  ::oAddress* mutable_address();
  void set_allocated_address(::oAddress* address);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oBroadcastNoder)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::oAddress* address_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oAccountReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oAccountReport) */ {
 public:
  oAccountReport();
  virtual ~oAccountReport();

  oAccountReport(const oAccountReport& from);

  inline oAccountReport& operator=(const oAccountReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oAccountReport(oAccountReport&& from) noexcept
    : oAccountReport() {
    *this = ::std::move(from);
  }

  inline oAccountReport& operator=(oAccountReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oAccountReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oAccountReport* internal_default_instance() {
    return reinterpret_cast<const oAccountReport*>(
               &_oAccountReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(oAccountReport* other);
  friend void swap(oAccountReport& a, oAccountReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oAccountReport* New() const final {
    return CreateMaybeMessage<oAccountReport>(NULL);
  }

  oAccountReport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oAccountReport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oAccountReport& from);
  void MergeFrom(const oAccountReport& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oAccountReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 account = 2;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  ::google::protobuf::int64 account() const;
  void set_account(::google::protobuf::int64 value);

  // int32 gateid = 1;
  void clear_gateid();
  static const int kGateidFieldNumber = 1;
  ::google::protobuf::int32 gateid() const;
  void set_gateid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oAccountReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 account_;
  ::google::protobuf::int32 gateid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oAccountLogout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oAccountLogout) */ {
 public:
  oAccountLogout();
  virtual ~oAccountLogout();

  oAccountLogout(const oAccountLogout& from);

  inline oAccountLogout& operator=(const oAccountLogout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oAccountLogout(oAccountLogout&& from) noexcept
    : oAccountLogout() {
    *this = ::std::move(from);
  }

  inline oAccountLogout& operator=(oAccountLogout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oAccountLogout& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oAccountLogout* internal_default_instance() {
    return reinterpret_cast<const oAccountLogout*>(
               &_oAccountLogout_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(oAccountLogout* other);
  friend void swap(oAccountLogout& a, oAccountLogout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oAccountLogout* New() const final {
    return CreateMaybeMessage<oAccountLogout>(NULL);
  }

  oAccountLogout* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oAccountLogout>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oAccountLogout& from);
  void MergeFrom(const oAccountLogout& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oAccountLogout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  ::google::protobuf::int64 account() const;
  void set_account(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:oAccountLogout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 account_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oAccountRelogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oAccountRelogin) */ {
 public:
  oAccountRelogin();
  virtual ~oAccountRelogin();

  oAccountRelogin(const oAccountRelogin& from);

  inline oAccountRelogin& operator=(const oAccountRelogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oAccountRelogin(oAccountRelogin&& from) noexcept
    : oAccountRelogin() {
    *this = ::std::move(from);
  }

  inline oAccountRelogin& operator=(oAccountRelogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oAccountRelogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oAccountRelogin* internal_default_instance() {
    return reinterpret_cast<const oAccountRelogin*>(
               &_oAccountRelogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(oAccountRelogin* other);
  friend void swap(oAccountRelogin& a, oAccountRelogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oAccountRelogin* New() const final {
    return CreateMaybeMessage<oAccountRelogin>(NULL);
  }

  oAccountRelogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oAccountRelogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oAccountRelogin& from);
  void MergeFrom(const oAccountRelogin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oAccountRelogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 account = 2;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  ::google::protobuf::int64 account() const;
  void set_account(::google::protobuf::int64 value);

  // int32 gateid = 1;
  void clear_gateid();
  static const int kGateidFieldNumber = 1;
  ::google::protobuf::int32 gateid() const;
  void set_gateid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oAccountRelogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 account_;
  ::google::protobuf::int32 gateid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oRelayClientMessageToNoder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oRelayClientMessageToNoder) */ {
 public:
  oRelayClientMessageToNoder();
  virtual ~oRelayClientMessageToNoder();

  oRelayClientMessageToNoder(const oRelayClientMessageToNoder& from);

  inline oRelayClientMessageToNoder& operator=(const oRelayClientMessageToNoder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oRelayClientMessageToNoder(oRelayClientMessageToNoder&& from) noexcept
    : oRelayClientMessageToNoder() {
    *this = ::std::move(from);
  }

  inline oRelayClientMessageToNoder& operator=(oRelayClientMessageToNoder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oRelayClientMessageToNoder& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oRelayClientMessageToNoder* internal_default_instance() {
    return reinterpret_cast<const oRelayClientMessageToNoder*>(
               &_oRelayClientMessageToNoder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(oRelayClientMessageToNoder* other);
  friend void swap(oRelayClientMessageToNoder& a, oRelayClientMessageToNoder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oRelayClientMessageToNoder* New() const final {
    return CreateMaybeMessage<oRelayClientMessageToNoder>(NULL);
  }

  oRelayClientMessageToNoder* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oRelayClientMessageToNoder>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oRelayClientMessageToNoder& from);
  void MergeFrom(const oRelayClientMessageToNoder& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oRelayClientMessageToNoder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes body = 3;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // int64 account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  ::google::protobuf::int64 account() const;
  void set_account(::google::protobuf::int64 value);

  // int32 messageid = 2;
  void clear_messageid();
  static const int kMessageidFieldNumber = 2;
  ::google::protobuf::int32 messageid() const;
  void set_messageid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oRelayClientMessageToNoder)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::int64 account_;
  ::google::protobuf::int32 messageid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oRelayServerMessageToClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oRelayServerMessageToClient) */ {
 public:
  oRelayServerMessageToClient();
  virtual ~oRelayServerMessageToClient();

  oRelayServerMessageToClient(const oRelayServerMessageToClient& from);

  inline oRelayServerMessageToClient& operator=(const oRelayServerMessageToClient& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oRelayServerMessageToClient(oRelayServerMessageToClient&& from) noexcept
    : oRelayServerMessageToClient() {
    *this = ::std::move(from);
  }

  inline oRelayServerMessageToClient& operator=(oRelayServerMessageToClient&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oRelayServerMessageToClient& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oRelayServerMessageToClient* internal_default_instance() {
    return reinterpret_cast<const oRelayServerMessageToClient*>(
               &_oRelayServerMessageToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(oRelayServerMessageToClient* other);
  friend void swap(oRelayServerMessageToClient& a, oRelayServerMessageToClient& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oRelayServerMessageToClient* New() const final {
    return CreateMaybeMessage<oRelayServerMessageToClient>(NULL);
  }

  oRelayServerMessageToClient* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oRelayServerMessageToClient>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oRelayServerMessageToClient& from);
  void MergeFrom(const oRelayServerMessageToClient& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oRelayServerMessageToClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 account = 1;
  int account_size() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  ::google::protobuf::int64 account(int index) const;
  void set_account(int index, ::google::protobuf::int64 value);
  void add_account(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      account() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_account();

  // bytes body = 3;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // int32 messageid = 2;
  void clear_messageid();
  static const int kMessageidFieldNumber = 2;
  ::google::protobuf::int32 messageid() const;
  void set_messageid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oRelayServerMessageToClient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > account_;
  mutable int _account_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::int32 messageid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oLoadReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oLoadReport) */ {
 public:
  oLoadReport();
  virtual ~oLoadReport();

  oLoadReport(const oLoadReport& from);

  inline oLoadReport& operator=(const oLoadReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oLoadReport(oLoadReport&& from) noexcept
    : oLoadReport() {
    *this = ::std::move(from);
  }

  inline oLoadReport& operator=(oLoadReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oLoadReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oLoadReport* internal_default_instance() {
    return reinterpret_cast<const oLoadReport*>(
               &_oLoadReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(oLoadReport* other);
  friend void swap(oLoadReport& a, oLoadReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oLoadReport* New() const final {
    return CreateMaybeMessage<oLoadReport>(NULL);
  }

  oLoadReport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oLoadReport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oLoadReport& from);
  void MergeFrom(const oLoadReport& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oLoadReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 load = 1;
  void clear_load();
  static const int kLoadFieldNumber = 1;
  ::google::protobuf::int32 load() const;
  void set_load(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oLoadReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 load_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oMatcher : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oMatcher) */ {
 public:
  oMatcher();
  virtual ~oMatcher();

  oMatcher(const oMatcher& from);

  inline oMatcher& operator=(const oMatcher& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oMatcher(oMatcher&& from) noexcept
    : oMatcher() {
    *this = ::std::move(from);
  }

  inline oMatcher& operator=(oMatcher&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oMatcher& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oMatcher* internal_default_instance() {
    return reinterpret_cast<const oMatcher*>(
               &_oMatcher_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(oMatcher* other);
  friend void swap(oMatcher& a, oMatcher& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oMatcher* New() const final {
    return CreateMaybeMessage<oMatcher>(NULL);
  }

  oMatcher* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oMatcher>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oMatcher& from);
  void MergeFrom(const oMatcher& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oMatcher* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  ::google::protobuf::int64 account() const;
  void set_account(::google::protobuf::int64 value);

  // int32 gateid = 2;
  void clear_gateid();
  static const int kGateidFieldNumber = 2;
  ::google::protobuf::int32 gateid() const;
  void set_gateid(::google::protobuf::int32 value);

  // bool isai = 3;
  void clear_isai();
  static const int kIsaiFieldNumber = 3;
  bool isai() const;
  void set_isai(bool value);

  // @@protoc_insertion_point(class_scope:oMatcher)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 account_;
  ::google::protobuf::int32 gateid_;
  bool isai_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oTellNoderMatchSuccessd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oTellNoderMatchSuccessd) */ {
 public:
  oTellNoderMatchSuccessd();
  virtual ~oTellNoderMatchSuccessd();

  oTellNoderMatchSuccessd(const oTellNoderMatchSuccessd& from);

  inline oTellNoderMatchSuccessd& operator=(const oTellNoderMatchSuccessd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oTellNoderMatchSuccessd(oTellNoderMatchSuccessd&& from) noexcept
    : oTellNoderMatchSuccessd() {
    *this = ::std::move(from);
  }

  inline oTellNoderMatchSuccessd& operator=(oTellNoderMatchSuccessd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oTellNoderMatchSuccessd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oTellNoderMatchSuccessd* internal_default_instance() {
    return reinterpret_cast<const oTellNoderMatchSuccessd*>(
               &_oTellNoderMatchSuccessd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(oTellNoderMatchSuccessd* other);
  friend void swap(oTellNoderMatchSuccessd& a, oTellNoderMatchSuccessd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oTellNoderMatchSuccessd* New() const final {
    return CreateMaybeMessage<oTellNoderMatchSuccessd>(NULL);
  }

  oTellNoderMatchSuccessd* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oTellNoderMatchSuccessd>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oTellNoderMatchSuccessd& from);
  void MergeFrom(const oTellNoderMatchSuccessd& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oTellNoderMatchSuccessd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .oMatcher matcher = 3;
  int matcher_size() const;
  void clear_matcher();
  static const int kMatcherFieldNumber = 3;
  ::oMatcher* mutable_matcher(int index);
  ::google::protobuf::RepeatedPtrField< ::oMatcher >*
      mutable_matcher();
  const ::oMatcher& matcher(int index) const;
  ::oMatcher* add_matcher();
  const ::google::protobuf::RepeatedPtrField< ::oMatcher >&
      matcher() const;

  // int32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::int32 matchid() const;
  void set_matchid(::google::protobuf::int32 value);

  // int32 logicid = 2;
  void clear_logicid();
  static const int kLogicidFieldNumber = 2;
  ::google::protobuf::int32 logicid() const;
  void set_logicid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oTellNoderMatchSuccessd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::oMatcher > matcher_;
  ::google::protobuf::int32 matchid_;
  ::google::protobuf::int32 logicid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oTellGameOver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oTellGameOver) */ {
 public:
  oTellGameOver();
  virtual ~oTellGameOver();

  oTellGameOver(const oTellGameOver& from);

  inline oTellGameOver& operator=(const oTellGameOver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oTellGameOver(oTellGameOver&& from) noexcept
    : oTellGameOver() {
    *this = ::std::move(from);
  }

  inline oTellGameOver& operator=(oTellGameOver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oTellGameOver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oTellGameOver* internal_default_instance() {
    return reinterpret_cast<const oTellGameOver*>(
               &_oTellGameOver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(oTellGameOver* other);
  friend void swap(oTellGameOver& a, oTellGameOver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oTellGameOver* New() const final {
    return CreateMaybeMessage<oTellGameOver>(NULL);
  }

  oTellGameOver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oTellGameOver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oTellGameOver& from);
  void MergeFrom(const oTellGameOver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oTellGameOver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  ::google::protobuf::int64 account() const;
  void set_account(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:oTellGameOver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 account_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_noder_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// oAddress

// int32 area = 1;
inline void oAddress::clear_area() {
  area_ = 0;
}
inline ::google::protobuf::int32 oAddress::area() const {
  // @@protoc_insertion_point(field_get:oAddress.area)
  return area_;
}
inline void oAddress::set_area(::google::protobuf::int32 value) {
  
  area_ = value;
  // @@protoc_insertion_point(field_set:oAddress.area)
}

// string ip = 2;
inline void oAddress::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& oAddress::ip() const {
  // @@protoc_insertion_point(field_get:oAddress.ip)
  return ip_.GetNoArena();
}
inline void oAddress::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oAddress.ip)
}
#if LANG_CXX11
inline void oAddress::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oAddress.ip)
}
#endif
inline void oAddress::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oAddress.ip)
}
inline void oAddress::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oAddress.ip)
}
inline ::std::string* oAddress::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:oAddress.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oAddress::release_ip() {
  // @@protoc_insertion_point(field_release:oAddress.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oAddress::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:oAddress.ip)
}

// int32 port = 3;
inline void oAddress::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 oAddress::port() const {
  // @@protoc_insertion_point(field_get:oAddress.port)
  return port_;
}
inline void oAddress::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:oAddress.port)
}

// -------------------------------------------------------------------

// oReport

// string name = 1;
inline void oReport::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& oReport::name() const {
  // @@protoc_insertion_point(field_get:oReport.name)
  return name_.GetNoArena();
}
inline void oReport::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oReport.name)
}
#if LANG_CXX11
inline void oReport::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oReport.name)
}
#endif
inline void oReport::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oReport.name)
}
inline void oReport::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oReport.name)
}
inline ::std::string* oReport::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:oReport.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oReport::release_name() {
  // @@protoc_insertion_point(field_release:oReport.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oReport::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:oReport.name)
}

// int32 id = 2;
inline void oReport::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 oReport::id() const {
  // @@protoc_insertion_point(field_get:oReport.id)
  return id_;
}
inline void oReport::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:oReport.id)
}

// .oAddress address = 3;
inline bool oReport::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline void oReport::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
inline const ::oAddress& oReport::_internal_address() const {
  return *address_;
}
inline const ::oAddress& oReport::address() const {
  const ::oAddress* p = address_;
  // @@protoc_insertion_point(field_get:oReport.address)
  return p != NULL ? *p : *reinterpret_cast<const ::oAddress*>(
      &::_oAddress_default_instance_);
}
inline ::oAddress* oReport::release_address() {
  // @@protoc_insertion_point(field_release:oReport.address)
  
  ::oAddress* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::oAddress* oReport::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::oAddress>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oReport.address)
  return address_;
}
inline void oReport::set_allocated_address(::oAddress* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete address_;
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:oReport.address)
}

// -------------------------------------------------------------------

// oAssigneID

// int32 id = 1;
inline void oAssigneID::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 oAssigneID::id() const {
  // @@protoc_insertion_point(field_get:oAssigneID.id)
  return id_;
}
inline void oAssigneID::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:oAssigneID.id)
}

// -------------------------------------------------------------------

// oNoderInited

// -------------------------------------------------------------------

// oBroadcastNoder

// int32 id = 1;
inline void oBroadcastNoder::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 oBroadcastNoder::id() const {
  // @@protoc_insertion_point(field_get:oBroadcastNoder.id)
  return id_;
}
inline void oBroadcastNoder::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:oBroadcastNoder.id)
}

// string name = 2;
inline void oBroadcastNoder::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& oBroadcastNoder::name() const {
  // @@protoc_insertion_point(field_get:oBroadcastNoder.name)
  return name_.GetNoArena();
}
inline void oBroadcastNoder::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oBroadcastNoder.name)
}
#if LANG_CXX11
inline void oBroadcastNoder::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oBroadcastNoder.name)
}
#endif
inline void oBroadcastNoder::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oBroadcastNoder.name)
}
inline void oBroadcastNoder::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oBroadcastNoder.name)
}
inline ::std::string* oBroadcastNoder::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:oBroadcastNoder.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oBroadcastNoder::release_name() {
  // @@protoc_insertion_point(field_release:oBroadcastNoder.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oBroadcastNoder::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:oBroadcastNoder.name)
}

// .oAddress address = 3;
inline bool oBroadcastNoder::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline void oBroadcastNoder::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
inline const ::oAddress& oBroadcastNoder::_internal_address() const {
  return *address_;
}
inline const ::oAddress& oBroadcastNoder::address() const {
  const ::oAddress* p = address_;
  // @@protoc_insertion_point(field_get:oBroadcastNoder.address)
  return p != NULL ? *p : *reinterpret_cast<const ::oAddress*>(
      &::_oAddress_default_instance_);
}
inline ::oAddress* oBroadcastNoder::release_address() {
  // @@protoc_insertion_point(field_release:oBroadcastNoder.address)
  
  ::oAddress* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::oAddress* oBroadcastNoder::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::oAddress>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oBroadcastNoder.address)
  return address_;
}
inline void oBroadcastNoder::set_allocated_address(::oAddress* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete address_;
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:oBroadcastNoder.address)
}

// -------------------------------------------------------------------

// oAccountReport

// int32 gateid = 1;
inline void oAccountReport::clear_gateid() {
  gateid_ = 0;
}
inline ::google::protobuf::int32 oAccountReport::gateid() const {
  // @@protoc_insertion_point(field_get:oAccountReport.gateid)
  return gateid_;
}
inline void oAccountReport::set_gateid(::google::protobuf::int32 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:oAccountReport.gateid)
}

// int64 account = 2;
inline void oAccountReport::clear_account() {
  account_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 oAccountReport::account() const {
  // @@protoc_insertion_point(field_get:oAccountReport.account)
  return account_;
}
inline void oAccountReport::set_account(::google::protobuf::int64 value) {
  
  account_ = value;
  // @@protoc_insertion_point(field_set:oAccountReport.account)
}

// -------------------------------------------------------------------

// oAccountLogout

// int64 account = 1;
inline void oAccountLogout::clear_account() {
  account_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 oAccountLogout::account() const {
  // @@protoc_insertion_point(field_get:oAccountLogout.account)
  return account_;
}
inline void oAccountLogout::set_account(::google::protobuf::int64 value) {
  
  account_ = value;
  // @@protoc_insertion_point(field_set:oAccountLogout.account)
}

// -------------------------------------------------------------------

// oAccountRelogin

// int32 gateid = 1;
inline void oAccountRelogin::clear_gateid() {
  gateid_ = 0;
}
inline ::google::protobuf::int32 oAccountRelogin::gateid() const {
  // @@protoc_insertion_point(field_get:oAccountRelogin.gateid)
  return gateid_;
}
inline void oAccountRelogin::set_gateid(::google::protobuf::int32 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:oAccountRelogin.gateid)
}

// int64 account = 2;
inline void oAccountRelogin::clear_account() {
  account_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 oAccountRelogin::account() const {
  // @@protoc_insertion_point(field_get:oAccountRelogin.account)
  return account_;
}
inline void oAccountRelogin::set_account(::google::protobuf::int64 value) {
  
  account_ = value;
  // @@protoc_insertion_point(field_set:oAccountRelogin.account)
}

// -------------------------------------------------------------------

// oRelayClientMessageToNoder

// int64 account = 1;
inline void oRelayClientMessageToNoder::clear_account() {
  account_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 oRelayClientMessageToNoder::account() const {
  // @@protoc_insertion_point(field_get:oRelayClientMessageToNoder.account)
  return account_;
}
inline void oRelayClientMessageToNoder::set_account(::google::protobuf::int64 value) {
  
  account_ = value;
  // @@protoc_insertion_point(field_set:oRelayClientMessageToNoder.account)
}

// int32 messageid = 2;
inline void oRelayClientMessageToNoder::clear_messageid() {
  messageid_ = 0;
}
inline ::google::protobuf::int32 oRelayClientMessageToNoder::messageid() const {
  // @@protoc_insertion_point(field_get:oRelayClientMessageToNoder.messageid)
  return messageid_;
}
inline void oRelayClientMessageToNoder::set_messageid(::google::protobuf::int32 value) {
  
  messageid_ = value;
  // @@protoc_insertion_point(field_set:oRelayClientMessageToNoder.messageid)
}

// bytes body = 3;
inline void oRelayClientMessageToNoder::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& oRelayClientMessageToNoder::body() const {
  // @@protoc_insertion_point(field_get:oRelayClientMessageToNoder.body)
  return body_.GetNoArena();
}
inline void oRelayClientMessageToNoder::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oRelayClientMessageToNoder.body)
}
#if LANG_CXX11
inline void oRelayClientMessageToNoder::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oRelayClientMessageToNoder.body)
}
#endif
inline void oRelayClientMessageToNoder::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oRelayClientMessageToNoder.body)
}
inline void oRelayClientMessageToNoder::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oRelayClientMessageToNoder.body)
}
inline ::std::string* oRelayClientMessageToNoder::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:oRelayClientMessageToNoder.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oRelayClientMessageToNoder::release_body() {
  // @@protoc_insertion_point(field_release:oRelayClientMessageToNoder.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oRelayClientMessageToNoder::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:oRelayClientMessageToNoder.body)
}

// -------------------------------------------------------------------

// oRelayServerMessageToClient

// repeated int64 account = 1;
inline int oRelayServerMessageToClient::account_size() const {
  return account_.size();
}
inline void oRelayServerMessageToClient::clear_account() {
  account_.Clear();
}
inline ::google::protobuf::int64 oRelayServerMessageToClient::account(int index) const {
  // @@protoc_insertion_point(field_get:oRelayServerMessageToClient.account)
  return account_.Get(index);
}
inline void oRelayServerMessageToClient::set_account(int index, ::google::protobuf::int64 value) {
  account_.Set(index, value);
  // @@protoc_insertion_point(field_set:oRelayServerMessageToClient.account)
}
inline void oRelayServerMessageToClient::add_account(::google::protobuf::int64 value) {
  account_.Add(value);
  // @@protoc_insertion_point(field_add:oRelayServerMessageToClient.account)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
oRelayServerMessageToClient::account() const {
  // @@protoc_insertion_point(field_list:oRelayServerMessageToClient.account)
  return account_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
oRelayServerMessageToClient::mutable_account() {
  // @@protoc_insertion_point(field_mutable_list:oRelayServerMessageToClient.account)
  return &account_;
}

// int32 messageid = 2;
inline void oRelayServerMessageToClient::clear_messageid() {
  messageid_ = 0;
}
inline ::google::protobuf::int32 oRelayServerMessageToClient::messageid() const {
  // @@protoc_insertion_point(field_get:oRelayServerMessageToClient.messageid)
  return messageid_;
}
inline void oRelayServerMessageToClient::set_messageid(::google::protobuf::int32 value) {
  
  messageid_ = value;
  // @@protoc_insertion_point(field_set:oRelayServerMessageToClient.messageid)
}

// bytes body = 3;
inline void oRelayServerMessageToClient::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& oRelayServerMessageToClient::body() const {
  // @@protoc_insertion_point(field_get:oRelayServerMessageToClient.body)
  return body_.GetNoArena();
}
inline void oRelayServerMessageToClient::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oRelayServerMessageToClient.body)
}
#if LANG_CXX11
inline void oRelayServerMessageToClient::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oRelayServerMessageToClient.body)
}
#endif
inline void oRelayServerMessageToClient::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oRelayServerMessageToClient.body)
}
inline void oRelayServerMessageToClient::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oRelayServerMessageToClient.body)
}
inline ::std::string* oRelayServerMessageToClient::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:oRelayServerMessageToClient.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oRelayServerMessageToClient::release_body() {
  // @@protoc_insertion_point(field_release:oRelayServerMessageToClient.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oRelayServerMessageToClient::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:oRelayServerMessageToClient.body)
}

// -------------------------------------------------------------------

// oLoadReport

// int32 load = 1;
inline void oLoadReport::clear_load() {
  load_ = 0;
}
inline ::google::protobuf::int32 oLoadReport::load() const {
  // @@protoc_insertion_point(field_get:oLoadReport.load)
  return load_;
}
inline void oLoadReport::set_load(::google::protobuf::int32 value) {
  
  load_ = value;
  // @@protoc_insertion_point(field_set:oLoadReport.load)
}

// -------------------------------------------------------------------

// oMatcher

// int64 account = 1;
inline void oMatcher::clear_account() {
  account_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 oMatcher::account() const {
  // @@protoc_insertion_point(field_get:oMatcher.account)
  return account_;
}
inline void oMatcher::set_account(::google::protobuf::int64 value) {
  
  account_ = value;
  // @@protoc_insertion_point(field_set:oMatcher.account)
}

// int32 gateid = 2;
inline void oMatcher::clear_gateid() {
  gateid_ = 0;
}
inline ::google::protobuf::int32 oMatcher::gateid() const {
  // @@protoc_insertion_point(field_get:oMatcher.gateid)
  return gateid_;
}
inline void oMatcher::set_gateid(::google::protobuf::int32 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:oMatcher.gateid)
}

// bool isai = 3;
inline void oMatcher::clear_isai() {
  isai_ = false;
}
inline bool oMatcher::isai() const {
  // @@protoc_insertion_point(field_get:oMatcher.isai)
  return isai_;
}
inline void oMatcher::set_isai(bool value) {
  
  isai_ = value;
  // @@protoc_insertion_point(field_set:oMatcher.isai)
}

// -------------------------------------------------------------------

// oTellNoderMatchSuccessd

// int32 matchid = 1;
inline void oTellNoderMatchSuccessd::clear_matchid() {
  matchid_ = 0;
}
inline ::google::protobuf::int32 oTellNoderMatchSuccessd::matchid() const {
  // @@protoc_insertion_point(field_get:oTellNoderMatchSuccessd.matchid)
  return matchid_;
}
inline void oTellNoderMatchSuccessd::set_matchid(::google::protobuf::int32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:oTellNoderMatchSuccessd.matchid)
}

// int32 logicid = 2;
inline void oTellNoderMatchSuccessd::clear_logicid() {
  logicid_ = 0;
}
inline ::google::protobuf::int32 oTellNoderMatchSuccessd::logicid() const {
  // @@protoc_insertion_point(field_get:oTellNoderMatchSuccessd.logicid)
  return logicid_;
}
inline void oTellNoderMatchSuccessd::set_logicid(::google::protobuf::int32 value) {
  
  logicid_ = value;
  // @@protoc_insertion_point(field_set:oTellNoderMatchSuccessd.logicid)
}

// repeated .oMatcher matcher = 3;
inline int oTellNoderMatchSuccessd::matcher_size() const {
  return matcher_.size();
}
inline void oTellNoderMatchSuccessd::clear_matcher() {
  matcher_.Clear();
}
inline ::oMatcher* oTellNoderMatchSuccessd::mutable_matcher(int index) {
  // @@protoc_insertion_point(field_mutable:oTellNoderMatchSuccessd.matcher)
  return matcher_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::oMatcher >*
oTellNoderMatchSuccessd::mutable_matcher() {
  // @@protoc_insertion_point(field_mutable_list:oTellNoderMatchSuccessd.matcher)
  return &matcher_;
}
inline const ::oMatcher& oTellNoderMatchSuccessd::matcher(int index) const {
  // @@protoc_insertion_point(field_get:oTellNoderMatchSuccessd.matcher)
  return matcher_.Get(index);
}
inline ::oMatcher* oTellNoderMatchSuccessd::add_matcher() {
  // @@protoc_insertion_point(field_add:oTellNoderMatchSuccessd.matcher)
  return matcher_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::oMatcher >&
oTellNoderMatchSuccessd::matcher() const {
  // @@protoc_insertion_point(field_list:oTellNoderMatchSuccessd.matcher)
  return matcher_;
}

// -------------------------------------------------------------------

// oTellGameOver

// int64 account = 1;
inline void oTellGameOver::clear_account() {
  account_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 oTellGameOver::account() const {
  // @@protoc_insertion_point(field_get:oTellGameOver.account)
  return account_;
}
inline void oTellGameOver::set_account(::google::protobuf::int64 value) {
  
  account_ = value;
  // @@protoc_insertion_point(field_set:oTellGameOver.account)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::eNProtoID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eNProtoID>() {
  return ::eNProtoID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_noder_2eproto
