// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Noder.proto

#include "Noder.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Noder_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Noder_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_oAddress;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Noder_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_oMatcher;
}  // namespace protobuf_Noder_2eproto
class oAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oAddress>
      _instance;
} _oAddress_default_instance_;
class oReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oReport>
      _instance;
} _oReport_default_instance_;
class oAssigneIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oAssigneID>
      _instance;
} _oAssigneID_default_instance_;
class oNoderInitedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oNoderInited>
      _instance;
} _oNoderInited_default_instance_;
class oBroadcastNoderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oBroadcastNoder>
      _instance;
} _oBroadcastNoder_default_instance_;
class oAccountReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oAccountReport>
      _instance;
} _oAccountReport_default_instance_;
class oAccountLogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oAccountLogout>
      _instance;
} _oAccountLogout_default_instance_;
class oAccountReloginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oAccountRelogin>
      _instance;
} _oAccountRelogin_default_instance_;
class oRelayClientMessageToNoderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oRelayClientMessageToNoder>
      _instance;
} _oRelayClientMessageToNoder_default_instance_;
class oRelayServerMessageToClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oRelayServerMessageToClient>
      _instance;
} _oRelayServerMessageToClient_default_instance_;
class oLoadReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oLoadReport>
      _instance;
} _oLoadReport_default_instance_;
class oMatcherDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oMatcher>
      _instance;
} _oMatcher_default_instance_;
class oTellNoderMatchSuccessdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oTellNoderMatchSuccessd>
      _instance;
} _oTellNoderMatchSuccessd_default_instance_;
class oTellGameOverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<oTellGameOver>
      _instance;
} _oTellGameOver_default_instance_;
namespace protobuf_Noder_2eproto {
static void InitDefaultsoAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oAddress_default_instance_;
    new (ptr) ::oAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoAddress}, {}};

static void InitDefaultsoReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oReport_default_instance_;
    new (ptr) ::oReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_oReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsoReport}, {
      &protobuf_Noder_2eproto::scc_info_oAddress.base,}};

static void InitDefaultsoAssigneID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oAssigneID_default_instance_;
    new (ptr) ::oAssigneID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oAssigneID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oAssigneID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoAssigneID}, {}};

static void InitDefaultsoNoderInited() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oNoderInited_default_instance_;
    new (ptr) ::oNoderInited();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oNoderInited::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oNoderInited =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoNoderInited}, {}};

static void InitDefaultsoBroadcastNoder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oBroadcastNoder_default_instance_;
    new (ptr) ::oBroadcastNoder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oBroadcastNoder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_oBroadcastNoder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsoBroadcastNoder}, {
      &protobuf_Noder_2eproto::scc_info_oAddress.base,}};

static void InitDefaultsoAccountReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oAccountReport_default_instance_;
    new (ptr) ::oAccountReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oAccountReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oAccountReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoAccountReport}, {}};

static void InitDefaultsoAccountLogout() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oAccountLogout_default_instance_;
    new (ptr) ::oAccountLogout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oAccountLogout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oAccountLogout =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoAccountLogout}, {}};

static void InitDefaultsoAccountRelogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oAccountRelogin_default_instance_;
    new (ptr) ::oAccountRelogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oAccountRelogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oAccountRelogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoAccountRelogin}, {}};

static void InitDefaultsoRelayClientMessageToNoder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oRelayClientMessageToNoder_default_instance_;
    new (ptr) ::oRelayClientMessageToNoder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oRelayClientMessageToNoder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oRelayClientMessageToNoder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoRelayClientMessageToNoder}, {}};

static void InitDefaultsoRelayServerMessageToClient() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oRelayServerMessageToClient_default_instance_;
    new (ptr) ::oRelayServerMessageToClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oRelayServerMessageToClient::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oRelayServerMessageToClient =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoRelayServerMessageToClient}, {}};

static void InitDefaultsoLoadReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oLoadReport_default_instance_;
    new (ptr) ::oLoadReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oLoadReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oLoadReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoLoadReport}, {}};

static void InitDefaultsoMatcher() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oMatcher_default_instance_;
    new (ptr) ::oMatcher();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oMatcher::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oMatcher =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoMatcher}, {}};

static void InitDefaultsoTellNoderMatchSuccessd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oTellNoderMatchSuccessd_default_instance_;
    new (ptr) ::oTellNoderMatchSuccessd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oTellNoderMatchSuccessd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_oTellNoderMatchSuccessd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsoTellNoderMatchSuccessd}, {
      &protobuf_Noder_2eproto::scc_info_oMatcher.base,}};

static void InitDefaultsoTellGameOver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_oTellGameOver_default_instance_;
    new (ptr) ::oTellGameOver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::oTellGameOver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_oTellGameOver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoTellGameOver}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_oAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oAssigneID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oNoderInited.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oBroadcastNoder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oAccountReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oAccountLogout.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oAccountRelogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oRelayClientMessageToNoder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oRelayServerMessageToClient.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oLoadReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oMatcher.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oTellNoderMatchSuccessd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_oTellGameOver.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAddress, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAddress, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAddress, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oReport, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oReport, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oReport, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAssigneID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAssigneID, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oNoderInited, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oBroadcastNoder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oBroadcastNoder, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oBroadcastNoder, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oBroadcastNoder, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAccountReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAccountReport, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAccountReport, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAccountLogout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAccountLogout, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAccountRelogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAccountRelogin, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oAccountRelogin, account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oRelayClientMessageToNoder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oRelayClientMessageToNoder, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oRelayClientMessageToNoder, messageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oRelayClientMessageToNoder, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oRelayServerMessageToClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oRelayServerMessageToClient, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oRelayServerMessageToClient, messageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oRelayServerMessageToClient, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oLoadReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oLoadReport, load_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oMatcher, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oMatcher, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oMatcher, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oMatcher, isai_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oTellNoderMatchSuccessd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oTellNoderMatchSuccessd, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oTellNoderMatchSuccessd, logicid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oTellNoderMatchSuccessd, matcher_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oTellGameOver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::oTellGameOver, account_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::oAddress)},
  { 8, -1, sizeof(::oReport)},
  { 16, -1, sizeof(::oAssigneID)},
  { 22, -1, sizeof(::oNoderInited)},
  { 27, -1, sizeof(::oBroadcastNoder)},
  { 35, -1, sizeof(::oAccountReport)},
  { 42, -1, sizeof(::oAccountLogout)},
  { 48, -1, sizeof(::oAccountRelogin)},
  { 55, -1, sizeof(::oRelayClientMessageToNoder)},
  { 63, -1, sizeof(::oRelayServerMessageToClient)},
  { 71, -1, sizeof(::oLoadReport)},
  { 77, -1, sizeof(::oMatcher)},
  { 85, -1, sizeof(::oTellNoderMatchSuccessd)},
  { 93, -1, sizeof(::oTellGameOver)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oAssigneID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oNoderInited_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oBroadcastNoder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oAccountReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oAccountLogout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oAccountRelogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oRelayClientMessageToNoder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oRelayServerMessageToClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oLoadReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oMatcher_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oTellNoderMatchSuccessd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_oTellGameOver_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Noder.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Noder.proto\"2\n\010oAddress\022\014\n\004area\030\001 \001(\005\022"
      "\n\n\002ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\"\?\n\007oReport\022\014\n\004"
      "name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\032\n\007address\030\003 \001(\0132"
      "\t.oAddress\"\030\n\noAssigneID\022\n\n\002id\030\001 \001(\005\"\016\n\014"
      "oNoderInited\"G\n\017oBroadcastNoder\022\n\n\002id\030\001 "
      "\001(\005\022\014\n\004name\030\002 \001(\t\022\032\n\007address\030\003 \001(\0132\t.oAd"
      "dress\"1\n\016oAccountReport\022\016\n\006gateid\030\001 \001(\005\022"
      "\017\n\007account\030\002 \001(\003\"!\n\016oAccountLogout\022\017\n\007ac"
      "count\030\001 \001(\003\"2\n\017oAccountRelogin\022\016\n\006gateid"
      "\030\001 \001(\005\022\017\n\007account\030\002 \001(\003\"N\n\032oRelayClientM"
      "essageToNoder\022\017\n\007account\030\001 \001(\003\022\021\n\tmessag"
      "eid\030\002 \001(\005\022\014\n\004body\030\003 \001(\014\"O\n\033oRelayServerM"
      "essageToClient\022\017\n\007account\030\001 \003(\003\022\021\n\tmessa"
      "geid\030\002 \001(\005\022\014\n\004body\030\003 \001(\014\"\033\n\013oLoadReport\022"
      "\014\n\004load\030\001 \001(\005\"9\n\010oMatcher\022\017\n\007account\030\001 \001"
      "(\003\022\016\n\006gateid\030\002 \001(\005\022\014\n\004isai\030\003 \001(\010\"W\n\027oTel"
      "lNoderMatchSuccessd\022\017\n\007matchid\030\001 \001(\005\022\017\n\007"
      "logicid\030\002 \001(\005\022\032\n\007matcher\030\003 \003(\0132\t.oMatche"
      "r\" \n\roTellGameOver\022\017\n\007account\030\001 \001(\003*\202\002\n\t"
      "eNProtoID\022\n\n\006Report\020\000\022\r\n\tAssigneID\020\001\022\017\n\013"
      "NoderInited\020\002\022\022\n\016BroadcastNoder\020\003\022\021\n\rAcc"
      "ountReport\020\004\022\021\n\rAccountLogout\020\005\022\022\n\016Accou"
      "ntRelogin\020\006\022\035\n\031RelayClientMessageToNoder"
      "\020\007\022\036\n\032RelayServerMessageToClient\020\010\022\016\n\nLo"
      "adReport\0202\022\032\n\026TellNoderMatchSuccessd\0203\022\020"
      "\n\014TellGameOver\020db\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1024);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Noder.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Noder_2eproto
const ::google::protobuf::EnumDescriptor* eNProtoID_descriptor() {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Noder_2eproto::file_level_enum_descriptors[0];
}
bool eNProtoID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 50:
    case 51:
    case 100:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void oAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oAddress::kAreaFieldNumber;
const int oAddress::kIpFieldNumber;
const int oAddress::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oAddress::oAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oAddress)
}
oAddress::oAddress(const oAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&area_, &from.area_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&area_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:oAddress)
}

void oAddress::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&area_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&area_)) + sizeof(port_));
}

oAddress::~oAddress() {
  // @@protoc_insertion_point(destructor:oAddress)
  SharedDtor();
}

void oAddress::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void oAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oAddress::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oAddress& oAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oAddress.base);
  return *internal_default_instance();
}


void oAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:oAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&area_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&area_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool oAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 area = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oAddress.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oAddress)
  return false;
#undef DO_
}

void oAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area = 1;
  if (this->area() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->area(), output);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oAddress.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oAddress)
}

::google::protobuf::uint8* oAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area = 1;
  if (this->area() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->area(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oAddress.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oAddress)
  return target;
}

size_t oAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // int32 area = 1;
  if (this->area() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->area());
  }

  // int32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const oAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oAddress)
    MergeFrom(*source);
  }
}

void oAddress::MergeFrom(const oAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.area() != 0) {
    set_area(from.area());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void oAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oAddress::CopyFrom(const oAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oAddress::IsInitialized() const {
  return true;
}

void oAddress::Swap(oAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oAddress::InternalSwap(oAddress* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(area_, other->area_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oAddress::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oReport::InitAsDefaultInstance() {
  ::_oReport_default_instance_._instance.get_mutable()->address_ = const_cast< ::oAddress*>(
      ::oAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oReport::kNameFieldNumber;
const int oReport::kIdFieldNumber;
const int oReport::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oReport::oReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oReport)
}
oReport::oReport(const oReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_address()) {
    address_ = new ::oAddress(*from.address_);
  } else {
    address_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:oReport)
}

void oReport::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&address_)) + sizeof(id_));
}

oReport::~oReport() {
  // @@protoc_insertion_point(destructor:oReport)
  SharedDtor();
}

void oReport::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void oReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oReport::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oReport& oReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oReport.base);
  return *internal_default_instance();
}


void oReport::Clear() {
// @@protoc_insertion_point(message_clear_start:oReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool oReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oReport.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .oAddress address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oReport)
  return false;
#undef DO_
}

void oReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oReport.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // .oAddress address = 3;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oReport)
}

::google::protobuf::uint8* oReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oReport.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // .oAddress address = 3;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_address(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oReport)
  return target;
}

size_t oReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oReport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .oAddress address = 3;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oReport)
  GOOGLE_DCHECK_NE(&from, this);
  const oReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oReport)
    MergeFrom(*source);
  }
}

void oReport::MergeFrom(const oReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_address()) {
    mutable_address()->::oAddress::MergeFrom(from.address());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void oReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oReport::CopyFrom(const oReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oReport::IsInitialized() const {
  return true;
}

void oReport::Swap(oReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oReport::InternalSwap(oReport* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(address_, other->address_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oReport::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oAssigneID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oAssigneID::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oAssigneID::oAssigneID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oAssigneID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oAssigneID)
}
oAssigneID::oAssigneID(const oAssigneID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:oAssigneID)
}

void oAssigneID::SharedCtor() {
  id_ = 0;
}

oAssigneID::~oAssigneID() {
  // @@protoc_insertion_point(destructor:oAssigneID)
  SharedDtor();
}

void oAssigneID::SharedDtor() {
}

void oAssigneID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oAssigneID::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oAssigneID& oAssigneID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oAssigneID.base);
  return *internal_default_instance();
}


void oAssigneID::Clear() {
// @@protoc_insertion_point(message_clear_start:oAssigneID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

bool oAssigneID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oAssigneID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oAssigneID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oAssigneID)
  return false;
#undef DO_
}

void oAssigneID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oAssigneID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oAssigneID)
}

::google::protobuf::uint8* oAssigneID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oAssigneID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oAssigneID)
  return target;
}

size_t oAssigneID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oAssigneID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oAssigneID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oAssigneID)
  GOOGLE_DCHECK_NE(&from, this);
  const oAssigneID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oAssigneID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oAssigneID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oAssigneID)
    MergeFrom(*source);
  }
}

void oAssigneID::MergeFrom(const oAssigneID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oAssigneID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void oAssigneID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oAssigneID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oAssigneID::CopyFrom(const oAssigneID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oAssigneID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oAssigneID::IsInitialized() const {
  return true;
}

void oAssigneID::Swap(oAssigneID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oAssigneID::InternalSwap(oAssigneID* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oAssigneID::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oNoderInited::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oNoderInited::oNoderInited()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oNoderInited.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oNoderInited)
}
oNoderInited::oNoderInited(const oNoderInited& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oNoderInited)
}

void oNoderInited::SharedCtor() {
}

oNoderInited::~oNoderInited() {
  // @@protoc_insertion_point(destructor:oNoderInited)
  SharedDtor();
}

void oNoderInited::SharedDtor() {
}

void oNoderInited::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oNoderInited::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oNoderInited& oNoderInited::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oNoderInited.base);
  return *internal_default_instance();
}


void oNoderInited::Clear() {
// @@protoc_insertion_point(message_clear_start:oNoderInited)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool oNoderInited::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oNoderInited)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:oNoderInited)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oNoderInited)
  return false;
#undef DO_
}

void oNoderInited::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oNoderInited)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oNoderInited)
}

::google::protobuf::uint8* oNoderInited::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oNoderInited)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oNoderInited)
  return target;
}

size_t oNoderInited::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oNoderInited)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oNoderInited::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oNoderInited)
  GOOGLE_DCHECK_NE(&from, this);
  const oNoderInited* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oNoderInited>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oNoderInited)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oNoderInited)
    MergeFrom(*source);
  }
}

void oNoderInited::MergeFrom(const oNoderInited& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oNoderInited)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void oNoderInited::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oNoderInited)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oNoderInited::CopyFrom(const oNoderInited& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oNoderInited)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oNoderInited::IsInitialized() const {
  return true;
}

void oNoderInited::Swap(oNoderInited* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oNoderInited::InternalSwap(oNoderInited* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oNoderInited::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oBroadcastNoder::InitAsDefaultInstance() {
  ::_oBroadcastNoder_default_instance_._instance.get_mutable()->address_ = const_cast< ::oAddress*>(
      ::oAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oBroadcastNoder::kIdFieldNumber;
const int oBroadcastNoder::kNameFieldNumber;
const int oBroadcastNoder::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oBroadcastNoder::oBroadcastNoder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oBroadcastNoder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oBroadcastNoder)
}
oBroadcastNoder::oBroadcastNoder(const oBroadcastNoder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_address()) {
    address_ = new ::oAddress(*from.address_);
  } else {
    address_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:oBroadcastNoder)
}

void oBroadcastNoder::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&address_)) + sizeof(id_));
}

oBroadcastNoder::~oBroadcastNoder() {
  // @@protoc_insertion_point(destructor:oBroadcastNoder)
  SharedDtor();
}

void oBroadcastNoder::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void oBroadcastNoder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oBroadcastNoder::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oBroadcastNoder& oBroadcastNoder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oBroadcastNoder.base);
  return *internal_default_instance();
}


void oBroadcastNoder::Clear() {
// @@protoc_insertion_point(message_clear_start:oBroadcastNoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool oBroadcastNoder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oBroadcastNoder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oBroadcastNoder.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .oAddress address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oBroadcastNoder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oBroadcastNoder)
  return false;
#undef DO_
}

void oBroadcastNoder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oBroadcastNoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oBroadcastNoder.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .oAddress address = 3;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oBroadcastNoder)
}

::google::protobuf::uint8* oBroadcastNoder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oBroadcastNoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oBroadcastNoder.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .oAddress address = 3;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_address(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oBroadcastNoder)
  return target;
}

size_t oBroadcastNoder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oBroadcastNoder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .oAddress address = 3;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oBroadcastNoder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oBroadcastNoder)
  GOOGLE_DCHECK_NE(&from, this);
  const oBroadcastNoder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oBroadcastNoder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oBroadcastNoder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oBroadcastNoder)
    MergeFrom(*source);
  }
}

void oBroadcastNoder::MergeFrom(const oBroadcastNoder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oBroadcastNoder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_address()) {
    mutable_address()->::oAddress::MergeFrom(from.address());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void oBroadcastNoder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oBroadcastNoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oBroadcastNoder::CopyFrom(const oBroadcastNoder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oBroadcastNoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oBroadcastNoder::IsInitialized() const {
  return true;
}

void oBroadcastNoder::Swap(oBroadcastNoder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oBroadcastNoder::InternalSwap(oBroadcastNoder* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(address_, other->address_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oBroadcastNoder::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oAccountReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oAccountReport::kGateidFieldNumber;
const int oAccountReport::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oAccountReport::oAccountReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oAccountReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oAccountReport)
}
oAccountReport::oAccountReport(const oAccountReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_, &from.account_,
    static_cast<size_t>(reinterpret_cast<char*>(&gateid_) -
    reinterpret_cast<char*>(&account_)) + sizeof(gateid_));
  // @@protoc_insertion_point(copy_constructor:oAccountReport)
}

void oAccountReport::SharedCtor() {
  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(gateid_));
}

oAccountReport::~oAccountReport() {
  // @@protoc_insertion_point(destructor:oAccountReport)
  SharedDtor();
}

void oAccountReport::SharedDtor() {
}

void oAccountReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oAccountReport::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oAccountReport& oAccountReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oAccountReport.base);
  return *internal_default_instance();
}


void oAccountReport::Clear() {
// @@protoc_insertion_point(message_clear_start:oAccountReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(gateid_));
  _internal_metadata_.Clear();
}

bool oAccountReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oAccountReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 gateid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oAccountReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oAccountReport)
  return false;
#undef DO_
}

void oAccountReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oAccountReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 gateid = 1;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gateid(), output);
  }

  // int64 account = 2;
  if (this->account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oAccountReport)
}

::google::protobuf::uint8* oAccountReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oAccountReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 gateid = 1;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gateid(), target);
  }

  // int64 account = 2;
  if (this->account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oAccountReport)
  return target;
}

size_t oAccountReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oAccountReport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 account = 2;
  if (this->account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account());
  }

  // int32 gateid = 1;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gateid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oAccountReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oAccountReport)
  GOOGLE_DCHECK_NE(&from, this);
  const oAccountReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oAccountReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oAccountReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oAccountReport)
    MergeFrom(*source);
  }
}

void oAccountReport::MergeFrom(const oAccountReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oAccountReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account() != 0) {
    set_account(from.account());
  }
  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
}

void oAccountReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oAccountReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oAccountReport::CopyFrom(const oAccountReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oAccountReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oAccountReport::IsInitialized() const {
  return true;
}

void oAccountReport::Swap(oAccountReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oAccountReport::InternalSwap(oAccountReport* other) {
  using std::swap;
  swap(account_, other->account_);
  swap(gateid_, other->gateid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oAccountReport::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oAccountLogout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oAccountLogout::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oAccountLogout::oAccountLogout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oAccountLogout.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oAccountLogout)
}
oAccountLogout::oAccountLogout(const oAccountLogout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_ = from.account_;
  // @@protoc_insertion_point(copy_constructor:oAccountLogout)
}

void oAccountLogout::SharedCtor() {
  account_ = GOOGLE_LONGLONG(0);
}

oAccountLogout::~oAccountLogout() {
  // @@protoc_insertion_point(destructor:oAccountLogout)
  SharedDtor();
}

void oAccountLogout::SharedDtor() {
}

void oAccountLogout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oAccountLogout::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oAccountLogout& oAccountLogout::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oAccountLogout.base);
  return *internal_default_instance();
}


void oAccountLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:oAccountLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool oAccountLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oAccountLogout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oAccountLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oAccountLogout)
  return false;
#undef DO_
}

void oAccountLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oAccountLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account = 1;
  if (this->account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oAccountLogout)
}

::google::protobuf::uint8* oAccountLogout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oAccountLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account = 1;
  if (this->account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oAccountLogout)
  return target;
}

size_t oAccountLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oAccountLogout)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 account = 1;
  if (this->account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oAccountLogout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oAccountLogout)
  GOOGLE_DCHECK_NE(&from, this);
  const oAccountLogout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oAccountLogout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oAccountLogout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oAccountLogout)
    MergeFrom(*source);
  }
}

void oAccountLogout::MergeFrom(const oAccountLogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oAccountLogout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account() != 0) {
    set_account(from.account());
  }
}

void oAccountLogout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oAccountLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oAccountLogout::CopyFrom(const oAccountLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oAccountLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oAccountLogout::IsInitialized() const {
  return true;
}

void oAccountLogout::Swap(oAccountLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oAccountLogout::InternalSwap(oAccountLogout* other) {
  using std::swap;
  swap(account_, other->account_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oAccountLogout::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oAccountRelogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oAccountRelogin::kGateidFieldNumber;
const int oAccountRelogin::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oAccountRelogin::oAccountRelogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oAccountRelogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oAccountRelogin)
}
oAccountRelogin::oAccountRelogin(const oAccountRelogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_, &from.account_,
    static_cast<size_t>(reinterpret_cast<char*>(&gateid_) -
    reinterpret_cast<char*>(&account_)) + sizeof(gateid_));
  // @@protoc_insertion_point(copy_constructor:oAccountRelogin)
}

void oAccountRelogin::SharedCtor() {
  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(gateid_));
}

oAccountRelogin::~oAccountRelogin() {
  // @@protoc_insertion_point(destructor:oAccountRelogin)
  SharedDtor();
}

void oAccountRelogin::SharedDtor() {
}

void oAccountRelogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oAccountRelogin::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oAccountRelogin& oAccountRelogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oAccountRelogin.base);
  return *internal_default_instance();
}


void oAccountRelogin::Clear() {
// @@protoc_insertion_point(message_clear_start:oAccountRelogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(gateid_));
  _internal_metadata_.Clear();
}

bool oAccountRelogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oAccountRelogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 gateid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oAccountRelogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oAccountRelogin)
  return false;
#undef DO_
}

void oAccountRelogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oAccountRelogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 gateid = 1;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gateid(), output);
  }

  // int64 account = 2;
  if (this->account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oAccountRelogin)
}

::google::protobuf::uint8* oAccountRelogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oAccountRelogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 gateid = 1;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gateid(), target);
  }

  // int64 account = 2;
  if (this->account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oAccountRelogin)
  return target;
}

size_t oAccountRelogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oAccountRelogin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 account = 2;
  if (this->account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account());
  }

  // int32 gateid = 1;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gateid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oAccountRelogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oAccountRelogin)
  GOOGLE_DCHECK_NE(&from, this);
  const oAccountRelogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oAccountRelogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oAccountRelogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oAccountRelogin)
    MergeFrom(*source);
  }
}

void oAccountRelogin::MergeFrom(const oAccountRelogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oAccountRelogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account() != 0) {
    set_account(from.account());
  }
  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
}

void oAccountRelogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oAccountRelogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oAccountRelogin::CopyFrom(const oAccountRelogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oAccountRelogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oAccountRelogin::IsInitialized() const {
  return true;
}

void oAccountRelogin::Swap(oAccountRelogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oAccountRelogin::InternalSwap(oAccountRelogin* other) {
  using std::swap;
  swap(account_, other->account_);
  swap(gateid_, other->gateid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oAccountRelogin::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oRelayClientMessageToNoder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oRelayClientMessageToNoder::kAccountFieldNumber;
const int oRelayClientMessageToNoder::kMessageidFieldNumber;
const int oRelayClientMessageToNoder::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oRelayClientMessageToNoder::oRelayClientMessageToNoder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oRelayClientMessageToNoder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oRelayClientMessageToNoder)
}
oRelayClientMessageToNoder::oRelayClientMessageToNoder(const oRelayClientMessageToNoder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  ::memcpy(&account_, &from.account_,
    static_cast<size_t>(reinterpret_cast<char*>(&messageid_) -
    reinterpret_cast<char*>(&account_)) + sizeof(messageid_));
  // @@protoc_insertion_point(copy_constructor:oRelayClientMessageToNoder)
}

void oRelayClientMessageToNoder::SharedCtor() {
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messageid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(messageid_));
}

oRelayClientMessageToNoder::~oRelayClientMessageToNoder() {
  // @@protoc_insertion_point(destructor:oRelayClientMessageToNoder)
  SharedDtor();
}

void oRelayClientMessageToNoder::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void oRelayClientMessageToNoder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oRelayClientMessageToNoder::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oRelayClientMessageToNoder& oRelayClientMessageToNoder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oRelayClientMessageToNoder.base);
  return *internal_default_instance();
}


void oRelayClientMessageToNoder::Clear() {
// @@protoc_insertion_point(message_clear_start:oRelayClientMessageToNoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messageid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(messageid_));
  _internal_metadata_.Clear();
}

bool oRelayClientMessageToNoder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oRelayClientMessageToNoder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 messageid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oRelayClientMessageToNoder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oRelayClientMessageToNoder)
  return false;
#undef DO_
}

void oRelayClientMessageToNoder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oRelayClientMessageToNoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account = 1;
  if (this->account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->account(), output);
  }

  // int32 messageid = 2;
  if (this->messageid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->messageid(), output);
  }

  // bytes body = 3;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oRelayClientMessageToNoder)
}

::google::protobuf::uint8* oRelayClientMessageToNoder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oRelayClientMessageToNoder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account = 1;
  if (this->account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->account(), target);
  }

  // int32 messageid = 2;
  if (this->messageid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->messageid(), target);
  }

  // bytes body = 3;
  if (this->body().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oRelayClientMessageToNoder)
  return target;
}

size_t oRelayClientMessageToNoder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oRelayClientMessageToNoder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes body = 3;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->body());
  }

  // int64 account = 1;
  if (this->account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account());
  }

  // int32 messageid = 2;
  if (this->messageid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->messageid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oRelayClientMessageToNoder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oRelayClientMessageToNoder)
  GOOGLE_DCHECK_NE(&from, this);
  const oRelayClientMessageToNoder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oRelayClientMessageToNoder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oRelayClientMessageToNoder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oRelayClientMessageToNoder)
    MergeFrom(*source);
  }
}

void oRelayClientMessageToNoder::MergeFrom(const oRelayClientMessageToNoder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oRelayClientMessageToNoder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.account() != 0) {
    set_account(from.account());
  }
  if (from.messageid() != 0) {
    set_messageid(from.messageid());
  }
}

void oRelayClientMessageToNoder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oRelayClientMessageToNoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oRelayClientMessageToNoder::CopyFrom(const oRelayClientMessageToNoder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oRelayClientMessageToNoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oRelayClientMessageToNoder::IsInitialized() const {
  return true;
}

void oRelayClientMessageToNoder::Swap(oRelayClientMessageToNoder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oRelayClientMessageToNoder::InternalSwap(oRelayClientMessageToNoder* other) {
  using std::swap;
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(account_, other->account_);
  swap(messageid_, other->messageid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oRelayClientMessageToNoder::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oRelayServerMessageToClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oRelayServerMessageToClient::kAccountFieldNumber;
const int oRelayServerMessageToClient::kMessageidFieldNumber;
const int oRelayServerMessageToClient::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oRelayServerMessageToClient::oRelayServerMessageToClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oRelayServerMessageToClient.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oRelayServerMessageToClient)
}
oRelayServerMessageToClient::oRelayServerMessageToClient(const oRelayServerMessageToClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      account_(from.account_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  messageid_ = from.messageid_;
  // @@protoc_insertion_point(copy_constructor:oRelayServerMessageToClient)
}

void oRelayServerMessageToClient::SharedCtor() {
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messageid_ = 0;
}

oRelayServerMessageToClient::~oRelayServerMessageToClient() {
  // @@protoc_insertion_point(destructor:oRelayServerMessageToClient)
  SharedDtor();
}

void oRelayServerMessageToClient::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void oRelayServerMessageToClient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oRelayServerMessageToClient::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oRelayServerMessageToClient& oRelayServerMessageToClient::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oRelayServerMessageToClient.base);
  return *internal_default_instance();
}


void oRelayServerMessageToClient::Clear() {
// @@protoc_insertion_point(message_clear_start:oRelayServerMessageToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.Clear();
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messageid_ = 0;
  _internal_metadata_.Clear();
}

bool oRelayServerMessageToClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oRelayServerMessageToClient)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_account())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_account())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 messageid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oRelayServerMessageToClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oRelayServerMessageToClient)
  return false;
#undef DO_
}

void oRelayServerMessageToClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oRelayServerMessageToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 account = 1;
  if (this->account_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _account_cached_byte_size_));
  }
  for (int i = 0, n = this->account_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->account(i), output);
  }

  // int32 messageid = 2;
  if (this->messageid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->messageid(), output);
  }

  // bytes body = 3;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oRelayServerMessageToClient)
}

::google::protobuf::uint8* oRelayServerMessageToClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oRelayServerMessageToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 account = 1;
  if (this->account_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _account_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->account_, target);
  }

  // int32 messageid = 2;
  if (this->messageid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->messageid(), target);
  }

  // bytes body = 3;
  if (this->body().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oRelayServerMessageToClient)
  return target;
}

size_t oRelayServerMessageToClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oRelayServerMessageToClient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 account = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->account_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _account_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes body = 3;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->body());
  }

  // int32 messageid = 2;
  if (this->messageid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->messageid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oRelayServerMessageToClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oRelayServerMessageToClient)
  GOOGLE_DCHECK_NE(&from, this);
  const oRelayServerMessageToClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oRelayServerMessageToClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oRelayServerMessageToClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oRelayServerMessageToClient)
    MergeFrom(*source);
  }
}

void oRelayServerMessageToClient::MergeFrom(const oRelayServerMessageToClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oRelayServerMessageToClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  account_.MergeFrom(from.account_);
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.messageid() != 0) {
    set_messageid(from.messageid());
  }
}

void oRelayServerMessageToClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oRelayServerMessageToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oRelayServerMessageToClient::CopyFrom(const oRelayServerMessageToClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oRelayServerMessageToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oRelayServerMessageToClient::IsInitialized() const {
  return true;
}

void oRelayServerMessageToClient::Swap(oRelayServerMessageToClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oRelayServerMessageToClient::InternalSwap(oRelayServerMessageToClient* other) {
  using std::swap;
  account_.InternalSwap(&other->account_);
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(messageid_, other->messageid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oRelayServerMessageToClient::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oLoadReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oLoadReport::kLoadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oLoadReport::oLoadReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oLoadReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oLoadReport)
}
oLoadReport::oLoadReport(const oLoadReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  load_ = from.load_;
  // @@protoc_insertion_point(copy_constructor:oLoadReport)
}

void oLoadReport::SharedCtor() {
  load_ = 0;
}

oLoadReport::~oLoadReport() {
  // @@protoc_insertion_point(destructor:oLoadReport)
  SharedDtor();
}

void oLoadReport::SharedDtor() {
}

void oLoadReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oLoadReport::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oLoadReport& oLoadReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oLoadReport.base);
  return *internal_default_instance();
}


void oLoadReport::Clear() {
// @@protoc_insertion_point(message_clear_start:oLoadReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  load_ = 0;
  _internal_metadata_.Clear();
}

bool oLoadReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oLoadReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 load = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &load_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oLoadReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oLoadReport)
  return false;
#undef DO_
}

void oLoadReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oLoadReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 load = 1;
  if (this->load() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->load(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oLoadReport)
}

::google::protobuf::uint8* oLoadReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oLoadReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 load = 1;
  if (this->load() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->load(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oLoadReport)
  return target;
}

size_t oLoadReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oLoadReport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 load = 1;
  if (this->load() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->load());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oLoadReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oLoadReport)
  GOOGLE_DCHECK_NE(&from, this);
  const oLoadReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oLoadReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oLoadReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oLoadReport)
    MergeFrom(*source);
  }
}

void oLoadReport::MergeFrom(const oLoadReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oLoadReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.load() != 0) {
    set_load(from.load());
  }
}

void oLoadReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oLoadReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oLoadReport::CopyFrom(const oLoadReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oLoadReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oLoadReport::IsInitialized() const {
  return true;
}

void oLoadReport::Swap(oLoadReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oLoadReport::InternalSwap(oLoadReport* other) {
  using std::swap;
  swap(load_, other->load_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oLoadReport::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oMatcher::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oMatcher::kAccountFieldNumber;
const int oMatcher::kGateidFieldNumber;
const int oMatcher::kIsaiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oMatcher::oMatcher()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oMatcher.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oMatcher)
}
oMatcher::oMatcher(const oMatcher& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_, &from.account_,
    static_cast<size_t>(reinterpret_cast<char*>(&isai_) -
    reinterpret_cast<char*>(&account_)) + sizeof(isai_));
  // @@protoc_insertion_point(copy_constructor:oMatcher)
}

void oMatcher::SharedCtor() {
  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isai_) -
      reinterpret_cast<char*>(&account_)) + sizeof(isai_));
}

oMatcher::~oMatcher() {
  // @@protoc_insertion_point(destructor:oMatcher)
  SharedDtor();
}

void oMatcher::SharedDtor() {
}

void oMatcher::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oMatcher::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oMatcher& oMatcher::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oMatcher.base);
  return *internal_default_instance();
}


void oMatcher::Clear() {
// @@protoc_insertion_point(message_clear_start:oMatcher)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isai_) -
      reinterpret_cast<char*>(&account_)) + sizeof(isai_));
  _internal_metadata_.Clear();
}

bool oMatcher::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oMatcher)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isai = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isai_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oMatcher)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oMatcher)
  return false;
#undef DO_
}

void oMatcher::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oMatcher)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account = 1;
  if (this->account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->account(), output);
  }

  // int32 gateid = 2;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gateid(), output);
  }

  // bool isai = 3;
  if (this->isai() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isai(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oMatcher)
}

::google::protobuf::uint8* oMatcher::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oMatcher)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account = 1;
  if (this->account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->account(), target);
  }

  // int32 gateid = 2;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gateid(), target);
  }

  // bool isai = 3;
  if (this->isai() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isai(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oMatcher)
  return target;
}

size_t oMatcher::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oMatcher)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 account = 1;
  if (this->account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account());
  }

  // int32 gateid = 2;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gateid());
  }

  // bool isai = 3;
  if (this->isai() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oMatcher::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oMatcher)
  GOOGLE_DCHECK_NE(&from, this);
  const oMatcher* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oMatcher>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oMatcher)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oMatcher)
    MergeFrom(*source);
  }
}

void oMatcher::MergeFrom(const oMatcher& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oMatcher)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account() != 0) {
    set_account(from.account());
  }
  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
  if (from.isai() != 0) {
    set_isai(from.isai());
  }
}

void oMatcher::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oMatcher)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oMatcher::CopyFrom(const oMatcher& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oMatcher)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oMatcher::IsInitialized() const {
  return true;
}

void oMatcher::Swap(oMatcher* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oMatcher::InternalSwap(oMatcher* other) {
  using std::swap;
  swap(account_, other->account_);
  swap(gateid_, other->gateid_);
  swap(isai_, other->isai_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oMatcher::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oTellNoderMatchSuccessd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oTellNoderMatchSuccessd::kMatchidFieldNumber;
const int oTellNoderMatchSuccessd::kLogicidFieldNumber;
const int oTellNoderMatchSuccessd::kMatcherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oTellNoderMatchSuccessd::oTellNoderMatchSuccessd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oTellNoderMatchSuccessd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oTellNoderMatchSuccessd)
}
oTellNoderMatchSuccessd::oTellNoderMatchSuccessd(const oTellNoderMatchSuccessd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      matcher_(from.matcher_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&matchid_, &from.matchid_,
    static_cast<size_t>(reinterpret_cast<char*>(&logicid_) -
    reinterpret_cast<char*>(&matchid_)) + sizeof(logicid_));
  // @@protoc_insertion_point(copy_constructor:oTellNoderMatchSuccessd)
}

void oTellNoderMatchSuccessd::SharedCtor() {
  ::memset(&matchid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logicid_) -
      reinterpret_cast<char*>(&matchid_)) + sizeof(logicid_));
}

oTellNoderMatchSuccessd::~oTellNoderMatchSuccessd() {
  // @@protoc_insertion_point(destructor:oTellNoderMatchSuccessd)
  SharedDtor();
}

void oTellNoderMatchSuccessd::SharedDtor() {
}

void oTellNoderMatchSuccessd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oTellNoderMatchSuccessd::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oTellNoderMatchSuccessd& oTellNoderMatchSuccessd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oTellNoderMatchSuccessd.base);
  return *internal_default_instance();
}


void oTellNoderMatchSuccessd::Clear() {
// @@protoc_insertion_point(message_clear_start:oTellNoderMatchSuccessd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matcher_.Clear();
  ::memset(&matchid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logicid_) -
      reinterpret_cast<char*>(&matchid_)) + sizeof(logicid_));
  _internal_metadata_.Clear();
}

bool oTellNoderMatchSuccessd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oTellNoderMatchSuccessd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 logicid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logicid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .oMatcher matcher = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_matcher()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oTellNoderMatchSuccessd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oTellNoderMatchSuccessd)
  return false;
#undef DO_
}

void oTellNoderMatchSuccessd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oTellNoderMatchSuccessd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->matchid(), output);
  }

  // int32 logicid = 2;
  if (this->logicid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->logicid(), output);
  }

  // repeated .oMatcher matcher = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matcher_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->matcher(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oTellNoderMatchSuccessd)
}

::google::protobuf::uint8* oTellNoderMatchSuccessd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oTellNoderMatchSuccessd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->matchid(), target);
  }

  // int32 logicid = 2;
  if (this->logicid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->logicid(), target);
  }

  // repeated .oMatcher matcher = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matcher_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->matcher(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oTellNoderMatchSuccessd)
  return target;
}

size_t oTellNoderMatchSuccessd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oTellNoderMatchSuccessd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .oMatcher matcher = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->matcher_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->matcher(static_cast<int>(i)));
    }
  }

  // int32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->matchid());
  }

  // int32 logicid = 2;
  if (this->logicid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logicid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oTellNoderMatchSuccessd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oTellNoderMatchSuccessd)
  GOOGLE_DCHECK_NE(&from, this);
  const oTellNoderMatchSuccessd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oTellNoderMatchSuccessd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oTellNoderMatchSuccessd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oTellNoderMatchSuccessd)
    MergeFrom(*source);
  }
}

void oTellNoderMatchSuccessd::MergeFrom(const oTellNoderMatchSuccessd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oTellNoderMatchSuccessd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matcher_.MergeFrom(from.matcher_);
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.logicid() != 0) {
    set_logicid(from.logicid());
  }
}

void oTellNoderMatchSuccessd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oTellNoderMatchSuccessd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oTellNoderMatchSuccessd::CopyFrom(const oTellNoderMatchSuccessd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oTellNoderMatchSuccessd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oTellNoderMatchSuccessd::IsInitialized() const {
  return true;
}

void oTellNoderMatchSuccessd::Swap(oTellNoderMatchSuccessd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oTellNoderMatchSuccessd::InternalSwap(oTellNoderMatchSuccessd* other) {
  using std::swap;
  CastToBase(&matcher_)->InternalSwap(CastToBase(&other->matcher_));
  swap(matchid_, other->matchid_);
  swap(logicid_, other->logicid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oTellNoderMatchSuccessd::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void oTellGameOver::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int oTellGameOver::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

oTellGameOver::oTellGameOver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Noder_2eproto::scc_info_oTellGameOver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:oTellGameOver)
}
oTellGameOver::oTellGameOver(const oTellGameOver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_ = from.account_;
  // @@protoc_insertion_point(copy_constructor:oTellGameOver)
}

void oTellGameOver::SharedCtor() {
  account_ = GOOGLE_LONGLONG(0);
}

oTellGameOver::~oTellGameOver() {
  // @@protoc_insertion_point(destructor:oTellGameOver)
  SharedDtor();
}

void oTellGameOver::SharedDtor() {
}

void oTellGameOver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* oTellGameOver::descriptor() {
  ::protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const oTellGameOver& oTellGameOver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Noder_2eproto::scc_info_oTellGameOver.base);
  return *internal_default_instance();
}


void oTellGameOver::Clear() {
// @@protoc_insertion_point(message_clear_start:oTellGameOver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool oTellGameOver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oTellGameOver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oTellGameOver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oTellGameOver)
  return false;
#undef DO_
}

void oTellGameOver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oTellGameOver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account = 1;
  if (this->account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:oTellGameOver)
}

::google::protobuf::uint8* oTellGameOver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oTellGameOver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 account = 1;
  if (this->account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:oTellGameOver)
  return target;
}

size_t oTellGameOver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oTellGameOver)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 account = 1;
  if (this->account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oTellGameOver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oTellGameOver)
  GOOGLE_DCHECK_NE(&from, this);
  const oTellGameOver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const oTellGameOver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oTellGameOver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oTellGameOver)
    MergeFrom(*source);
  }
}

void oTellGameOver::MergeFrom(const oTellGameOver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oTellGameOver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account() != 0) {
    set_account(from.account());
  }
}

void oTellGameOver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oTellGameOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oTellGameOver::CopyFrom(const oTellGameOver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oTellGameOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oTellGameOver::IsInitialized() const {
  return true;
}

void oTellGameOver::Swap(oTellGameOver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void oTellGameOver::InternalSwap(oTellGameOver* other) {
  using std::swap;
  swap(account_, other->account_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata oTellGameOver::GetMetadata() const {
  protobuf_Noder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Noder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oAddress* Arena::CreateMaybeMessage< ::oAddress >(Arena* arena) {
  return Arena::CreateInternal< ::oAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oReport* Arena::CreateMaybeMessage< ::oReport >(Arena* arena) {
  return Arena::CreateInternal< ::oReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oAssigneID* Arena::CreateMaybeMessage< ::oAssigneID >(Arena* arena) {
  return Arena::CreateInternal< ::oAssigneID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oNoderInited* Arena::CreateMaybeMessage< ::oNoderInited >(Arena* arena) {
  return Arena::CreateInternal< ::oNoderInited >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oBroadcastNoder* Arena::CreateMaybeMessage< ::oBroadcastNoder >(Arena* arena) {
  return Arena::CreateInternal< ::oBroadcastNoder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oAccountReport* Arena::CreateMaybeMessage< ::oAccountReport >(Arena* arena) {
  return Arena::CreateInternal< ::oAccountReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oAccountLogout* Arena::CreateMaybeMessage< ::oAccountLogout >(Arena* arena) {
  return Arena::CreateInternal< ::oAccountLogout >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oAccountRelogin* Arena::CreateMaybeMessage< ::oAccountRelogin >(Arena* arena) {
  return Arena::CreateInternal< ::oAccountRelogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oRelayClientMessageToNoder* Arena::CreateMaybeMessage< ::oRelayClientMessageToNoder >(Arena* arena) {
  return Arena::CreateInternal< ::oRelayClientMessageToNoder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oRelayServerMessageToClient* Arena::CreateMaybeMessage< ::oRelayServerMessageToClient >(Arena* arena) {
  return Arena::CreateInternal< ::oRelayServerMessageToClient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oLoadReport* Arena::CreateMaybeMessage< ::oLoadReport >(Arena* arena) {
  return Arena::CreateInternal< ::oLoadReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oMatcher* Arena::CreateMaybeMessage< ::oMatcher >(Arena* arena) {
  return Arena::CreateInternal< ::oMatcher >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oTellNoderMatchSuccessd* Arena::CreateMaybeMessage< ::oTellNoderMatchSuccessd >(Arena* arena) {
  return Arena::CreateInternal< ::oTellNoderMatchSuccessd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::oTellGameOver* Arena::CreateMaybeMessage< ::oTellGameOver >(Arena* arena) {
  return Arena::CreateInternal< ::oTellGameOver >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
