// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/test_messages_proto3.proto

#include <google/protobuf/test_messages_proto3.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2fstruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue;
}  // namespace protobuf_google_2fprotobuf_2fstruct_2eproto
namespace protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ForeignMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapBoolBoolEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapInt32FloatEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapInt32Int32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapInt64Int64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapStringBytesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapStringStringEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto ::google::protobuf::internal::SCCInfo<33> scc_info_TestAllTypesProto3;
}  // namespace protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BytesValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int32Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UInt32Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UInt64Value;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace protobuf_test_messages {
namespace proto3 {
class TestAllTypesProto3_NestedMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_NestedMessage>
      _instance;
} _TestAllTypesProto3_NestedMessage_default_instance_;
class TestAllTypesProto3_MapInt32Int32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapInt32Int32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapInt32Int32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapInt64Int64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapInt64Int64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapInt64Int64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapInt32FloatEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapInt32FloatEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapInt32FloatEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapBoolBoolEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapBoolBoolEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapBoolBoolEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringStringEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapStringStringEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapStringStringEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringBytesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapStringBytesEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapStringBytesEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse>
      _instance;
} _TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse_default_instance_;
class TestAllTypesProto3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto3>
      _instance;
  ::google::protobuf::uint32 oneof_uint32_;
  const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* oneof_nested_message_;
  ::google::protobuf::internal::ArenaStringPtr oneof_string_;
  ::google::protobuf::internal::ArenaStringPtr oneof_bytes_;
  bool oneof_bool_;
  ::google::protobuf::uint64 oneof_uint64_;
  float oneof_float_;
  double oneof_double_;
  int oneof_enum_;
} _TestAllTypesProto3_default_instance_;
class ForeignMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForeignMessage>
      _instance;
} _ForeignMessage_default_instance_;
}  // namespace proto3
}  // namespace protobuf_test_messages
namespace protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto {
static void InitDefaultsTestAllTypesProto3_MapInt32Int32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapInt32Int32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapInt32Int32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapInt32Int32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapInt64Int64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapInt64Int64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapInt64Int64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapInt64Int64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapUint32Uint32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapUint32Uint32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapUint64Uint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapUint64Uint64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapSint32Sint32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapSint32Sint32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapSint64Sint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapSint64Sint64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapInt32FloatEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapInt32FloatEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapInt32FloatEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapInt32FloatEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapInt32DoubleEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapInt32DoubleEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapBoolBoolEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapBoolBoolEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapBoolBoolEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapBoolBoolEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapStringStringEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringStringEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapStringStringEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapStringStringEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapStringBytesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringBytesEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapStringBytesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapStringBytesEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse}, {
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_ForeignMessage.base,}};

static void InitDefaultsTestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_NestedMessage_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse();
  }
  {
    void* ptr = &::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::TestAllTypesProto3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage::InitAsDefaultInstance();
  ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse::InitAsDefaultInstance();
  ::protobuf_test_messages::proto3::TestAllTypesProto3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<33> scc_info_TestAllTypesProto3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 33, InitDefaultsTestAllTypesProto3}, {
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_ForeignMessage.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapInt32Int32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapInt64Int64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapInt32FloatEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapBoolBoolEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapStringStringEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapStringBytesEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int32Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_UInt32Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_UInt64Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_FloatValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BytesValue.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,
      &protobuf_google_2fprotobuf_2fstruct_2eproto::scc_info_ListValue.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsForeignMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto3::_ForeignMessage_default_instance_;
    new (ptr) ::protobuf_test_messages::proto3::ForeignMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_test_messages::proto3::ForeignMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ForeignMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsForeignMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapInt32Int32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapInt64Int64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapInt32FloatEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapBoolBoolEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapStringStringEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapStringBytesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto3.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForeignMessage.base);
}

::google::protobuf::Metadata file_level_metadata[22];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage, corecursive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_nested_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_foreign_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_nested_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_foreign_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_string_piece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, recursive_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_nested_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_foreign_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_nested_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_foreign_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_string_piece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_int32_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_int64_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_uint32_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_uint64_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_sint32_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_sint64_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_fixed32_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_fixed64_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_sfixed32_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_sfixed64_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_int32_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_int32_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_bool_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_string_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_string_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_string_nested_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_string_foreign_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_string_nested_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, map_string_foreign_enum_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_uint32_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_nested_message_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_string_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_bytes_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_bool_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_uint64_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_float_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_double_),
  offsetof(::protobuf_test_messages::proto3::TestAllTypesProto3DefaultTypeInternal, oneof_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_bool_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_int32_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_int64_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_uint32_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_uint64_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_float_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_double_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_string_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_bytes_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_bool_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_int32_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_int64_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_uint32_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_uint64_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_float_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_double_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_string_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_bytes_wrapper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_field_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_struct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_any_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, optional_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_fieldmask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_struct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_any_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, repeated_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, fieldname1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field_name2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, _field_name3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field__name4__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field0name5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field_0_name6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, fieldname7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, fieldname8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field_name9_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field_name10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field_name11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field_name12_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, __field_name13_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, __field_name14_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field__name15_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field__name16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field_name17___),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, field_name18___),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::TestAllTypesProto3, oneof_field_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::ForeignMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto3::ForeignMessage, c_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage)},
  { 7, 14, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse)},
  { 16, 23, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse)},
  { 25, 32, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse)},
  { 34, 41, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse)},
  { 43, 50, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse)},
  { 52, 59, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse)},
  { 61, 68, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse)},
  { 70, 77, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse)},
  { 79, 86, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse)},
  { 88, 95, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse)},
  { 97, 104, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse)},
  { 106, 113, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse)},
  { 115, 122, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse)},
  { 124, 131, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse)},
  { 133, 140, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse)},
  { 142, 149, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse)},
  { 151, 158, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse)},
  { 160, 167, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse)},
  { 169, 176, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse)},
  { 178, -1, sizeof(::protobuf_test_messages::proto3::TestAllTypesProto3)},
  { 303, -1, sizeof(::protobuf_test_messages::proto3::ForeignMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_NestedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapInt32Int32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapInt64Int64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapInt32FloatEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapBoolBoolEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringStringEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringBytesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto3::_ForeignMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/protobuf/test_messages_proto3.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*google/protobuf/test_messages_proto3.p"
      "roto\022\035protobuf_test_messages.proto3\032\031goo"
      "gle/protobuf/any.proto\032\036google/protobuf/"
      "duration.proto\032 google/protobuf/field_ma"
      "sk.proto\032\034google/protobuf/struct.proto\032\037"
      "google/protobuf/timestamp.proto\032\036google/"
      "protobuf/wrappers.proto\"\264;\n\022TestAllTypes"
      "Proto3\022\026\n\016optional_int32\030\001 \001(\005\022\026\n\016option"
      "al_int64\030\002 \001(\003\022\027\n\017optional_uint32\030\003 \001(\r\022"
      "\027\n\017optional_uint64\030\004 \001(\004\022\027\n\017optional_sin"
      "t32\030\005 \001(\021\022\027\n\017optional_sint64\030\006 \001(\022\022\030\n\020op"
      "tional_fixed32\030\007 \001(\007\022\030\n\020optional_fixed64"
      "\030\010 \001(\006\022\031\n\021optional_sfixed32\030\t \001(\017\022\031\n\021opt"
      "ional_sfixed64\030\n \001(\020\022\026\n\016optional_float\030\013"
      " \001(\002\022\027\n\017optional_double\030\014 \001(\001\022\025\n\roptiona"
      "l_bool\030\r \001(\010\022\027\n\017optional_string\030\016 \001(\t\022\026\n"
      "\016optional_bytes\030\017 \001(\014\022`\n\027optional_nested"
      "_message\030\022 \001(\0132\?.protobuf_test_messages."
      "proto3.TestAllTypesProto3.NestedMessage\022"
      "O\n\030optional_foreign_message\030\023 \001(\0132-.prot"
      "obuf_test_messages.proto3.ForeignMessage"
      "\022Z\n\024optional_nested_enum\030\025 \001(\0162<.protobu"
      "f_test_messages.proto3.TestAllTypesProto"
      "3.NestedEnum\022I\n\025optional_foreign_enum\030\026 "
      "\001(\0162*.protobuf_test_messages.proto3.Fore"
      "ignEnum\022!\n\025optional_string_piece\030\030 \001(\tB\002"
      "\010\002\022\031\n\roptional_cord\030\031 \001(\tB\002\010\001\022L\n\021recursi"
      "ve_message\030\033 \001(\01321.protobuf_test_message"
      "s.proto3.TestAllTypesProto3\022\026\n\016repeated_"
      "int32\030\037 \003(\005\022\026\n\016repeated_int64\030  \003(\003\022\027\n\017r"
      "epeated_uint32\030! \003(\r\022\027\n\017repeated_uint64\030"
      "\" \003(\004\022\027\n\017repeated_sint32\030# \003(\021\022\027\n\017repeat"
      "ed_sint64\030$ \003(\022\022\030\n\020repeated_fixed32\030% \003("
      "\007\022\030\n\020repeated_fixed64\030& \003(\006\022\031\n\021repeated_"
      "sfixed32\030\' \003(\017\022\031\n\021repeated_sfixed64\030( \003("
      "\020\022\026\n\016repeated_float\030) \003(\002\022\027\n\017repeated_do"
      "uble\030* \003(\001\022\025\n\rrepeated_bool\030+ \003(\010\022\027\n\017rep"
      "eated_string\030, \003(\t\022\026\n\016repeated_bytes\030- \003"
      "(\014\022`\n\027repeated_nested_message\0300 \003(\0132\?.pr"
      "otobuf_test_messages.proto3.TestAllTypes"
      "Proto3.NestedMessage\022O\n\030repeated_foreign"
      "_message\0301 \003(\0132-.protobuf_test_messages."
      "proto3.ForeignMessage\022Z\n\024repeated_nested"
      "_enum\0303 \003(\0162<.protobuf_test_messages.pro"
      "to3.TestAllTypesProto3.NestedEnum\022I\n\025rep"
      "eated_foreign_enum\0304 \003(\0162*.protobuf_test"
      "_messages.proto3.ForeignEnum\022!\n\025repeated"
      "_string_piece\0306 \003(\tB\002\010\002\022\031\n\rrepeated_cord"
      "\0307 \003(\tB\002\010\001\022]\n\017map_int32_int32\0308 \003(\0132D.pr"
      "otobuf_test_messages.proto3.TestAllTypes"
      "Proto3.MapInt32Int32Entry\022]\n\017map_int64_i"
      "nt64\0309 \003(\0132D.protobuf_test_messages.prot"
      "o3.TestAllTypesProto3.MapInt64Int64Entry"
      "\022a\n\021map_uint32_uint32\030: \003(\0132F.protobuf_t"
      "est_messages.proto3.TestAllTypesProto3.M"
      "apUint32Uint32Entry\022a\n\021map_uint64_uint64"
      "\030; \003(\0132F.protobuf_test_messages.proto3.T"
      "estAllTypesProto3.MapUint64Uint64Entry\022a"
      "\n\021map_sint32_sint32\030< \003(\0132F.protobuf_tes"
      "t_messages.proto3.TestAllTypesProto3.Map"
      "Sint32Sint32Entry\022a\n\021map_sint64_sint64\030="
      " \003(\0132F.protobuf_test_messages.proto3.Tes"
      "tAllTypesProto3.MapSint64Sint64Entry\022e\n\023"
      "map_fixed32_fixed32\030> \003(\0132H.protobuf_tes"
      "t_messages.proto3.TestAllTypesProto3.Map"
      "Fixed32Fixed32Entry\022e\n\023map_fixed64_fixed"
      "64\030\? \003(\0132H.protobuf_test_messages.proto3"
      ".TestAllTypesProto3.MapFixed64Fixed64Ent"
      "ry\022i\n\025map_sfixed32_sfixed32\030@ \003(\0132J.prot"
      "obuf_test_messages.proto3.TestAllTypesPr"
      "oto3.MapSfixed32Sfixed32Entry\022i\n\025map_sfi"
      "xed64_sfixed64\030A \003(\0132J.protobuf_test_mes"
      "sages.proto3.TestAllTypesProto3.MapSfixe"
      "d64Sfixed64Entry\022]\n\017map_int32_float\030B \003("
      "\0132D.protobuf_test_messages.proto3.TestAl"
      "lTypesProto3.MapInt32FloatEntry\022_\n\020map_i"
      "nt32_double\030C \003(\0132E.protobuf_test_messag"
      "es.proto3.TestAllTypesProto3.MapInt32Dou"
      "bleEntry\022Y\n\rmap_bool_bool\030D \003(\0132B.protob"
      "uf_test_messages.proto3.TestAllTypesProt"
      "o3.MapBoolBoolEntry\022a\n\021map_string_string"
      "\030E \003(\0132F.protobuf_test_messages.proto3.T"
      "estAllTypesProto3.MapStringStringEntry\022_"
      "\n\020map_string_bytes\030F \003(\0132E.protobuf_test"
      "_messages.proto3.TestAllTypesProto3.MapS"
      "tringBytesEntry\022p\n\031map_string_nested_mes"
      "sage\030G \003(\0132M.protobuf_test_messages.prot"
      "o3.TestAllTypesProto3.MapStringNestedMes"
      "sageEntry\022r\n\032map_string_foreign_message\030"
      "H \003(\0132N.protobuf_test_messages.proto3.Te"
      "stAllTypesProto3.MapStringForeignMessage"
      "Entry\022j\n\026map_string_nested_enum\030I \003(\0132J."
      "protobuf_test_messages.proto3.TestAllTyp"
      "esProto3.MapStringNestedEnumEntry\022l\n\027map"
      "_string_foreign_enum\030J \003(\0132K.protobuf_te"
      "st_messages.proto3.TestAllTypesProto3.Ma"
      "pStringForeignEnumEntry\022\026\n\014oneof_uint32\030"
      "o \001(\rH\000\022_\n\024oneof_nested_message\030p \001(\0132\?."
      "protobuf_test_messages.proto3.TestAllTyp"
      "esProto3.NestedMessageH\000\022\026\n\014oneof_string"
      "\030q \001(\tH\000\022\025\n\013oneof_bytes\030r \001(\014H\000\022\024\n\noneof"
      "_bool\030s \001(\010H\000\022\026\n\014oneof_uint64\030t \001(\004H\000\022\025\n"
      "\013oneof_float\030u \001(\002H\000\022\026\n\014oneof_double\030v \001"
      "(\001H\000\022R\n\noneof_enum\030w \001(\0162<.protobuf_test"
      "_messages.proto3.TestAllTypesProto3.Nest"
      "edEnumH\000\022:\n\025optional_bool_wrapper\030\311\001 \001(\013"
      "2\032.google.protobuf.BoolValue\022<\n\026optional"
      "_int32_wrapper\030\312\001 \001(\0132\033.google.protobuf."
      "Int32Value\022<\n\026optional_int64_wrapper\030\313\001 "
      "\001(\0132\033.google.protobuf.Int64Value\022>\n\027opti"
      "onal_uint32_wrapper\030\314\001 \001(\0132\034.google.prot"
      "obuf.UInt32Value\022>\n\027optional_uint64_wrap"
      "per\030\315\001 \001(\0132\034.google.protobuf.UInt64Value"
      "\022<\n\026optional_float_wrapper\030\316\001 \001(\0132\033.goog"
      "le.protobuf.FloatValue\022>\n\027optional_doubl"
      "e_wrapper\030\317\001 \001(\0132\034.google.protobuf.Doubl"
      "eValue\022>\n\027optional_string_wrapper\030\320\001 \001(\013"
      "2\034.google.protobuf.StringValue\022<\n\026option"
      "al_bytes_wrapper\030\321\001 \001(\0132\033.google.protobu"
      "f.BytesValue\022:\n\025repeated_bool_wrapper\030\323\001"
      " \003(\0132\032.google.protobuf.BoolValue\022<\n\026repe"
      "ated_int32_wrapper\030\324\001 \003(\0132\033.google.proto"
      "buf.Int32Value\022<\n\026repeated_int64_wrapper"
      "\030\325\001 \003(\0132\033.google.protobuf.Int64Value\022>\n\027"
      "repeated_uint32_wrapper\030\326\001 \003(\0132\034.google."
      "protobuf.UInt32Value\022>\n\027repeated_uint64_"
      "wrapper\030\327\001 \003(\0132\034.google.protobuf.UInt64V"
      "alue\022<\n\026repeated_float_wrapper\030\330\001 \003(\0132\033."
      "google.protobuf.FloatValue\022>\n\027repeated_d"
      "ouble_wrapper\030\331\001 \003(\0132\034.google.protobuf.D"
      "oubleValue\022>\n\027repeated_string_wrapper\030\332\001"
      " \003(\0132\034.google.protobuf.StringValue\022<\n\026re"
      "peated_bytes_wrapper\030\333\001 \003(\0132\033.google.pro"
      "tobuf.BytesValue\0225\n\021optional_duration\030\255\002"
      " \001(\0132\031.google.protobuf.Duration\0227\n\022optio"
      "nal_timestamp\030\256\002 \001(\0132\032.google.protobuf.T"
      "imestamp\0228\n\023optional_field_mask\030\257\002 \001(\0132\032"
      ".google.protobuf.FieldMask\0221\n\017optional_s"
      "truct\030\260\002 \001(\0132\027.google.protobuf.Struct\022+\n"
      "\014optional_any\030\261\002 \001(\0132\024.google.protobuf.A"
      "ny\022/\n\016optional_value\030\262\002 \001(\0132\026.google.pro"
      "tobuf.Value\0225\n\021repeated_duration\030\267\002 \003(\0132"
      "\031.google.protobuf.Duration\0227\n\022repeated_t"
      "imestamp\030\270\002 \003(\0132\032.google.protobuf.Timest"
      "amp\0227\n\022repeated_fieldmask\030\271\002 \003(\0132\032.googl"
      "e.protobuf.FieldMask\0221\n\017repeated_struct\030"
      "\304\002 \003(\0132\027.google.protobuf.Struct\022+\n\014repea"
      "ted_any\030\273\002 \003(\0132\024.google.protobuf.Any\022/\n\016"
      "repeated_value\030\274\002 \003(\0132\026.google.protobuf."
      "Value\022\023\n\nfieldname1\030\221\003 \001(\005\022\024\n\013field_name"
      "2\030\222\003 \001(\005\022\025\n\014_field_name3\030\223\003 \001(\005\022\026\n\rfield"
      "__name4_\030\224\003 \001(\005\022\024\n\013field0name5\030\225\003 \001(\005\022\026\n"
      "\rfield_0_name6\030\226\003 \001(\005\022\023\n\nfieldName7\030\227\003 \001"
      "(\005\022\023\n\nFieldName8\030\230\003 \001(\005\022\024\n\013field_Name9\030\231"
      "\003 \001(\005\022\025\n\014Field_Name10\030\232\003 \001(\005\022\025\n\014FIELD_NA"
      "ME11\030\233\003 \001(\005\022\025\n\014FIELD_name12\030\234\003 \001(\005\022\027\n\016__"
      "field_name13\030\235\003 \001(\005\022\027\n\016__Field_name14\030\236\003"
      " \001(\005\022\026\n\rfield__name15\030\237\003 \001(\005\022\026\n\rfield__N"
      "ame16\030\240\003 \001(\005\022\027\n\016field_name17__\030\241\003 \001(\005\022\027\n"
      "\016Field_name18__\030\242\003 \001(\005\032b\n\rNestedMessage\022"
      "\t\n\001a\030\001 \001(\005\022F\n\013corecursive\030\002 \001(\01321.protob"
      "uf_test_messages.proto3.TestAllTypesProt"
      "o3\0324\n\022MapInt32Int32Entry\022\013\n\003key\030\001 \001(\005\022\r\n"
      "\005value\030\002 \001(\005:\0028\001\0324\n\022MapInt64Int64Entry\022\013"
      "\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001\0326\n\024MapUin"
      "t32Uint32Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001"
      "(\r:\0028\001\0326\n\024MapUint64Uint64Entry\022\013\n\003key\030\001 "
      "\001(\004\022\r\n\005value\030\002 \001(\004:\0028\001\0326\n\024MapSint32Sint3"
      "2Entry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\021:\0028\001\0326"
      "\n\024MapSint64Sint64Entry\022\013\n\003key\030\001 \001(\022\022\r\n\005v"
      "alue\030\002 \001(\022:\0028\001\0328\n\026MapFixed32Fixed32Entry"
      "\022\013\n\003key\030\001 \001(\007\022\r\n\005value\030\002 \001(\007:\0028\001\0328\n\026MapF"
      "ixed64Fixed64Entry\022\013\n\003key\030\001 \001(\006\022\r\n\005value"
      "\030\002 \001(\006:\0028\001\032:\n\030MapSfixed32Sfixed32Entry\022\013"
      "\n\003key\030\001 \001(\017\022\r\n\005value\030\002 \001(\017:\0028\001\032:\n\030MapSfi"
      "xed64Sfixed64Entry\022\013\n\003key\030\001 \001(\020\022\r\n\005value"
      "\030\002 \001(\020:\0028\001\0324\n\022MapInt32FloatEntry\022\013\n\003key\030"
      "\001 \001(\005\022\r\n\005value\030\002 \001(\002:\0028\001\0325\n\023MapInt32Doub"
      "leEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\001:\0028\001\032"
      "2\n\020MapBoolBoolEntry\022\013\n\003key\030\001 \001(\010\022\r\n\005valu"
      "e\030\002 \001(\010:\0028\001\0326\n\024MapStringStringEntry\022\013\n\003k"
      "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0325\n\023MapString"
      "BytesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\002"
      "8\001\032~\n\033MapStringNestedMessageEntry\022\013\n\003key"
      "\030\001 \001(\t\022N\n\005value\030\002 \001(\0132\?.protobuf_test_me"
      "ssages.proto3.TestAllTypesProto3.NestedM"
      "essage:\0028\001\032m\n\034MapStringForeignMessageEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022<\n\005value\030\002 \001(\0132-.protobu"
      "f_test_messages.proto3.ForeignMessage:\0028"
      "\001\032x\n\030MapStringNestedEnumEntry\022\013\n\003key\030\001 \001"
      "(\t\022K\n\005value\030\002 \001(\0162<.protobuf_test_messag"
      "es.proto3.TestAllTypesProto3.NestedEnum:"
      "\0028\001\032g\n\031MapStringForeignEnumEntry\022\013\n\003key\030"
      "\001 \001(\t\0229\n\005value\030\002 \001(\0162*.protobuf_test_mes"
      "sages.proto3.ForeignEnum:\0028\001\"9\n\nNestedEn"
      "um\022\007\n\003FOO\020\000\022\007\n\003BAR\020\001\022\007\n\003BAZ\020\002\022\020\n\003NEG\020\377\377\377"
      "\377\377\377\377\377\377\001B\r\n\013oneof_fieldJ\006\010\365\003\020\377\003\"\033\n\016Foreig"
      "nMessage\022\t\n\001c\030\001 \001(\005*@\n\013ForeignEnum\022\017\n\013FO"
      "REIGN_FOO\020\000\022\017\n\013FOREIGN_BAR\020\001\022\017\n\013FOREIGN_"
      "BAZ\020\002B8\n(com.google.protobuf_test_messag"
      "es.proto3H\001\370\001\001\242\002\006Proto3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8031);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/test_messages_proto3.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto
namespace protobuf_test_messages {
namespace proto3 {
const ::google::protobuf::EnumDescriptor* TestAllTypesProto3_NestedEnum_descriptor() {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_enum_descriptors[0];
}
bool TestAllTypesProto3_NestedEnum_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TestAllTypesProto3_NestedEnum TestAllTypesProto3::FOO;
const TestAllTypesProto3_NestedEnum TestAllTypesProto3::BAR;
const TestAllTypesProto3_NestedEnum TestAllTypesProto3::BAZ;
const TestAllTypesProto3_NestedEnum TestAllTypesProto3::NEG;
const TestAllTypesProto3_NestedEnum TestAllTypesProto3::NestedEnum_MIN;
const TestAllTypesProto3_NestedEnum TestAllTypesProto3::NestedEnum_MAX;
const int TestAllTypesProto3::NestedEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ForeignEnum_descriptor() {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_enum_descriptors[1];
}
bool ForeignEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TestAllTypesProto3_NestedMessage::InitAsDefaultInstance() {
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_NestedMessage_default_instance_._instance.get_mutable()->corecursive_ = const_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3*>(
      ::protobuf_test_messages::proto3::TestAllTypesProto3::internal_default_instance());
}
void TestAllTypesProto3_NestedMessage::unsafe_arena_set_allocated_corecursive(
    ::protobuf_test_messages::proto3::TestAllTypesProto3* corecursive) {
  if (GetArenaNoVirtual() == NULL) {
    delete corecursive_;
  }
  corecursive_ = corecursive;
  if (corecursive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage.corecursive)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto3_NestedMessage::kAFieldNumber;
const int TestAllTypesProto3_NestedMessage::kCorecursiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesProto3_NestedMessage::TestAllTypesProto3_NestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
}
TestAllTypesProto3_NestedMessage::TestAllTypesProto3_NestedMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
}
TestAllTypesProto3_NestedMessage::TestAllTypesProto3_NestedMessage(const TestAllTypesProto3_NestedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_corecursive()) {
    corecursive_ = new ::protobuf_test_messages::proto3::TestAllTypesProto3(*from.corecursive_);
  } else {
    corecursive_ = NULL;
  }
  a_ = from.a_;
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
}

void TestAllTypesProto3_NestedMessage::SharedCtor() {
  ::memset(&corecursive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_) -
      reinterpret_cast<char*>(&corecursive_)) + sizeof(a_));
}

TestAllTypesProto3_NestedMessage::~TestAllTypesProto3_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  SharedDtor();
}

void TestAllTypesProto3_NestedMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete corecursive_;
}

void TestAllTypesProto3_NestedMessage::ArenaDtor(void* object) {
  TestAllTypesProto3_NestedMessage* _this = reinterpret_cast< TestAllTypesProto3_NestedMessage* >(object);
  (void)_this;
}
void TestAllTypesProto3_NestedMessage::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TestAllTypesProto3_NestedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestAllTypesProto3_NestedMessage::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestAllTypesProto3_NestedMessage& TestAllTypesProto3_NestedMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3.base);
  return *internal_default_instance();
}


void TestAllTypesProto3_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && corecursive_ != NULL) {
    delete corecursive_;
  }
  corecursive_ = NULL;
  a_ = 0;
  _internal_metadata_.Clear();
}

bool TestAllTypesProto3_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf_test_messages.proto3.TestAllTypesProto3 corecursive = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_corecursive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  return false;
#undef DO_
}

void TestAllTypesProto3_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 a = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3 corecursive = 2;
  if (this->has_corecursive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_corecursive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
}

::google::protobuf::uint8* TestAllTypesProto3_NestedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 a = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3 corecursive = 2;
  if (this->has_corecursive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_corecursive(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  return target;
}

size_t TestAllTypesProto3_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protobuf_test_messages.proto3.TestAllTypesProto3 corecursive = 2;
  if (this->has_corecursive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *corecursive_);
  }

  // int32 a = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestAllTypesProto3_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TestAllTypesProto3_NestedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypesProto3_NestedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
    MergeFrom(*source);
  }
}

void TestAllTypesProto3_NestedMessage::MergeFrom(const TestAllTypesProto3_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_corecursive()) {
    mutable_corecursive()->::protobuf_test_messages::proto3::TestAllTypesProto3::MergeFrom(from.corecursive());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
}

void TestAllTypesProto3_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypesProto3_NestedMessage::CopyFrom(const TestAllTypesProto3_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypesProto3_NestedMessage::IsInitialized() const {
  return true;
}

void TestAllTypesProto3_NestedMessage::Swap(TestAllTypesProto3_NestedMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypesProto3_NestedMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TestAllTypesProto3_NestedMessage::UnsafeArenaSwap(TestAllTypesProto3_NestedMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypesProto3_NestedMessage::InternalSwap(TestAllTypesProto3_NestedMessage* other) {
  using std::swap;
  swap(corecursive_, other->corecursive_);
  swap(a_, other->a_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestAllTypesProto3_NestedMessage::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TestAllTypesProto3_MapInt32Int32Entry_DoNotUse::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse() {}
TestAllTypesProto3_MapInt32Int32Entry_DoNotUse::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapInt32Int32Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapInt32Int32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapInt32Int32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[1];
}
void TestAllTypesProto3_MapInt32Int32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapInt64Int64Entry_DoNotUse::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse() {}
TestAllTypesProto3_MapInt64Int64Entry_DoNotUse::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapInt64Int64Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapInt64Int64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapInt64Int64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[2];
}
void TestAllTypesProto3_MapInt64Int64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse() {}
TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[3];
}
void TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse() {}
TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[4];
}
void TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse() {}
TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[5];
}
void TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse() {}
TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[6];
}
void TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse() {}
TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[7];
}
void TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse() {}
TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[8];
}
void TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse() {}
TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[9];
}
void TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse() {}
TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[10];
}
void TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapInt32FloatEntry_DoNotUse::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse() {}
TestAllTypesProto3_MapInt32FloatEntry_DoNotUse::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapInt32FloatEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapInt32FloatEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapInt32FloatEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[11];
}
void TestAllTypesProto3_MapInt32FloatEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse() {}
TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[12];
}
void TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapBoolBoolEntry_DoNotUse::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse() {}
TestAllTypesProto3_MapBoolBoolEntry_DoNotUse::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapBoolBoolEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapBoolBoolEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapBoolBoolEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[13];
}
void TestAllTypesProto3_MapBoolBoolEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapStringStringEntry_DoNotUse::TestAllTypesProto3_MapStringStringEntry_DoNotUse() {}
TestAllTypesProto3_MapStringStringEntry_DoNotUse::TestAllTypesProto3_MapStringStringEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapStringStringEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapStringStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapStringStringEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[14];
}
void TestAllTypesProto3_MapStringStringEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapStringBytesEntry_DoNotUse::TestAllTypesProto3_MapStringBytesEntry_DoNotUse() {}
TestAllTypesProto3_MapStringBytesEntry_DoNotUse::TestAllTypesProto3_MapStringBytesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapStringBytesEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapStringBytesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapStringBytesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[15];
}
void TestAllTypesProto3_MapStringBytesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse() {}
TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[16];
}
void TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse() {}
TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[17];
}
void TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse() {}
TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[18];
}
void TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse() {}
TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse::MergeFrom(const TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[19];
}
void TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TestAllTypesProto3::InitAsDefaultInstance() {
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_nested_message_ = const_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage*>(
      ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_foreign_message_ = const_cast< ::protobuf_test_messages::proto3::ForeignMessage*>(
      ::protobuf_test_messages::proto3::ForeignMessage::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->recursive_message_ = const_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3*>(
      ::protobuf_test_messages::proto3::TestAllTypesProto3::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_uint32_ = 0u;
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_nested_message_ = const_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage*>(
      ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_bytes_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_bool_ = false;
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_uint64_ = GOOGLE_ULONGLONG(0);
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_float_ = 0;
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_double_ = 0;
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_.oneof_enum_ = 0;
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_bool_wrapper_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_int32_wrapper_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_int64_wrapper_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_uint32_wrapper_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_uint64_wrapper_ = const_cast< ::google::protobuf::UInt64Value*>(
      ::google::protobuf::UInt64Value::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_float_wrapper_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_double_wrapper_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_string_wrapper_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_bytes_wrapper_ = const_cast< ::google::protobuf::BytesValue*>(
      ::google::protobuf::BytesValue::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_field_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_struct_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_any_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_._instance.get_mutable()->optional_value_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_nested_message(
    ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* optional_nested_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_nested_message_;
  }
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_nested_message)
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_foreign_message(
    ::protobuf_test_messages::proto3::ForeignMessage* optional_foreign_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_foreign_message_;
  }
  optional_foreign_message_ = optional_foreign_message;
  if (optional_foreign_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_foreign_message)
}
void TestAllTypesProto3::unsafe_arena_set_allocated_recursive_message(
    ::protobuf_test_messages::proto3::TestAllTypesProto3* recursive_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete recursive_message_;
  }
  recursive_message_ = recursive_message;
  if (recursive_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.recursive_message)
}
void TestAllTypesProto3::set_allocated_oneof_nested_message(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* oneof_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (oneof_nested_message) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(oneof_nested_message);
    if (message_arena != submessage_arena) {
      oneof_nested_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oneof_nested_message, submessage_arena);
    }
    set_has_oneof_nested_message();
    oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_nested_message)
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_bool_wrapper(
    ::google::protobuf::BoolValue* optional_bool_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_bool_wrapper_;
  }
  optional_bool_wrapper_ = optional_bool_wrapper;
  if (optional_bool_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bool_wrapper)
}
void TestAllTypesProto3::clear_optional_bool_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_bool_wrapper_ != NULL) {
    delete optional_bool_wrapper_;
  }
  optional_bool_wrapper_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_int32_wrapper(
    ::google::protobuf::Int32Value* optional_int32_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_int32_wrapper_;
  }
  optional_int32_wrapper_ = optional_int32_wrapper;
  if (optional_int32_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int32_wrapper)
}
void TestAllTypesProto3::clear_optional_int32_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_int32_wrapper_ != NULL) {
    delete optional_int32_wrapper_;
  }
  optional_int32_wrapper_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_int64_wrapper(
    ::google::protobuf::Int64Value* optional_int64_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_int64_wrapper_;
  }
  optional_int64_wrapper_ = optional_int64_wrapper;
  if (optional_int64_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int64_wrapper)
}
void TestAllTypesProto3::clear_optional_int64_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_int64_wrapper_ != NULL) {
    delete optional_int64_wrapper_;
  }
  optional_int64_wrapper_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_uint32_wrapper(
    ::google::protobuf::UInt32Value* optional_uint32_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_uint32_wrapper_;
  }
  optional_uint32_wrapper_ = optional_uint32_wrapper;
  if (optional_uint32_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint32_wrapper)
}
void TestAllTypesProto3::clear_optional_uint32_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_uint32_wrapper_ != NULL) {
    delete optional_uint32_wrapper_;
  }
  optional_uint32_wrapper_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_uint64_wrapper(
    ::google::protobuf::UInt64Value* optional_uint64_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_uint64_wrapper_;
  }
  optional_uint64_wrapper_ = optional_uint64_wrapper;
  if (optional_uint64_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint64_wrapper)
}
void TestAllTypesProto3::clear_optional_uint64_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_uint64_wrapper_ != NULL) {
    delete optional_uint64_wrapper_;
  }
  optional_uint64_wrapper_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_float_wrapper(
    ::google::protobuf::FloatValue* optional_float_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_float_wrapper_;
  }
  optional_float_wrapper_ = optional_float_wrapper;
  if (optional_float_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_float_wrapper)
}
void TestAllTypesProto3::clear_optional_float_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_float_wrapper_ != NULL) {
    delete optional_float_wrapper_;
  }
  optional_float_wrapper_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_double_wrapper(
    ::google::protobuf::DoubleValue* optional_double_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_double_wrapper_;
  }
  optional_double_wrapper_ = optional_double_wrapper;
  if (optional_double_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_double_wrapper)
}
void TestAllTypesProto3::clear_optional_double_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_double_wrapper_ != NULL) {
    delete optional_double_wrapper_;
  }
  optional_double_wrapper_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_string_wrapper(
    ::google::protobuf::StringValue* optional_string_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_string_wrapper_;
  }
  optional_string_wrapper_ = optional_string_wrapper;
  if (optional_string_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_wrapper)
}
void TestAllTypesProto3::clear_optional_string_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_string_wrapper_ != NULL) {
    delete optional_string_wrapper_;
  }
  optional_string_wrapper_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_bytes_wrapper(
    ::google::protobuf::BytesValue* optional_bytes_wrapper) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_bytes_wrapper_;
  }
  optional_bytes_wrapper_ = optional_bytes_wrapper;
  if (optional_bytes_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes_wrapper)
}
void TestAllTypesProto3::clear_optional_bytes_wrapper() {
  if (GetArenaNoVirtual() == NULL && optional_bytes_wrapper_ != NULL) {
    delete optional_bytes_wrapper_;
  }
  optional_bytes_wrapper_ = NULL;
}
void TestAllTypesProto3::clear_repeated_bool_wrapper() {
  repeated_bool_wrapper_.Clear();
}
void TestAllTypesProto3::clear_repeated_int32_wrapper() {
  repeated_int32_wrapper_.Clear();
}
void TestAllTypesProto3::clear_repeated_int64_wrapper() {
  repeated_int64_wrapper_.Clear();
}
void TestAllTypesProto3::clear_repeated_uint32_wrapper() {
  repeated_uint32_wrapper_.Clear();
}
void TestAllTypesProto3::clear_repeated_uint64_wrapper() {
  repeated_uint64_wrapper_.Clear();
}
void TestAllTypesProto3::clear_repeated_float_wrapper() {
  repeated_float_wrapper_.Clear();
}
void TestAllTypesProto3::clear_repeated_double_wrapper() {
  repeated_double_wrapper_.Clear();
}
void TestAllTypesProto3::clear_repeated_string_wrapper() {
  repeated_string_wrapper_.Clear();
}
void TestAllTypesProto3::clear_repeated_bytes_wrapper() {
  repeated_bytes_wrapper_.Clear();
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_duration(
    ::google::protobuf::Duration* optional_duration) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_duration_;
  }
  optional_duration_ = optional_duration;
  if (optional_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_duration)
}
void TestAllTypesProto3::clear_optional_duration() {
  if (GetArenaNoVirtual() == NULL && optional_duration_ != NULL) {
    delete optional_duration_;
  }
  optional_duration_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_timestamp(
    ::google::protobuf::Timestamp* optional_timestamp) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_timestamp_;
  }
  optional_timestamp_ = optional_timestamp;
  if (optional_timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_timestamp)
}
void TestAllTypesProto3::clear_optional_timestamp() {
  if (GetArenaNoVirtual() == NULL && optional_timestamp_ != NULL) {
    delete optional_timestamp_;
  }
  optional_timestamp_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_field_mask(
    ::google::protobuf::FieldMask* optional_field_mask) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_field_mask_;
  }
  optional_field_mask_ = optional_field_mask;
  if (optional_field_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_field_mask)
}
void TestAllTypesProto3::clear_optional_field_mask() {
  if (GetArenaNoVirtual() == NULL && optional_field_mask_ != NULL) {
    delete optional_field_mask_;
  }
  optional_field_mask_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_struct(
    ::google::protobuf::Struct* optional_struct) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_struct_;
  }
  optional_struct_ = optional_struct;
  if (optional_struct) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_struct)
}
void TestAllTypesProto3::clear_optional_struct() {
  if (GetArenaNoVirtual() == NULL && optional_struct_ != NULL) {
    delete optional_struct_;
  }
  optional_struct_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_any(
    ::google::protobuf::Any* optional_any) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_any_;
  }
  optional_any_ = optional_any;
  if (optional_any) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_any)
}
void TestAllTypesProto3::clear_optional_any() {
  if (GetArenaNoVirtual() == NULL && optional_any_ != NULL) {
    delete optional_any_;
  }
  optional_any_ = NULL;
}
void TestAllTypesProto3::unsafe_arena_set_allocated_optional_value(
    ::google::protobuf::Value* optional_value) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_value_;
  }
  optional_value_ = optional_value;
  if (optional_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_value)
}
void TestAllTypesProto3::clear_optional_value() {
  if (GetArenaNoVirtual() == NULL && optional_value_ != NULL) {
    delete optional_value_;
  }
  optional_value_ = NULL;
}
void TestAllTypesProto3::clear_repeated_duration() {
  repeated_duration_.Clear();
}
void TestAllTypesProto3::clear_repeated_timestamp() {
  repeated_timestamp_.Clear();
}
void TestAllTypesProto3::clear_repeated_fieldmask() {
  repeated_fieldmask_.Clear();
}
void TestAllTypesProto3::clear_repeated_struct() {
  repeated_struct_.Clear();
}
void TestAllTypesProto3::clear_repeated_any() {
  repeated_any_.Clear();
}
void TestAllTypesProto3::clear_repeated_value() {
  repeated_value_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto3::kOptionalInt32FieldNumber;
const int TestAllTypesProto3::kOptionalInt64FieldNumber;
const int TestAllTypesProto3::kOptionalUint32FieldNumber;
const int TestAllTypesProto3::kOptionalUint64FieldNumber;
const int TestAllTypesProto3::kOptionalSint32FieldNumber;
const int TestAllTypesProto3::kOptionalSint64FieldNumber;
const int TestAllTypesProto3::kOptionalFixed32FieldNumber;
const int TestAllTypesProto3::kOptionalFixed64FieldNumber;
const int TestAllTypesProto3::kOptionalSfixed32FieldNumber;
const int TestAllTypesProto3::kOptionalSfixed64FieldNumber;
const int TestAllTypesProto3::kOptionalFloatFieldNumber;
const int TestAllTypesProto3::kOptionalDoubleFieldNumber;
const int TestAllTypesProto3::kOptionalBoolFieldNumber;
const int TestAllTypesProto3::kOptionalStringFieldNumber;
const int TestAllTypesProto3::kOptionalBytesFieldNumber;
const int TestAllTypesProto3::kOptionalNestedMessageFieldNumber;
const int TestAllTypesProto3::kOptionalForeignMessageFieldNumber;
const int TestAllTypesProto3::kOptionalNestedEnumFieldNumber;
const int TestAllTypesProto3::kOptionalForeignEnumFieldNumber;
const int TestAllTypesProto3::kOptionalStringPieceFieldNumber;
const int TestAllTypesProto3::kOptionalCordFieldNumber;
const int TestAllTypesProto3::kRecursiveMessageFieldNumber;
const int TestAllTypesProto3::kRepeatedInt32FieldNumber;
const int TestAllTypesProto3::kRepeatedInt64FieldNumber;
const int TestAllTypesProto3::kRepeatedUint32FieldNumber;
const int TestAllTypesProto3::kRepeatedUint64FieldNumber;
const int TestAllTypesProto3::kRepeatedSint32FieldNumber;
const int TestAllTypesProto3::kRepeatedSint64FieldNumber;
const int TestAllTypesProto3::kRepeatedFixed32FieldNumber;
const int TestAllTypesProto3::kRepeatedFixed64FieldNumber;
const int TestAllTypesProto3::kRepeatedSfixed32FieldNumber;
const int TestAllTypesProto3::kRepeatedSfixed64FieldNumber;
const int TestAllTypesProto3::kRepeatedFloatFieldNumber;
const int TestAllTypesProto3::kRepeatedDoubleFieldNumber;
const int TestAllTypesProto3::kRepeatedBoolFieldNumber;
const int TestAllTypesProto3::kRepeatedStringFieldNumber;
const int TestAllTypesProto3::kRepeatedBytesFieldNumber;
const int TestAllTypesProto3::kRepeatedNestedMessageFieldNumber;
const int TestAllTypesProto3::kRepeatedForeignMessageFieldNumber;
const int TestAllTypesProto3::kRepeatedNestedEnumFieldNumber;
const int TestAllTypesProto3::kRepeatedForeignEnumFieldNumber;
const int TestAllTypesProto3::kRepeatedStringPieceFieldNumber;
const int TestAllTypesProto3::kRepeatedCordFieldNumber;
const int TestAllTypesProto3::kMapInt32Int32FieldNumber;
const int TestAllTypesProto3::kMapInt64Int64FieldNumber;
const int TestAllTypesProto3::kMapUint32Uint32FieldNumber;
const int TestAllTypesProto3::kMapUint64Uint64FieldNumber;
const int TestAllTypesProto3::kMapSint32Sint32FieldNumber;
const int TestAllTypesProto3::kMapSint64Sint64FieldNumber;
const int TestAllTypesProto3::kMapFixed32Fixed32FieldNumber;
const int TestAllTypesProto3::kMapFixed64Fixed64FieldNumber;
const int TestAllTypesProto3::kMapSfixed32Sfixed32FieldNumber;
const int TestAllTypesProto3::kMapSfixed64Sfixed64FieldNumber;
const int TestAllTypesProto3::kMapInt32FloatFieldNumber;
const int TestAllTypesProto3::kMapInt32DoubleFieldNumber;
const int TestAllTypesProto3::kMapBoolBoolFieldNumber;
const int TestAllTypesProto3::kMapStringStringFieldNumber;
const int TestAllTypesProto3::kMapStringBytesFieldNumber;
const int TestAllTypesProto3::kMapStringNestedMessageFieldNumber;
const int TestAllTypesProto3::kMapStringForeignMessageFieldNumber;
const int TestAllTypesProto3::kMapStringNestedEnumFieldNumber;
const int TestAllTypesProto3::kMapStringForeignEnumFieldNumber;
const int TestAllTypesProto3::kOneofUint32FieldNumber;
const int TestAllTypesProto3::kOneofNestedMessageFieldNumber;
const int TestAllTypesProto3::kOneofStringFieldNumber;
const int TestAllTypesProto3::kOneofBytesFieldNumber;
const int TestAllTypesProto3::kOneofBoolFieldNumber;
const int TestAllTypesProto3::kOneofUint64FieldNumber;
const int TestAllTypesProto3::kOneofFloatFieldNumber;
const int TestAllTypesProto3::kOneofDoubleFieldNumber;
const int TestAllTypesProto3::kOneofEnumFieldNumber;
const int TestAllTypesProto3::kOptionalBoolWrapperFieldNumber;
const int TestAllTypesProto3::kOptionalInt32WrapperFieldNumber;
const int TestAllTypesProto3::kOptionalInt64WrapperFieldNumber;
const int TestAllTypesProto3::kOptionalUint32WrapperFieldNumber;
const int TestAllTypesProto3::kOptionalUint64WrapperFieldNumber;
const int TestAllTypesProto3::kOptionalFloatWrapperFieldNumber;
const int TestAllTypesProto3::kOptionalDoubleWrapperFieldNumber;
const int TestAllTypesProto3::kOptionalStringWrapperFieldNumber;
const int TestAllTypesProto3::kOptionalBytesWrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedBoolWrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedInt32WrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedInt64WrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedUint32WrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedUint64WrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedFloatWrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedDoubleWrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedStringWrapperFieldNumber;
const int TestAllTypesProto3::kRepeatedBytesWrapperFieldNumber;
const int TestAllTypesProto3::kOptionalDurationFieldNumber;
const int TestAllTypesProto3::kOptionalTimestampFieldNumber;
const int TestAllTypesProto3::kOptionalFieldMaskFieldNumber;
const int TestAllTypesProto3::kOptionalStructFieldNumber;
const int TestAllTypesProto3::kOptionalAnyFieldNumber;
const int TestAllTypesProto3::kOptionalValueFieldNumber;
const int TestAllTypesProto3::kRepeatedDurationFieldNumber;
const int TestAllTypesProto3::kRepeatedTimestampFieldNumber;
const int TestAllTypesProto3::kRepeatedFieldmaskFieldNumber;
const int TestAllTypesProto3::kRepeatedStructFieldNumber;
const int TestAllTypesProto3::kRepeatedAnyFieldNumber;
const int TestAllTypesProto3::kRepeatedValueFieldNumber;
const int TestAllTypesProto3::kFieldname1FieldNumber;
const int TestAllTypesProto3::kFieldName2FieldNumber;
const int TestAllTypesProto3::kFieldName3FieldNumber;
const int TestAllTypesProto3::kFieldName4FieldNumber;
const int TestAllTypesProto3::kField0Name5FieldNumber;
const int TestAllTypesProto3::kField0Name6FieldNumber;
const int TestAllTypesProto3::kFieldName7FieldNumber;
const int TestAllTypesProto3::kFieldName8FieldNumber;
const int TestAllTypesProto3::kFieldName9FieldNumber;
const int TestAllTypesProto3::kFieldName10FieldNumber;
const int TestAllTypesProto3::kFIELDNAME11FieldNumber;
const int TestAllTypesProto3::kFIELDName12FieldNumber;
const int TestAllTypesProto3::kFieldName13FieldNumber;
const int TestAllTypesProto3::kFieldName14FieldNumber;
const int TestAllTypesProto3::kFieldName15FieldNumber;
const int TestAllTypesProto3::kFieldName16FieldNumber;
const int TestAllTypesProto3::kFieldName17FieldNumber;
const int TestAllTypesProto3::kFieldName18FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesProto3::TestAllTypesProto3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto3.TestAllTypesProto3)
}
TestAllTypesProto3::TestAllTypesProto3(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  repeated_int32_(arena),
  repeated_int64_(arena),
  repeated_uint32_(arena),
  repeated_uint64_(arena),
  repeated_sint32_(arena),
  repeated_sint64_(arena),
  repeated_fixed32_(arena),
  repeated_fixed64_(arena),
  repeated_sfixed32_(arena),
  repeated_sfixed64_(arena),
  repeated_float_(arena),
  repeated_double_(arena),
  repeated_bool_(arena),
  repeated_string_(arena),
  repeated_bytes_(arena),
  repeated_nested_message_(arena),
  repeated_foreign_message_(arena),
  repeated_nested_enum_(arena),
  repeated_foreign_enum_(arena),
  repeated_string_piece_(arena),
  repeated_cord_(arena),
  map_int32_int32_(arena),
  map_int64_int64_(arena),
  map_uint32_uint32_(arena),
  map_uint64_uint64_(arena),
  map_sint32_sint32_(arena),
  map_sint64_sint64_(arena),
  map_fixed32_fixed32_(arena),
  map_fixed64_fixed64_(arena),
  map_sfixed32_sfixed32_(arena),
  map_sfixed64_sfixed64_(arena),
  map_int32_float_(arena),
  map_int32_double_(arena),
  map_bool_bool_(arena),
  map_string_string_(arena),
  map_string_bytes_(arena),
  map_string_nested_message_(arena),
  map_string_foreign_message_(arena),
  map_string_nested_enum_(arena),
  map_string_foreign_enum_(arena),
  repeated_bool_wrapper_(arena),
  repeated_int32_wrapper_(arena),
  repeated_int64_wrapper_(arena),
  repeated_uint32_wrapper_(arena),
  repeated_uint64_wrapper_(arena),
  repeated_float_wrapper_(arena),
  repeated_double_wrapper_(arena),
  repeated_string_wrapper_(arena),
  repeated_bytes_wrapper_(arena),
  repeated_duration_(arena),
  repeated_timestamp_(arena),
  repeated_fieldmask_(arena),
  repeated_any_(arena),
  repeated_value_(arena),
  repeated_struct_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto3.TestAllTypesProto3)
}
TestAllTypesProto3::TestAllTypesProto3(const TestAllTypesProto3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      repeated_int32_(from.repeated_int32_),
      repeated_int64_(from.repeated_int64_),
      repeated_uint32_(from.repeated_uint32_),
      repeated_uint64_(from.repeated_uint64_),
      repeated_sint32_(from.repeated_sint32_),
      repeated_sint64_(from.repeated_sint64_),
      repeated_fixed32_(from.repeated_fixed32_),
      repeated_fixed64_(from.repeated_fixed64_),
      repeated_sfixed32_(from.repeated_sfixed32_),
      repeated_sfixed64_(from.repeated_sfixed64_),
      repeated_float_(from.repeated_float_),
      repeated_double_(from.repeated_double_),
      repeated_bool_(from.repeated_bool_),
      repeated_string_(from.repeated_string_),
      repeated_bytes_(from.repeated_bytes_),
      repeated_nested_message_(from.repeated_nested_message_),
      repeated_foreign_message_(from.repeated_foreign_message_),
      repeated_nested_enum_(from.repeated_nested_enum_),
      repeated_foreign_enum_(from.repeated_foreign_enum_),
      repeated_string_piece_(from.repeated_string_piece_),
      repeated_cord_(from.repeated_cord_),
      repeated_bool_wrapper_(from.repeated_bool_wrapper_),
      repeated_int32_wrapper_(from.repeated_int32_wrapper_),
      repeated_int64_wrapper_(from.repeated_int64_wrapper_),
      repeated_uint32_wrapper_(from.repeated_uint32_wrapper_),
      repeated_uint64_wrapper_(from.repeated_uint64_wrapper_),
      repeated_float_wrapper_(from.repeated_float_wrapper_),
      repeated_double_wrapper_(from.repeated_double_wrapper_),
      repeated_string_wrapper_(from.repeated_string_wrapper_),
      repeated_bytes_wrapper_(from.repeated_bytes_wrapper_),
      repeated_duration_(from.repeated_duration_),
      repeated_timestamp_(from.repeated_timestamp_),
      repeated_fieldmask_(from.repeated_fieldmask_),
      repeated_any_(from.repeated_any_),
      repeated_value_(from.repeated_value_),
      repeated_struct_(from.repeated_struct_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_int32_int32_.MergeFrom(from.map_int32_int32_);
  map_int64_int64_.MergeFrom(from.map_int64_int64_);
  map_uint32_uint32_.MergeFrom(from.map_uint32_uint32_);
  map_uint64_uint64_.MergeFrom(from.map_uint64_uint64_);
  map_sint32_sint32_.MergeFrom(from.map_sint32_sint32_);
  map_sint64_sint64_.MergeFrom(from.map_sint64_sint64_);
  map_fixed32_fixed32_.MergeFrom(from.map_fixed32_fixed32_);
  map_fixed64_fixed64_.MergeFrom(from.map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.MergeFrom(from.map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.MergeFrom(from.map_sfixed64_sfixed64_);
  map_int32_float_.MergeFrom(from.map_int32_float_);
  map_int32_double_.MergeFrom(from.map_int32_double_);
  map_bool_bool_.MergeFrom(from.map_bool_bool_);
  map_string_string_.MergeFrom(from.map_string_string_);
  map_string_bytes_.MergeFrom(from.map_string_bytes_);
  map_string_nested_message_.MergeFrom(from.map_string_nested_message_);
  map_string_foreign_message_.MergeFrom(from.map_string_foreign_message_);
  map_string_nested_enum_.MergeFrom(from.map_string_nested_enum_);
  map_string_foreign_enum_.MergeFrom(from.map_string_foreign_enum_);
  optional_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.optional_string().size() > 0) {
    optional_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_string(),
      GetArenaNoVirtual());
  }
  optional_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.optional_bytes().size() > 0) {
    optional_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_bytes(),
      GetArenaNoVirtual());
  }
  optional_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.optional_string_piece().size() > 0) {
    optional_string_piece_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_string_piece(),
      GetArenaNoVirtual());
  }
  optional_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.optional_cord().size() > 0) {
    optional_cord_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_cord(),
      GetArenaNoVirtual());
  }
  if (from.has_optional_nested_message()) {
    optional_nested_message_ = new ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage(*from.optional_nested_message_);
  } else {
    optional_nested_message_ = NULL;
  }
  if (from.has_optional_foreign_message()) {
    optional_foreign_message_ = new ::protobuf_test_messages::proto3::ForeignMessage(*from.optional_foreign_message_);
  } else {
    optional_foreign_message_ = NULL;
  }
  if (from.has_recursive_message()) {
    recursive_message_ = new ::protobuf_test_messages::proto3::TestAllTypesProto3(*from.recursive_message_);
  } else {
    recursive_message_ = NULL;
  }
  if (from.has_optional_bool_wrapper()) {
    optional_bool_wrapper_ = new ::google::protobuf::BoolValue(*from.optional_bool_wrapper_);
  } else {
    optional_bool_wrapper_ = NULL;
  }
  if (from.has_optional_int32_wrapper()) {
    optional_int32_wrapper_ = new ::google::protobuf::Int32Value(*from.optional_int32_wrapper_);
  } else {
    optional_int32_wrapper_ = NULL;
  }
  if (from.has_optional_int64_wrapper()) {
    optional_int64_wrapper_ = new ::google::protobuf::Int64Value(*from.optional_int64_wrapper_);
  } else {
    optional_int64_wrapper_ = NULL;
  }
  if (from.has_optional_uint32_wrapper()) {
    optional_uint32_wrapper_ = new ::google::protobuf::UInt32Value(*from.optional_uint32_wrapper_);
  } else {
    optional_uint32_wrapper_ = NULL;
  }
  if (from.has_optional_uint64_wrapper()) {
    optional_uint64_wrapper_ = new ::google::protobuf::UInt64Value(*from.optional_uint64_wrapper_);
  } else {
    optional_uint64_wrapper_ = NULL;
  }
  if (from.has_optional_float_wrapper()) {
    optional_float_wrapper_ = new ::google::protobuf::FloatValue(*from.optional_float_wrapper_);
  } else {
    optional_float_wrapper_ = NULL;
  }
  if (from.has_optional_double_wrapper()) {
    optional_double_wrapper_ = new ::google::protobuf::DoubleValue(*from.optional_double_wrapper_);
  } else {
    optional_double_wrapper_ = NULL;
  }
  if (from.has_optional_string_wrapper()) {
    optional_string_wrapper_ = new ::google::protobuf::StringValue(*from.optional_string_wrapper_);
  } else {
    optional_string_wrapper_ = NULL;
  }
  if (from.has_optional_bytes_wrapper()) {
    optional_bytes_wrapper_ = new ::google::protobuf::BytesValue(*from.optional_bytes_wrapper_);
  } else {
    optional_bytes_wrapper_ = NULL;
  }
  if (from.has_optional_duration()) {
    optional_duration_ = new ::google::protobuf::Duration(*from.optional_duration_);
  } else {
    optional_duration_ = NULL;
  }
  if (from.has_optional_timestamp()) {
    optional_timestamp_ = new ::google::protobuf::Timestamp(*from.optional_timestamp_);
  } else {
    optional_timestamp_ = NULL;
  }
  if (from.has_optional_field_mask()) {
    optional_field_mask_ = new ::google::protobuf::FieldMask(*from.optional_field_mask_);
  } else {
    optional_field_mask_ = NULL;
  }
  if (from.has_optional_struct()) {
    optional_struct_ = new ::google::protobuf::Struct(*from.optional_struct_);
  } else {
    optional_struct_ = NULL;
  }
  if (from.has_optional_any()) {
    optional_any_ = new ::google::protobuf::Any(*from.optional_any_);
  } else {
    optional_any_ = NULL;
  }
  if (from.has_optional_value()) {
    optional_value_ = new ::google::protobuf::Value(*from.optional_value_);
  } else {
    optional_value_ = NULL;
  }
  ::memcpy(&optional_int64_, &from.optional_int64_,
    static_cast<size_t>(reinterpret_cast<char*>(&field_name17___) -
    reinterpret_cast<char*>(&optional_int64_)) + sizeof(field_name17___));
  clear_has_oneof_field();
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      set_oneof_uint32(from.oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      mutable_oneof_nested_message()->::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage::MergeFrom(from.oneof_nested_message());
      break;
    }
    case kOneofString: {
      set_oneof_string(from.oneof_string());
      break;
    }
    case kOneofBytes: {
      set_oneof_bytes(from.oneof_bytes());
      break;
    }
    case kOneofBool: {
      set_oneof_bool(from.oneof_bool());
      break;
    }
    case kOneofUint64: {
      set_oneof_uint64(from.oneof_uint64());
      break;
    }
    case kOneofFloat: {
      set_oneof_float(from.oneof_float());
      break;
    }
    case kOneofDouble: {
      set_oneof_double(from.oneof_double());
      break;
    }
    case kOneofEnum: {
      set_oneof_enum(from.oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto3.TestAllTypesProto3)
}

void TestAllTypesProto3::SharedCtor() {
  optional_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&optional_nested_message_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_name17___) -
      reinterpret_cast<char*>(&optional_nested_message_)) + sizeof(field_name17___));
  clear_has_oneof_field();
}

TestAllTypesProto3::~TestAllTypesProto3() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto3.TestAllTypesProto3)
  SharedDtor();
}

void TestAllTypesProto3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  optional_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_piece_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_cord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete optional_nested_message_;
  if (this != internal_default_instance()) delete optional_foreign_message_;
  if (this != internal_default_instance()) delete recursive_message_;
  if (this != internal_default_instance()) delete optional_bool_wrapper_;
  if (this != internal_default_instance()) delete optional_int32_wrapper_;
  if (this != internal_default_instance()) delete optional_int64_wrapper_;
  if (this != internal_default_instance()) delete optional_uint32_wrapper_;
  if (this != internal_default_instance()) delete optional_uint64_wrapper_;
  if (this != internal_default_instance()) delete optional_float_wrapper_;
  if (this != internal_default_instance()) delete optional_double_wrapper_;
  if (this != internal_default_instance()) delete optional_string_wrapper_;
  if (this != internal_default_instance()) delete optional_bytes_wrapper_;
  if (this != internal_default_instance()) delete optional_duration_;
  if (this != internal_default_instance()) delete optional_timestamp_;
  if (this != internal_default_instance()) delete optional_field_mask_;
  if (this != internal_default_instance()) delete optional_struct_;
  if (this != internal_default_instance()) delete optional_any_;
  if (this != internal_default_instance()) delete optional_value_;
  if (has_oneof_field()) {
    clear_oneof_field();
  }
}

void TestAllTypesProto3::ArenaDtor(void* object) {
  TestAllTypesProto3* _this = reinterpret_cast< TestAllTypesProto3* >(object);
  (void)_this;
}
void TestAllTypesProto3::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TestAllTypesProto3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestAllTypesProto3::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestAllTypesProto3& TestAllTypesProto3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_TestAllTypesProto3.base);
  return *internal_default_instance();
}


void TestAllTypesProto3::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      if (GetArenaNoVirtual() == NULL) {
        delete oneof_field_.oneof_nested_message_;
      }
      break;
    }
    case kOneofString: {
      oneof_field_.oneof_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kOneofBytes: {
      oneof_field_.oneof_bytes_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kOneofBool: {
      // No need to clear
      break;
    }
    case kOneofUint64: {
      // No need to clear
      break;
    }
    case kOneofFloat: {
      // No need to clear
      break;
    }
    case kOneofDouble: {
      // No need to clear
      break;
    }
    case kOneofEnum: {
      // No need to clear
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


void TestAllTypesProto3::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repeated_int32_.Clear();
  repeated_int64_.Clear();
  repeated_uint32_.Clear();
  repeated_uint64_.Clear();
  repeated_sint32_.Clear();
  repeated_sint64_.Clear();
  repeated_fixed32_.Clear();
  repeated_fixed64_.Clear();
  repeated_sfixed32_.Clear();
  repeated_sfixed64_.Clear();
  repeated_float_.Clear();
  repeated_double_.Clear();
  repeated_bool_.Clear();
  repeated_string_.Clear();
  repeated_bytes_.Clear();
  repeated_nested_message_.Clear();
  repeated_foreign_message_.Clear();
  repeated_nested_enum_.Clear();
  repeated_foreign_enum_.Clear();
  repeated_string_piece_.Clear();
  repeated_cord_.Clear();
  map_int32_int32_.Clear();
  map_int64_int64_.Clear();
  map_uint32_uint32_.Clear();
  map_uint64_uint64_.Clear();
  map_sint32_sint32_.Clear();
  map_sint64_sint64_.Clear();
  map_fixed32_fixed32_.Clear();
  map_fixed64_fixed64_.Clear();
  map_sfixed32_sfixed32_.Clear();
  map_sfixed64_sfixed64_.Clear();
  map_int32_float_.Clear();
  map_int32_double_.Clear();
  map_bool_bool_.Clear();
  map_string_string_.Clear();
  map_string_bytes_.Clear();
  map_string_nested_message_.Clear();
  map_string_foreign_message_.Clear();
  map_string_nested_enum_.Clear();
  map_string_foreign_enum_.Clear();
  repeated_bool_wrapper_.Clear();
  repeated_int32_wrapper_.Clear();
  repeated_int64_wrapper_.Clear();
  repeated_uint32_wrapper_.Clear();
  repeated_uint64_wrapper_.Clear();
  repeated_float_wrapper_.Clear();
  repeated_double_wrapper_.Clear();
  repeated_string_wrapper_.Clear();
  repeated_bytes_wrapper_.Clear();
  repeated_duration_.Clear();
  repeated_timestamp_.Clear();
  repeated_fieldmask_.Clear();
  repeated_any_.Clear();
  repeated_value_.Clear();
  repeated_struct_.Clear();
  optional_string_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  optional_bytes_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  optional_string_piece_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  optional_cord_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && optional_nested_message_ != NULL) {
    delete optional_nested_message_;
  }
  optional_nested_message_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_foreign_message_ != NULL) {
    delete optional_foreign_message_;
  }
  optional_foreign_message_ = NULL;
  if (GetArenaNoVirtual() == NULL && recursive_message_ != NULL) {
    delete recursive_message_;
  }
  recursive_message_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_bool_wrapper_ != NULL) {
    delete optional_bool_wrapper_;
  }
  optional_bool_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_int32_wrapper_ != NULL) {
    delete optional_int32_wrapper_;
  }
  optional_int32_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_int64_wrapper_ != NULL) {
    delete optional_int64_wrapper_;
  }
  optional_int64_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_uint32_wrapper_ != NULL) {
    delete optional_uint32_wrapper_;
  }
  optional_uint32_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_uint64_wrapper_ != NULL) {
    delete optional_uint64_wrapper_;
  }
  optional_uint64_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_float_wrapper_ != NULL) {
    delete optional_float_wrapper_;
  }
  optional_float_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_double_wrapper_ != NULL) {
    delete optional_double_wrapper_;
  }
  optional_double_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_string_wrapper_ != NULL) {
    delete optional_string_wrapper_;
  }
  optional_string_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_bytes_wrapper_ != NULL) {
    delete optional_bytes_wrapper_;
  }
  optional_bytes_wrapper_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_duration_ != NULL) {
    delete optional_duration_;
  }
  optional_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_timestamp_ != NULL) {
    delete optional_timestamp_;
  }
  optional_timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_field_mask_ != NULL) {
    delete optional_field_mask_;
  }
  optional_field_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_struct_ != NULL) {
    delete optional_struct_;
  }
  optional_struct_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_any_ != NULL) {
    delete optional_any_;
  }
  optional_any_ = NULL;
  if (GetArenaNoVirtual() == NULL && optional_value_ != NULL) {
    delete optional_value_;
  }
  optional_value_ = NULL;
  ::memset(&optional_int64_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_name17___) -
      reinterpret_cast<char*>(&optional_int64_)) + sizeof(field_name17___));
  clear_oneof_field();
  _internal_metadata_.Clear();
}

bool TestAllTypesProto3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 optional_int32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optional_int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 optional_int64 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_int64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 optional_uint32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optional_uint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 optional_uint64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &optional_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 optional_sint32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &optional_sint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 optional_sint64 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &optional_sint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 optional_fixed32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &optional_fixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 optional_fixed64 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &optional_fixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 optional_sfixed32 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &optional_sfixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed64 optional_sfixed64 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optional_sfixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float optional_float = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double optional_double = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optional_double_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool optional_bool = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &optional_bool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string optional_string = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optional_string().data(), static_cast<int>(this->optional_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.optional_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes optional_bytes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_optional_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage optional_nested_message = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_nested_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf_test_messages.proto3.ForeignMessage optional_foreign_message = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_foreign_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum optional_nested_enum = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_optional_nested_enum(static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf_test_messages.proto3.ForeignEnum optional_foreign_enum = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_optional_foreign_enum(static_cast< ::protobuf_test_messages::proto3::ForeignEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string optional_string_piece = 24 [ctype = STRING_PIECE];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string_piece()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optional_string_piece().data(), static_cast<int>(this->optional_string_piece().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_piece"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string optional_cord = 25 [ctype = CORD];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_cord()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optional_cord().data(), static_cast<int>(this->optional_cord().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.optional_cord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf_test_messages.proto3.TestAllTypesProto3 recursive_message = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recursive_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 repeated_int32 = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeated_int32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 250u, input, this->mutable_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 repeated_int64 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_repeated_int64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 258u, input, this->mutable_repeated_int64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 repeated_uint32 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_repeated_uint32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 266u, input, this->mutable_repeated_uint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 repeated_uint64 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_repeated_uint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 274u, input, this->mutable_repeated_uint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 repeated_sint32 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_repeated_sint32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 282u, input, this->mutable_repeated_sint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 repeated_sint64 = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_repeated_sint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 290u, input, this->mutable_repeated_sint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 repeated_fixed32 = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_repeated_fixed32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 301 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 298u, input, this->mutable_repeated_fixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 repeated_fixed64 = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_repeated_fixed64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 305 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 306u, input, this->mutable_repeated_fixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 repeated_sfixed32 = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_repeated_sfixed32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 317 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 314u, input, this->mutable_repeated_sfixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 repeated_sfixed64 = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_repeated_sfixed64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 321 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 322u, input, this->mutable_repeated_sfixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float repeated_float = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_repeated_float())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 333 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 330u, input, this->mutable_repeated_float())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double repeated_double = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_repeated_double())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 337 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 338u, input, this->mutable_repeated_double())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool repeated_bool = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_repeated_bool())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 346u, input, this->mutable_repeated_bool())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repeated_string = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repeated_string(this->repeated_string_size() - 1).data(),
            static_cast<int>(this->repeated_string(this->repeated_string_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes repeated_bytes = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_repeated_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage repeated_nested_message = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_nested_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuf_test_messages.proto3.ForeignMessage repeated_foreign_message = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_foreign_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum repeated_nested_enum = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_repeated_nested_enum(static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_repeated_nested_enum(static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuf_test_messages.proto3.ForeignEnum repeated_foreign_enum = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_repeated_foreign_enum(static_cast< ::protobuf_test_messages::proto3::ForeignEnum >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_repeated_foreign_enum(static_cast< ::protobuf_test_messages::proto3::ForeignEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string_piece()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repeated_string_piece(this->repeated_string_piece_size() - 1).data(),
            static_cast<int>(this->repeated_string_piece(this->repeated_string_piece_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repeated_cord = 55 [ctype = CORD];
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_cord()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repeated_cord(this->repeated_cord_size() - 1).data(),
            static_cast<int>(this->repeated_cord(this->repeated_cord_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, int32> map_int32_int32 = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 450 & 0xFF */)) {
          TestAllTypesProto3_MapInt32Int32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapInt32Int32Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&map_int32_int32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, int64> map_int64_int64 = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          TestAllTypesProto3_MapInt64Int64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapInt64Int64Entry_DoNotUse,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&map_int64_int64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> map_uint32_uint32 = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 466 & 0xFF */)) {
          TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&map_uint32_uint32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, uint64> map_uint64_uint64 = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse,
              ::google::protobuf::uint64, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 > > parser(&map_uint64_uint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, sint32> map_sint32_sint32 = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&map_sint32_sint32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint64, sint64> map_sint64_sint64 = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&map_sint64_sint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&map_fixed32_fixed32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 506 & 0xFF */)) {
          TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse,
              ::google::protobuf::uint64, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
              ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 > > parser(&map_fixed64_fixed64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&map_sfixed32_sfixed32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 522 & 0xFF */)) {
          TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&map_sfixed64_sfixed64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, float> map_int32_float = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 530 & 0xFF */)) {
          TestAllTypesProto3_MapInt32FloatEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapInt32FloatEntry_DoNotUse,
              ::google::protobuf::int32, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, float > > parser(&map_int32_float_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, double> map_int32_double = 67;
      case 67: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 538 & 0xFF */)) {
          TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse,
              ::google::protobuf::int32, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, double > > parser(&map_int32_double_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<bool, bool> map_bool_bool = 68;
      case 68: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 546 & 0xFF */)) {
          TestAllTypesProto3_MapBoolBoolEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapBoolBoolEntry_DoNotUse,
              bool, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< bool, bool > > parser(&map_bool_bool_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> map_string_string = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 554 & 0xFF */)) {
          TestAllTypesProto3_MapStringStringEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapStringStringEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&map_string_string_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringStringEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringStringEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> map_string_bytes = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          TestAllTypesProto3_MapStringBytesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapStringBytesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&map_string_bytes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringBytesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage> map_string_nested_message = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 570 & 0xFF */)) {
          TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse,
              ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage > > parser(&map_string_nested_message_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringNestedMessageEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .protobuf_test_messages.proto3.ForeignMessage> map_string_foreign_message = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 578 & 0xFF */)) {
          TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse,
              ::std::string, ::protobuf_test_messages::proto3::ForeignMessage,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage > > parser(&map_string_foreign_message_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringForeignMessageEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum> map_string_nested_enum = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 586 & 0xFF */)) {
          TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse,
              ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
              0 >,
            ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum > > parser(&map_string_nested_enum_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringNestedEnumEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .protobuf_test_messages.proto3.ForeignEnum> map_string_foreign_enum = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 594 & 0xFF */)) {
          TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse,
              ::std::string, ::protobuf_test_messages::proto3::ForeignEnum,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
              0 >,
            ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum > > parser(&map_string_foreign_enum_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringForeignEnumEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 oneof_uint32 = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 888 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oneof_field_.oneof_uint32_)));
          set_has_oneof_uint32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage oneof_nested_message = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oneof_nested_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oneof_string = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oneof_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oneof_string().data(), static_cast<int>(this->oneof_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf_test_messages.proto3.TestAllTypesProto3.oneof_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes oneof_bytes = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oneof_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool oneof_bool = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 920 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &oneof_field_.oneof_bool_)));
          set_has_oneof_bool();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 oneof_uint64 = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 928 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &oneof_field_.oneof_uint64_)));
          set_has_oneof_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float oneof_float = 117;
      case 117: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 941 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oneof_field_.oneof_float_)));
          set_has_oneof_float();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double oneof_double = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 945 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &oneof_field_.oneof_double_)));
          set_has_oneof_double();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum oneof_enum = 119;
      case 119: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 952 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oneof_enum(static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue optional_bool_wrapper = 201;
      case 201: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_bool_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value optional_int32_wrapper = 202;
      case 202: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_int32_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value optional_int64_wrapper = 203;
      case 203: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_int64_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value optional_uint32_wrapper = 204;
      case 204: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_uint32_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt64Value optional_uint64_wrapper = 205;
      case 205: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_uint64_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue optional_float_wrapper = 206;
      case 206: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_float_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue optional_double_wrapper = 207;
      case 207: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_double_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue optional_string_wrapper = 208;
      case 208: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_string_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BytesValue optional_bytes_wrapper = 209;
      case 209: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_bytes_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.BoolValue repeated_bool_wrapper = 211;
      case 211: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_bool_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Int32Value repeated_int32_wrapper = 212;
      case 212: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_int32_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Int64Value repeated_int64_wrapper = 213;
      case 213: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_int64_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.UInt32Value repeated_uint32_wrapper = 214;
      case 214: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_uint32_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.UInt64Value repeated_uint64_wrapper = 215;
      case 215: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_uint64_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.FloatValue repeated_float_wrapper = 216;
      case 216: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_float_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.DoubleValue repeated_double_wrapper = 217;
      case 217: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_double_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.StringValue repeated_string_wrapper = 218;
      case 218: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_string_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.BytesValue repeated_bytes_wrapper = 219;
      case 219: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 1754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_bytes_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration optional_duration = 301;
      case 301: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 2410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp optional_timestamp = 302;
      case 302: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 2418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask optional_field_mask = 303;
      case 303: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 2426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_field_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct optional_struct = 304;
      case 304: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 2434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any optional_any = 305;
      case 305: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 2442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value optional_value = 306;
      case 306: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Duration repeated_duration = 311;
      case 311: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 2490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Timestamp repeated_timestamp = 312;
      case 312: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 2498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.FieldMask repeated_fieldmask = 313;
      case 313: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 2506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_fieldmask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any repeated_any = 315;
      case 315: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Value repeated_value = 316;
      case 316: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 2530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Struct repeated_struct = 324;
      case 324: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 2594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fieldname1 = 401;
      case 401: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 3208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldname1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field_name2 = 402;
      case 402: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 3216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 _field_name3 = 403;
      case 403: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 3224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_field_name3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field__name4_ = 404;
      case 404: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 3232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field__name4__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field0name5 = 405;
      case 405: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 3240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field0name5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field_0_name6 = 406;
      case 406: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 3248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_0_name6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fieldName7 = 407;
      case 407: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 3256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldname7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FieldName8 = 408;
      case 408: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 3264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldname8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field_Name9 = 409;
      case 409: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 3272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Field_Name10 = 410;
      case 410: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 3280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FIELD_NAME11 = 411;
      case 411: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 3288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FIELD_name12 = 412;
      case 412: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 3296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 __field_name13 = 413;
      case 413: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 3304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &__field_name13_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 __Field_name14 = 414;
      case 414: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 3312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &__field_name14_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field__name15 = 415;
      case 415: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 3320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field__name15_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field__Name16 = 416;
      case 416: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 3328 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field__name16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field_name17__ = 417;
      case 417: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 3336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name17___)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Field_name18__ = 418;
      case 418: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 3344 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name18___)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto3.TestAllTypesProto3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto3.TestAllTypesProto3)
  return false;
#undef DO_
}

void TestAllTypesProto3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 optional_int32 = 1;
  if (this->optional_int32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->optional_int32(), output);
  }

  // int64 optional_int64 = 2;
  if (this->optional_int64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->optional_int64(), output);
  }

  // uint32 optional_uint32 = 3;
  if (this->optional_uint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->optional_uint32(), output);
  }

  // uint64 optional_uint64 = 4;
  if (this->optional_uint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->optional_uint64(), output);
  }

  // sint32 optional_sint32 = 5;
  if (this->optional_sint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->optional_sint32(), output);
  }

  // sint64 optional_sint64 = 6;
  if (this->optional_sint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->optional_sint64(), output);
  }

  // fixed32 optional_fixed32 = 7;
  if (this->optional_fixed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->optional_fixed32(), output);
  }

  // fixed64 optional_fixed64 = 8;
  if (this->optional_fixed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->optional_fixed64(), output);
  }

  // sfixed32 optional_sfixed32 = 9;
  if (this->optional_sfixed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(9, this->optional_sfixed32(), output);
  }

  // sfixed64 optional_sfixed64 = 10;
  if (this->optional_sfixed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->optional_sfixed64(), output);
  }

  // float optional_float = 11;
  if (this->optional_float() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->optional_float(), output);
  }

  // double optional_double = 12;
  if (this->optional_double() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->optional_double(), output);
  }

  // bool optional_bool = 13;
  if (this->optional_bool() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->optional_bool(), output);
  }

  // string optional_string = 14;
  if (this->optional_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optional_string().data(), static_cast<int>(this->optional_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.optional_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->optional_string(), output);
  }

  // bytes optional_bytes = 15;
  if (this->optional_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->optional_bytes(), output);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage optional_nested_message = 18;
  if (this->has_optional_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_optional_nested_message(), output);
  }

  // .protobuf_test_messages.proto3.ForeignMessage optional_foreign_message = 19;
  if (this->has_optional_foreign_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_optional_foreign_message(), output);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum optional_nested_enum = 21;
  if (this->optional_nested_enum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->optional_nested_enum(), output);
  }

  // .protobuf_test_messages.proto3.ForeignEnum optional_foreign_enum = 22;
  if (this->optional_foreign_enum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->optional_foreign_enum(), output);
  }

  // string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (this->optional_string_piece().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optional_string_piece().data(), static_cast<int>(this->optional_string_piece().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->optional_string_piece(), output);
  }

  // string optional_cord = 25 [ctype = CORD];
  if (this->optional_cord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optional_cord().data(), static_cast<int>(this->optional_cord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.optional_cord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->optional_cord(), output);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3 recursive_message = 27;
  if (this->has_recursive_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_recursive_message(), output);
  }

  // repeated int32 repeated_int32 = 31;
  if (this->repeated_int32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(31, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_int32_cached_byte_size_));
  }
  for (int i = 0, n = this->repeated_int32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->repeated_int32(i), output);
  }

  // repeated int64 repeated_int64 = 32;
  if (this->repeated_int64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(32, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_int64_cached_byte_size_));
  }
  for (int i = 0, n = this->repeated_int64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->repeated_int64(i), output);
  }

  // repeated uint32 repeated_uint32 = 33;
  if (this->repeated_uint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(33, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_uint32_cached_byte_size_));
  }
  for (int i = 0, n = this->repeated_uint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->repeated_uint32(i), output);
  }

  // repeated uint64 repeated_uint64 = 34;
  if (this->repeated_uint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(34, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_uint64_cached_byte_size_));
  }
  for (int i = 0, n = this->repeated_uint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->repeated_uint64(i), output);
  }

  // repeated sint32 repeated_sint32 = 35;
  if (this->repeated_sint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(35, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_sint32_cached_byte_size_));
  }
  for (int i = 0, n = this->repeated_sint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->repeated_sint32(i), output);
  }

  // repeated sint64 repeated_sint64 = 36;
  if (this->repeated_sint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(36, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_sint64_cached_byte_size_));
  }
  for (int i = 0, n = this->repeated_sint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->repeated_sint64(i), output);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  if (this->repeated_fixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(37, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_fixed32_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->repeated_fixed32().data(), this->repeated_fixed32_size(), output);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  if (this->repeated_fixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(38, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_fixed64_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->repeated_fixed64().data(), this->repeated_fixed64_size(), output);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  if (this->repeated_sfixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(39, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_sfixed32_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->repeated_sfixed32().data(), this->repeated_sfixed32_size(), output);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  if (this->repeated_sfixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(40, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_sfixed64_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->repeated_sfixed64().data(), this->repeated_sfixed64_size(), output);
  }

  // repeated float repeated_float = 41;
  if (this->repeated_float_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(41, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_float_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->repeated_float().data(), this->repeated_float_size(), output);
  }

  // repeated double repeated_double = 42;
  if (this->repeated_double_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(42, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_double_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->repeated_double().data(), this->repeated_double_size(), output);
  }

  // repeated bool repeated_bool = 43;
  if (this->repeated_bool_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(43, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _repeated_bool_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->repeated_bool().data(), this->repeated_bool_size(), output);
  }

  // repeated string repeated_string = 44;
  for (int i = 0, n = this->repeated_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeated_string(i).data(), static_cast<int>(this->repeated_string(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      44, this->repeated_string(i), output);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0, n = this->repeated_bytes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      45, this->repeated_bytes(i), output);
  }

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage repeated_nested_message = 48;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_nested_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48,
      this->repeated_nested_message(static_cast<int>(i)),
      output);
  }

  // repeated .protobuf_test_messages.proto3.ForeignMessage repeated_foreign_message = 49;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_foreign_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49,
      this->repeated_foreign_message(static_cast<int>(i)),
      output);
  }

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum repeated_nested_enum = 51;
  if (this->repeated_nested_enum_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      51,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_repeated_nested_enum_cached_byte_size_));
  }
  for (int i = 0, n = this->repeated_nested_enum_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->repeated_nested_enum(i), output);
  }

  // repeated .protobuf_test_messages.proto3.ForeignEnum repeated_foreign_enum = 52;
  if (this->repeated_foreign_enum_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      52,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_repeated_foreign_enum_cached_byte_size_));
  }
  for (int i = 0, n = this->repeated_foreign_enum_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->repeated_foreign_enum(i), output);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0, n = this->repeated_string_piece_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeated_string_piece(i).data(), static_cast<int>(this->repeated_string_piece(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      54, this->repeated_string_piece(i), output);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0, n = this->repeated_cord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeated_cord(i).data(), static_cast<int>(this->repeated_cord(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      55, this->repeated_cord(i), output);
  }

  // map<int32, int32> map_int32_int32 = 56;
  if (!this->map_int32_int32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int32_int32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_int32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32_int32().begin();
          it != this->map_int32_int32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapInt32Int32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_int32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            56, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapInt32Int32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32_int32().begin();
          it != this->map_int32_int32().end(); ++it) {
        entry.reset(map_int32_int32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            56, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int64, int64> map_int64_int64 = 57;
  if (!this->map_int64_int64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int64_int64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int64_int64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64_int64().begin();
          it != this->map_int64_int64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapInt64Int64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int64_int64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            57, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapInt64Int64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64_int64().begin();
          it != this->map_int64_int64().end(); ++it) {
        entry.reset(map_int64_int64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            57, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 58;
  if (!this->map_uint32_uint32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_uint32_uint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint32_uint32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_uint32_uint32().begin();
          it != this->map_uint32_uint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint32_uint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            58, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_uint32_uint32().begin();
          it != this->map_uint32_uint32().end(); ++it) {
        entry.reset(map_uint32_uint32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            58, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 59;
  if (!this->map_uint64_uint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_uint64_uint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint64_uint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64_uint64().begin();
          it != this->map_uint64_uint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint64_uint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            59, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64_uint64().begin();
          it != this->map_uint64_uint64().end(); ++it) {
        entry.reset(map_uint64_uint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            59, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 60;
  if (!this->map_sint32_sint32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_sint32_sint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sint32_sint32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sint32_sint32().begin();
          it != this->map_sint32_sint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sint32_sint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            60, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sint32_sint32().begin();
          it != this->map_sint32_sint32().end(); ++it) {
        entry.reset(map_sint32_sint32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            60, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 61;
  if (!this->map_sint64_sint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_sint64_sint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sint64_sint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sint64_sint64().begin();
          it != this->map_sint64_sint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sint64_sint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            61, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sint64_sint64().begin();
          it != this->map_sint64_sint64().end(); ++it) {
        entry.reset(map_sint64_sint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            61, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
  if (!this->map_fixed32_fixed32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_fixed32_fixed32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_fixed32_fixed32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_fixed32_fixed32().begin();
          it != this->map_fixed32_fixed32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_fixed32_fixed32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            62, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_fixed32_fixed32().begin();
          it != this->map_fixed32_fixed32().end(); ++it) {
        entry.reset(map_fixed32_fixed32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            62, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
  if (!this->map_fixed64_fixed64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_fixed64_fixed64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_fixed64_fixed64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_fixed64_fixed64().begin();
          it != this->map_fixed64_fixed64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_fixed64_fixed64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            63, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_fixed64_fixed64().begin();
          it != this->map_fixed64_fixed64().end(); ++it) {
        entry.reset(map_fixed64_fixed64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            63, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
  if (!this->map_sfixed32_sfixed32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_sfixed32_sfixed32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sfixed32_sfixed32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sfixed32_sfixed32().begin();
          it != this->map_sfixed32_sfixed32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            64, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sfixed32_sfixed32().begin();
          it != this->map_sfixed32_sfixed32().end(); ++it) {
        entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            64, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
  if (!this->map_sfixed64_sfixed64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_sfixed64_sfixed64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sfixed64_sfixed64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sfixed64_sfixed64().begin();
          it != this->map_sfixed64_sfixed64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            65, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sfixed64_sfixed64().begin();
          it != this->map_sfixed64_sfixed64().end(); ++it) {
        entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            65, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int32, float> map_int32_float = 66;
  if (!this->map_int32_float().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int32_float().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_float().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_int32_float().begin();
          it != this->map_int32_float().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapInt32FloatEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_float_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            66, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapInt32FloatEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_int32_float().begin();
          it != this->map_int32_float().end(); ++it) {
        entry.reset(map_int32_float_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            66, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int32, double> map_int32_double = 67;
  if (!this->map_int32_double().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int32_double().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_double().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_int32_double().begin();
          it != this->map_int32_double().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_double_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            67, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_int32_double().begin();
          it != this->map_int32_double().end(); ++it) {
        entry.reset(map_int32_double_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            67, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<bool, bool> map_bool_bool = 68;
  if (!this->map_bool_bool().empty()) {
    typedef ::google::protobuf::Map< bool, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< bool, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_bool_bool().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_bool_bool().size()]);
      typedef ::google::protobuf::Map< bool, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< bool, bool >::const_iterator
          it = this->map_bool_bool().begin();
          it != this->map_bool_bool().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapBoolBoolEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_bool_bool_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            68, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapBoolBoolEntry_DoNotUse> entry;
      for (::google::protobuf::Map< bool, bool >::const_iterator
          it = this->map_bool_bool().begin();
          it != this->map_bool_bool().end(); ++it) {
        entry.reset(map_bool_bool_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            68, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<string, string> map_string_string = 69;
  if (!this->map_string_string().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringStringEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringStringEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_string().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_string().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_string().begin();
          it != this->map_string_string().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringStringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_string_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            69, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringStringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_string().begin();
          it != this->map_string_string().end(); ++it) {
        entry.reset(map_string_string_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            69, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> map_string_bytes = 70;
  if (!this->map_string_bytes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringBytesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_bytes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_bytes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_bytes().begin();
          it != this->map_string_bytes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringBytesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_bytes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            70, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringBytesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_bytes().begin();
          it != this->map_string_bytes().end(); ++it) {
        entry.reset(map_string_bytes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            70, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage> map_string_nested_message = 71;
  if (!this->map_string_nested_message().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringNestedMessageEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_nested_message().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_nested_message().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::const_iterator
          it = this->map_string_nested_message().begin();
          it != this->map_string_nested_message().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_nested_message_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            71, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::const_iterator
          it = this->map_string_nested_message().begin();
          it != this->map_string_nested_message().end(); ++it) {
        entry.reset(map_string_nested_message_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            71, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto3.ForeignMessage> map_string_foreign_message = 72;
  if (!this->map_string_foreign_message().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringForeignMessageEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_foreign_message().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_foreign_message().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::const_iterator
          it = this->map_string_foreign_message().begin();
          it != this->map_string_foreign_message().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_foreign_message_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            72, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::const_iterator
          it = this->map_string_foreign_message().begin();
          it != this->map_string_foreign_message().end(); ++it) {
        entry.reset(map_string_foreign_message_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            72, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum> map_string_nested_enum = 73;
  if (!this->map_string_nested_enum().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringNestedEnumEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_nested_enum().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_nested_enum().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::const_iterator
          it = this->map_string_nested_enum().begin();
          it != this->map_string_nested_enum().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            73, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::const_iterator
          it = this->map_string_nested_enum().begin();
          it != this->map_string_nested_enum().end(); ++it) {
        entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            73, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto3.ForeignEnum> map_string_foreign_enum = 74;
  if (!this->map_string_foreign_enum().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringForeignEnumEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_foreign_enum().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_foreign_enum().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::const_iterator
          it = this->map_string_foreign_enum().begin();
          it != this->map_string_foreign_enum().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            74, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::const_iterator
          it = this->map_string_foreign_enum().begin();
          it != this->map_string_foreign_enum().end(); ++it) {
        entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            74, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 oneof_uint32 = 111;
  if (has_oneof_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(111, this->oneof_uint32(), output);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage oneof_nested_message = 112;
  if (has_oneof_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112, this->_internal_oneof_nested_message(), output);
  }

  // string oneof_string = 113;
  if (has_oneof_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oneof_string().data(), static_cast<int>(this->oneof_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.oneof_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      113, this->oneof_string(), output);
  }

  // bytes oneof_bytes = 114;
  if (has_oneof_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      114, this->oneof_bytes(), output);
  }

  // bool oneof_bool = 115;
  if (has_oneof_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(115, this->oneof_bool(), output);
  }

  // uint64 oneof_uint64 = 116;
  if (has_oneof_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(116, this->oneof_uint64(), output);
  }

  // float oneof_float = 117;
  if (has_oneof_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(117, this->oneof_float(), output);
  }

  // double oneof_double = 118;
  if (has_oneof_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(118, this->oneof_double(), output);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum oneof_enum = 119;
  if (has_oneof_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      119, this->oneof_enum(), output);
  }

  // .google.protobuf.BoolValue optional_bool_wrapper = 201;
  if (this->has_optional_bool_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      201, this->_internal_optional_bool_wrapper(), output);
  }

  // .google.protobuf.Int32Value optional_int32_wrapper = 202;
  if (this->has_optional_int32_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      202, this->_internal_optional_int32_wrapper(), output);
  }

  // .google.protobuf.Int64Value optional_int64_wrapper = 203;
  if (this->has_optional_int64_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      203, this->_internal_optional_int64_wrapper(), output);
  }

  // .google.protobuf.UInt32Value optional_uint32_wrapper = 204;
  if (this->has_optional_uint32_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      204, this->_internal_optional_uint32_wrapper(), output);
  }

  // .google.protobuf.UInt64Value optional_uint64_wrapper = 205;
  if (this->has_optional_uint64_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      205, this->_internal_optional_uint64_wrapper(), output);
  }

  // .google.protobuf.FloatValue optional_float_wrapper = 206;
  if (this->has_optional_float_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      206, this->_internal_optional_float_wrapper(), output);
  }

  // .google.protobuf.DoubleValue optional_double_wrapper = 207;
  if (this->has_optional_double_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      207, this->_internal_optional_double_wrapper(), output);
  }

  // .google.protobuf.StringValue optional_string_wrapper = 208;
  if (this->has_optional_string_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      208, this->_internal_optional_string_wrapper(), output);
  }

  // .google.protobuf.BytesValue optional_bytes_wrapper = 209;
  if (this->has_optional_bytes_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      209, this->_internal_optional_bytes_wrapper(), output);
  }

  // repeated .google.protobuf.BoolValue repeated_bool_wrapper = 211;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_bool_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      211,
      this->repeated_bool_wrapper(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Int32Value repeated_int32_wrapper = 212;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_int32_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      212,
      this->repeated_int32_wrapper(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Int64Value repeated_int64_wrapper = 213;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_int64_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      213,
      this->repeated_int64_wrapper(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.UInt32Value repeated_uint32_wrapper = 214;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_uint32_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      214,
      this->repeated_uint32_wrapper(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.UInt64Value repeated_uint64_wrapper = 215;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_uint64_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      215,
      this->repeated_uint64_wrapper(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.FloatValue repeated_float_wrapper = 216;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_float_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      216,
      this->repeated_float_wrapper(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.DoubleValue repeated_double_wrapper = 217;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_double_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      217,
      this->repeated_double_wrapper(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.StringValue repeated_string_wrapper = 218;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_string_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      218,
      this->repeated_string_wrapper(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.BytesValue repeated_bytes_wrapper = 219;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_bytes_wrapper_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      219,
      this->repeated_bytes_wrapper(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Duration optional_duration = 301;
  if (this->has_optional_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      301, this->_internal_optional_duration(), output);
  }

  // .google.protobuf.Timestamp optional_timestamp = 302;
  if (this->has_optional_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      302, this->_internal_optional_timestamp(), output);
  }

  // .google.protobuf.FieldMask optional_field_mask = 303;
  if (this->has_optional_field_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      303, this->_internal_optional_field_mask(), output);
  }

  // .google.protobuf.Struct optional_struct = 304;
  if (this->has_optional_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      304, this->_internal_optional_struct(), output);
  }

  // .google.protobuf.Any optional_any = 305;
  if (this->has_optional_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      305, this->_internal_optional_any(), output);
  }

  // .google.protobuf.Value optional_value = 306;
  if (this->has_optional_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      306, this->_internal_optional_value(), output);
  }

  // repeated .google.protobuf.Duration repeated_duration = 311;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_duration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      311,
      this->repeated_duration(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Timestamp repeated_timestamp = 312;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_timestamp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      312,
      this->repeated_timestamp(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.FieldMask repeated_fieldmask = 313;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_fieldmask_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      313,
      this->repeated_fieldmask(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Any repeated_any = 315;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_any_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      315,
      this->repeated_any(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Value repeated_value = 316;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      316,
      this->repeated_value(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Struct repeated_struct = 324;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_struct_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      324,
      this->repeated_struct(static_cast<int>(i)),
      output);
  }

  // int32 fieldname1 = 401;
  if (this->fieldname1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(401, this->fieldname1(), output);
  }

  // int32 field_name2 = 402;
  if (this->field_name2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(402, this->field_name2(), output);
  }

  // int32 _field_name3 = 403;
  if (this->_field_name3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(403, this->_field_name3(), output);
  }

  // int32 field__name4_ = 404;
  if (this->field__name4_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(404, this->field__name4_(), output);
  }

  // int32 field0name5 = 405;
  if (this->field0name5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(405, this->field0name5(), output);
  }

  // int32 field_0_name6 = 406;
  if (this->field_0_name6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(406, this->field_0_name6(), output);
  }

  // int32 fieldName7 = 407;
  if (this->fieldname7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(407, this->fieldname7(), output);
  }

  // int32 FieldName8 = 408;
  if (this->fieldname8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(408, this->fieldname8(), output);
  }

  // int32 field_Name9 = 409;
  if (this->field_name9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(409, this->field_name9(), output);
  }

  // int32 Field_Name10 = 410;
  if (this->field_name10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(410, this->field_name10(), output);
  }

  // int32 FIELD_NAME11 = 411;
  if (this->field_name11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(411, this->field_name11(), output);
  }

  // int32 FIELD_name12 = 412;
  if (this->field_name12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(412, this->field_name12(), output);
  }

  // int32 __field_name13 = 413;
  if (this->__field_name13() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(413, this->__field_name13(), output);
  }

  // int32 __Field_name14 = 414;
  if (this->__field_name14() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(414, this->__field_name14(), output);
  }

  // int32 field__name15 = 415;
  if (this->field__name15() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(415, this->field__name15(), output);
  }

  // int32 field__Name16 = 416;
  if (this->field__name16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(416, this->field__name16(), output);
  }

  // int32 field_name17__ = 417;
  if (this->field_name17__() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(417, this->field_name17__(), output);
  }

  // int32 Field_name18__ = 418;
  if (this->field_name18__() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(418, this->field_name18__(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto3.TestAllTypesProto3)
}

::google::protobuf::uint8* TestAllTypesProto3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 optional_int32 = 1;
  if (this->optional_int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->optional_int32(), target);
  }

  // int64 optional_int64 = 2;
  if (this->optional_int64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->optional_int64(), target);
  }

  // uint32 optional_uint32 = 3;
  if (this->optional_uint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->optional_uint32(), target);
  }

  // uint64 optional_uint64 = 4;
  if (this->optional_uint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->optional_uint64(), target);
  }

  // sint32 optional_sint32 = 5;
  if (this->optional_sint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->optional_sint32(), target);
  }

  // sint64 optional_sint64 = 6;
  if (this->optional_sint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->optional_sint64(), target);
  }

  // fixed32 optional_fixed32 = 7;
  if (this->optional_fixed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->optional_fixed32(), target);
  }

  // fixed64 optional_fixed64 = 8;
  if (this->optional_fixed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(8, this->optional_fixed64(), target);
  }

  // sfixed32 optional_sfixed32 = 9;
  if (this->optional_sfixed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(9, this->optional_sfixed32(), target);
  }

  // sfixed64 optional_sfixed64 = 10;
  if (this->optional_sfixed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->optional_sfixed64(), target);
  }

  // float optional_float = 11;
  if (this->optional_float() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->optional_float(), target);
  }

  // double optional_double = 12;
  if (this->optional_double() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->optional_double(), target);
  }

  // bool optional_bool = 13;
  if (this->optional_bool() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->optional_bool(), target);
  }

  // string optional_string = 14;
  if (this->optional_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optional_string().data(), static_cast<int>(this->optional_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.optional_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->optional_string(), target);
  }

  // bytes optional_bytes = 15;
  if (this->optional_bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->optional_bytes(), target);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage optional_nested_message = 18;
  if (this->has_optional_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_optional_nested_message(), deterministic, target);
  }

  // .protobuf_test_messages.proto3.ForeignMessage optional_foreign_message = 19;
  if (this->has_optional_foreign_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_optional_foreign_message(), deterministic, target);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum optional_nested_enum = 21;
  if (this->optional_nested_enum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->optional_nested_enum(), target);
  }

  // .protobuf_test_messages.proto3.ForeignEnum optional_foreign_enum = 22;
  if (this->optional_foreign_enum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->optional_foreign_enum(), target);
  }

  // string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (this->optional_string_piece().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optional_string_piece().data(), static_cast<int>(this->optional_string_piece().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_piece");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->optional_string_piece(), target);
  }

  // string optional_cord = 25 [ctype = CORD];
  if (this->optional_cord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optional_cord().data(), static_cast<int>(this->optional_cord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.optional_cord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->optional_cord(), target);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3 recursive_message = 27;
  if (this->has_recursive_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_recursive_message(), deterministic, target);
  }

  // repeated int32 repeated_int32 = 31;
  if (this->repeated_int32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      31,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_int32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->repeated_int32_, target);
  }

  // repeated int64 repeated_int64 = 32;
  if (this->repeated_int64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      32,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_int64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->repeated_int64_, target);
  }

  // repeated uint32 repeated_uint32 = 33;
  if (this->repeated_uint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      33,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_uint32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->repeated_uint32_, target);
  }

  // repeated uint64 repeated_uint64 = 34;
  if (this->repeated_uint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      34,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_uint64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->repeated_uint64_, target);
  }

  // repeated sint32 repeated_sint32 = 35;
  if (this->repeated_sint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      35,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_sint32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->repeated_sint32_, target);
  }

  // repeated sint64 repeated_sint64 = 36;
  if (this->repeated_sint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      36,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_sint64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->repeated_sint64_, target);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  if (this->repeated_fixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      37,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_fixed32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->repeated_fixed32_, target);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  if (this->repeated_fixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      38,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_fixed64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->repeated_fixed64_, target);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  if (this->repeated_sfixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      39,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_sfixed32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->repeated_sfixed32_, target);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  if (this->repeated_sfixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      40,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_sfixed64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->repeated_sfixed64_, target);
  }

  // repeated float repeated_float = 41;
  if (this->repeated_float_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      41,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_float_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->repeated_float_, target);
  }

  // repeated double repeated_double = 42;
  if (this->repeated_double_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      42,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_double_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->repeated_double_, target);
  }

  // repeated bool repeated_bool = 43;
  if (this->repeated_bool_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      43,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _repeated_bool_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->repeated_bool_, target);
  }

  // repeated string repeated_string = 44;
  for (int i = 0, n = this->repeated_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeated_string(i).data(), static_cast<int>(this->repeated_string(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(44, this->repeated_string(i), target);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0, n = this->repeated_bytes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(45, this->repeated_bytes(i), target);
  }

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage repeated_nested_message = 48;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_nested_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48, this->repeated_nested_message(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protobuf_test_messages.proto3.ForeignMessage repeated_foreign_message = 49;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_foreign_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49, this->repeated_foreign_message(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum repeated_nested_enum = 51;
  if (this->repeated_nested_enum_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      51,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _repeated_nested_enum_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->repeated_nested_enum_, target);
  }

  // repeated .protobuf_test_messages.proto3.ForeignEnum repeated_foreign_enum = 52;
  if (this->repeated_foreign_enum_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      52,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _repeated_foreign_enum_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->repeated_foreign_enum_, target);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0, n = this->repeated_string_piece_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeated_string_piece(i).data(), static_cast<int>(this->repeated_string_piece(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(54, this->repeated_string_piece(i), target);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0, n = this->repeated_cord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeated_cord(i).data(), static_cast<int>(this->repeated_cord(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(55, this->repeated_cord(i), target);
  }

  // map<int32, int32> map_int32_int32 = 56;
  if (!this->map_int32_int32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int32_int32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_int32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32_int32().begin();
          it != this->map_int32_int32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapInt32Int32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_int32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       56, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapInt32Int32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32_int32().begin();
          it != this->map_int32_int32().end(); ++it) {
        entry.reset(map_int32_int32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       56, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int64, int64> map_int64_int64 = 57;
  if (!this->map_int64_int64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int64_int64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int64_int64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64_int64().begin();
          it != this->map_int64_int64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapInt64Int64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int64_int64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       57, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapInt64Int64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64_int64().begin();
          it != this->map_int64_int64().end(); ++it) {
        entry.reset(map_int64_int64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       57, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 58;
  if (!this->map_uint32_uint32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_uint32_uint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint32_uint32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_uint32_uint32().begin();
          it != this->map_uint32_uint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint32_uint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       58, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_uint32_uint32().begin();
          it != this->map_uint32_uint32().end(); ++it) {
        entry.reset(map_uint32_uint32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       58, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 59;
  if (!this->map_uint64_uint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_uint64_uint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint64_uint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64_uint64().begin();
          it != this->map_uint64_uint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint64_uint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       59, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64_uint64().begin();
          it != this->map_uint64_uint64().end(); ++it) {
        entry.reset(map_uint64_uint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       59, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 60;
  if (!this->map_sint32_sint32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_sint32_sint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sint32_sint32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sint32_sint32().begin();
          it != this->map_sint32_sint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sint32_sint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       60, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sint32_sint32().begin();
          it != this->map_sint32_sint32().end(); ++it) {
        entry.reset(map_sint32_sint32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       60, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 61;
  if (!this->map_sint64_sint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_sint64_sint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sint64_sint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sint64_sint64().begin();
          it != this->map_sint64_sint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sint64_sint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       61, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sint64_sint64().begin();
          it != this->map_sint64_sint64().end(); ++it) {
        entry.reset(map_sint64_sint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       61, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
  if (!this->map_fixed32_fixed32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_fixed32_fixed32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_fixed32_fixed32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_fixed32_fixed32().begin();
          it != this->map_fixed32_fixed32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_fixed32_fixed32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       62, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_fixed32_fixed32().begin();
          it != this->map_fixed32_fixed32().end(); ++it) {
        entry.reset(map_fixed32_fixed32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       62, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
  if (!this->map_fixed64_fixed64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_fixed64_fixed64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_fixed64_fixed64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_fixed64_fixed64().begin();
          it != this->map_fixed64_fixed64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_fixed64_fixed64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       63, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_fixed64_fixed64().begin();
          it != this->map_fixed64_fixed64().end(); ++it) {
        entry.reset(map_fixed64_fixed64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       63, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
  if (!this->map_sfixed32_sfixed32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_sfixed32_sfixed32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sfixed32_sfixed32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sfixed32_sfixed32().begin();
          it != this->map_sfixed32_sfixed32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       64, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sfixed32_sfixed32().begin();
          it != this->map_sfixed32_sfixed32().end(); ++it) {
        entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       64, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
  if (!this->map_sfixed64_sfixed64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_sfixed64_sfixed64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sfixed64_sfixed64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sfixed64_sfixed64().begin();
          it != this->map_sfixed64_sfixed64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       65, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sfixed64_sfixed64().begin();
          it != this->map_sfixed64_sfixed64().end(); ++it) {
        entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       65, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int32, float> map_int32_float = 66;
  if (!this->map_int32_float().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int32_float().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_float().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_int32_float().begin();
          it != this->map_int32_float().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapInt32FloatEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_float_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       66, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapInt32FloatEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_int32_float().begin();
          it != this->map_int32_float().end(); ++it) {
        entry.reset(map_int32_float_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       66, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int32, double> map_int32_double = 67;
  if (!this->map_int32_double().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int32_double().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_double().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_int32_double().begin();
          it != this->map_int32_double().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_double_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       67, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_int32_double().begin();
          it != this->map_int32_double().end(); ++it) {
        entry.reset(map_int32_double_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       67, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<bool, bool> map_bool_bool = 68;
  if (!this->map_bool_bool().empty()) {
    typedef ::google::protobuf::Map< bool, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< bool, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_bool_bool().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_bool_bool().size()]);
      typedef ::google::protobuf::Map< bool, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< bool, bool >::const_iterator
          it = this->map_bool_bool().begin();
          it != this->map_bool_bool().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapBoolBoolEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_bool_bool_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       68, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapBoolBoolEntry_DoNotUse> entry;
      for (::google::protobuf::Map< bool, bool >::const_iterator
          it = this->map_bool_bool().begin();
          it != this->map_bool_bool().end(); ++it) {
        entry.reset(map_bool_bool_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       68, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<string, string> map_string_string = 69;
  if (!this->map_string_string().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringStringEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringStringEntry.value");
      }
    };

    if (deterministic &&
        this->map_string_string().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_string().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_string().begin();
          it != this->map_string_string().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringStringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_string_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       69, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringStringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_string().begin();
          it != this->map_string_string().end(); ++it) {
        entry.reset(map_string_string_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       69, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> map_string_bytes = 70;
  if (!this->map_string_bytes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringBytesEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_bytes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_bytes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_bytes().begin();
          it != this->map_string_bytes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringBytesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_bytes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       70, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringBytesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_bytes().begin();
          it != this->map_string_bytes().end(); ++it) {
        entry.reset(map_string_bytes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       70, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage> map_string_nested_message = 71;
  if (!this->map_string_nested_message().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringNestedMessageEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_nested_message().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_nested_message().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::const_iterator
          it = this->map_string_nested_message().begin();
          it != this->map_string_nested_message().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_nested_message_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       71, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::const_iterator
          it = this->map_string_nested_message().begin();
          it != this->map_string_nested_message().end(); ++it) {
        entry.reset(map_string_nested_message_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       71, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto3.ForeignMessage> map_string_foreign_message = 72;
  if (!this->map_string_foreign_message().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringForeignMessageEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_foreign_message().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_foreign_message().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::const_iterator
          it = this->map_string_foreign_message().begin();
          it != this->map_string_foreign_message().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_foreign_message_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       72, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::const_iterator
          it = this->map_string_foreign_message().begin();
          it != this->map_string_foreign_message().end(); ++it) {
        entry.reset(map_string_foreign_message_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       72, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum> map_string_nested_enum = 73;
  if (!this->map_string_nested_enum().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringNestedEnumEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_nested_enum().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_nested_enum().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::const_iterator
          it = this->map_string_nested_enum().begin();
          it != this->map_string_nested_enum().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       73, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::const_iterator
          it = this->map_string_nested_enum().begin();
          it != this->map_string_nested_enum().end(); ++it) {
        entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       73, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto3.ForeignEnum> map_string_foreign_enum = 74;
  if (!this->map_string_foreign_enum().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringForeignEnumEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_foreign_enum().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_foreign_enum().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::const_iterator
          it = this->map_string_foreign_enum().begin();
          it != this->map_string_foreign_enum().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       74, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::const_iterator
          it = this->map_string_foreign_enum().begin();
          it != this->map_string_foreign_enum().end(); ++it) {
        entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       74, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 oneof_uint32 = 111;
  if (has_oneof_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(111, this->oneof_uint32(), target);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage oneof_nested_message = 112;
  if (has_oneof_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        112, this->_internal_oneof_nested_message(), deterministic, target);
  }

  // string oneof_string = 113;
  if (has_oneof_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oneof_string().data(), static_cast<int>(this->oneof_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf_test_messages.proto3.TestAllTypesProto3.oneof_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        113, this->oneof_string(), target);
  }

  // bytes oneof_bytes = 114;
  if (has_oneof_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        114, this->oneof_bytes(), target);
  }

  // bool oneof_bool = 115;
  if (has_oneof_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(115, this->oneof_bool(), target);
  }

  // uint64 oneof_uint64 = 116;
  if (has_oneof_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(116, this->oneof_uint64(), target);
  }

  // float oneof_float = 117;
  if (has_oneof_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(117, this->oneof_float(), target);
  }

  // double oneof_double = 118;
  if (has_oneof_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(118, this->oneof_double(), target);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum oneof_enum = 119;
  if (has_oneof_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      119, this->oneof_enum(), target);
  }

  // .google.protobuf.BoolValue optional_bool_wrapper = 201;
  if (this->has_optional_bool_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        201, this->_internal_optional_bool_wrapper(), deterministic, target);
  }

  // .google.protobuf.Int32Value optional_int32_wrapper = 202;
  if (this->has_optional_int32_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        202, this->_internal_optional_int32_wrapper(), deterministic, target);
  }

  // .google.protobuf.Int64Value optional_int64_wrapper = 203;
  if (this->has_optional_int64_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        203, this->_internal_optional_int64_wrapper(), deterministic, target);
  }

  // .google.protobuf.UInt32Value optional_uint32_wrapper = 204;
  if (this->has_optional_uint32_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        204, this->_internal_optional_uint32_wrapper(), deterministic, target);
  }

  // .google.protobuf.UInt64Value optional_uint64_wrapper = 205;
  if (this->has_optional_uint64_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        205, this->_internal_optional_uint64_wrapper(), deterministic, target);
  }

  // .google.protobuf.FloatValue optional_float_wrapper = 206;
  if (this->has_optional_float_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        206, this->_internal_optional_float_wrapper(), deterministic, target);
  }

  // .google.protobuf.DoubleValue optional_double_wrapper = 207;
  if (this->has_optional_double_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        207, this->_internal_optional_double_wrapper(), deterministic, target);
  }

  // .google.protobuf.StringValue optional_string_wrapper = 208;
  if (this->has_optional_string_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        208, this->_internal_optional_string_wrapper(), deterministic, target);
  }

  // .google.protobuf.BytesValue optional_bytes_wrapper = 209;
  if (this->has_optional_bytes_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        209, this->_internal_optional_bytes_wrapper(), deterministic, target);
  }

  // repeated .google.protobuf.BoolValue repeated_bool_wrapper = 211;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_bool_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        211, this->repeated_bool_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Int32Value repeated_int32_wrapper = 212;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_int32_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        212, this->repeated_int32_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Int64Value repeated_int64_wrapper = 213;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_int64_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        213, this->repeated_int64_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.UInt32Value repeated_uint32_wrapper = 214;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_uint32_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        214, this->repeated_uint32_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.UInt64Value repeated_uint64_wrapper = 215;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_uint64_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        215, this->repeated_uint64_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.FloatValue repeated_float_wrapper = 216;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_float_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        216, this->repeated_float_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.DoubleValue repeated_double_wrapper = 217;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_double_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        217, this->repeated_double_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.StringValue repeated_string_wrapper = 218;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_string_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        218, this->repeated_string_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.BytesValue repeated_bytes_wrapper = 219;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_bytes_wrapper_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        219, this->repeated_bytes_wrapper(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Duration optional_duration = 301;
  if (this->has_optional_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        301, this->_internal_optional_duration(), deterministic, target);
  }

  // .google.protobuf.Timestamp optional_timestamp = 302;
  if (this->has_optional_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        302, this->_internal_optional_timestamp(), deterministic, target);
  }

  // .google.protobuf.FieldMask optional_field_mask = 303;
  if (this->has_optional_field_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        303, this->_internal_optional_field_mask(), deterministic, target);
  }

  // .google.protobuf.Struct optional_struct = 304;
  if (this->has_optional_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        304, this->_internal_optional_struct(), deterministic, target);
  }

  // .google.protobuf.Any optional_any = 305;
  if (this->has_optional_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        305, this->_internal_optional_any(), deterministic, target);
  }

  // .google.protobuf.Value optional_value = 306;
  if (this->has_optional_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        306, this->_internal_optional_value(), deterministic, target);
  }

  // repeated .google.protobuf.Duration repeated_duration = 311;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_duration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        311, this->repeated_duration(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Timestamp repeated_timestamp = 312;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_timestamp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        312, this->repeated_timestamp(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.FieldMask repeated_fieldmask = 313;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_fieldmask_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        313, this->repeated_fieldmask(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Any repeated_any = 315;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_any_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        315, this->repeated_any(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Value repeated_value = 316;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        316, this->repeated_value(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Struct repeated_struct = 324;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_struct_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        324, this->repeated_struct(static_cast<int>(i)), deterministic, target);
  }

  // int32 fieldname1 = 401;
  if (this->fieldname1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(401, this->fieldname1(), target);
  }

  // int32 field_name2 = 402;
  if (this->field_name2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(402, this->field_name2(), target);
  }

  // int32 _field_name3 = 403;
  if (this->_field_name3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(403, this->_field_name3(), target);
  }

  // int32 field__name4_ = 404;
  if (this->field__name4_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(404, this->field__name4_(), target);
  }

  // int32 field0name5 = 405;
  if (this->field0name5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(405, this->field0name5(), target);
  }

  // int32 field_0_name6 = 406;
  if (this->field_0_name6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(406, this->field_0_name6(), target);
  }

  // int32 fieldName7 = 407;
  if (this->fieldname7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(407, this->fieldname7(), target);
  }

  // int32 FieldName8 = 408;
  if (this->fieldname8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(408, this->fieldname8(), target);
  }

  // int32 field_Name9 = 409;
  if (this->field_name9() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(409, this->field_name9(), target);
  }

  // int32 Field_Name10 = 410;
  if (this->field_name10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(410, this->field_name10(), target);
  }

  // int32 FIELD_NAME11 = 411;
  if (this->field_name11() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(411, this->field_name11(), target);
  }

  // int32 FIELD_name12 = 412;
  if (this->field_name12() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(412, this->field_name12(), target);
  }

  // int32 __field_name13 = 413;
  if (this->__field_name13() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(413, this->__field_name13(), target);
  }

  // int32 __Field_name14 = 414;
  if (this->__field_name14() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(414, this->__field_name14(), target);
  }

  // int32 field__name15 = 415;
  if (this->field__name15() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(415, this->field__name15(), target);
  }

  // int32 field__Name16 = 416;
  if (this->field__name16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(416, this->field__name16(), target);
  }

  // int32 field_name17__ = 417;
  if (this->field_name17__() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(417, this->field_name17__(), target);
  }

  // int32 Field_name18__ = 418;
  if (this->field_name18__() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(418, this->field_name18__(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto3.TestAllTypesProto3)
  return target;
}

size_t TestAllTypesProto3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 repeated_int32 = 31;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->repeated_int32_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_int32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 repeated_int64 = 32;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->repeated_int64_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_int64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 repeated_uint32 = 33;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->repeated_uint32_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_uint32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 repeated_uint64 = 34;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->repeated_uint64_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_uint64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 repeated_sint32 = 35;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->repeated_sint32_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_sint32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 repeated_sint64 = 36;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->repeated_sint64_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_sint64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 repeated_fixed32 = 37;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_fixed32_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_fixed32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 repeated_fixed64 = 38;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_fixed64_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_fixed64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_sfixed32_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_sfixed32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_sfixed64_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_sfixed64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float repeated_float = 41;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_float_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_float_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double repeated_double = 42;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_double_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_double_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool repeated_bool = 43;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_bool_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_bool_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string repeated_string = 44;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_string_size());
  for (int i = 0, n = this->repeated_string_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string(i));
  }

  // repeated bytes repeated_bytes = 45;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_bytes_size());
  for (int i = 0, n = this->repeated_bytes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->repeated_bytes(i));
  }

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage repeated_nested_message = 48;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_nested_message_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_nested_message(static_cast<int>(i)));
    }
  }

  // repeated .protobuf_test_messages.proto3.ForeignMessage repeated_foreign_message = 49;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_foreign_message_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_foreign_message(static_cast<int>(i)));
    }
  }

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum repeated_nested_enum = 51;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->repeated_nested_enum_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_nested_enum(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_nested_enum_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .protobuf_test_messages.proto3.ForeignEnum repeated_foreign_enum = 52;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->repeated_foreign_enum_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_foreign_enum(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _repeated_foreign_enum_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_string_piece_size());
  for (int i = 0, n = this->repeated_string_piece_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string_piece(i));
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_cord_size());
  for (int i = 0, n = this->repeated_cord_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_cord(i));
  }

  // map<int32, int32> map_int32_int32 = 56;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_int32_int32_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapInt32Int32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->map_int32_int32().begin();
        it != this->map_int32_int32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_int32_int32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<int64, int64> map_int64_int64 = 57;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_int64_int64_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapInt64Int64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->map_int64_int64().begin();
        it != this->map_int64_int64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_int64_int64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 58;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_uint32_uint32_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->map_uint32_uint32().begin();
        it != this->map_uint32_uint32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_uint32_uint32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 59;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_uint64_uint64_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
        it = this->map_uint64_uint64().begin();
        it != this->map_uint64_uint64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_uint64_uint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 60;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_sint32_sint32_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->map_sint32_sint32().begin();
        it != this->map_sint32_sint32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_sint32_sint32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 61;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_sint64_sint64_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->map_sint64_sint64().begin();
        it != this->map_sint64_sint64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_sint64_sint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_fixed32_fixed32_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->map_fixed32_fixed32().begin();
        it != this->map_fixed32_fixed32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_fixed32_fixed32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_fixed64_fixed64_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
        it = this->map_fixed64_fixed64().begin();
        it != this->map_fixed64_fixed64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_fixed64_fixed64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_sfixed32_sfixed32_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->map_sfixed32_sfixed32().begin();
        it != this->map_sfixed32_sfixed32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_sfixed64_sfixed64_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->map_sfixed64_sfixed64().begin();
        it != this->map_sfixed64_sfixed64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<int32, float> map_int32_float = 66;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_int32_float_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapInt32FloatEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
        it = this->map_int32_float().begin();
        it != this->map_int32_float().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_int32_float_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<int32, double> map_int32_double = 67;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_int32_double_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
        it = this->map_int32_double().begin();
        it != this->map_int32_double().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_int32_double_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<bool, bool> map_bool_bool = 68;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_bool_bool_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapBoolBoolEntry_DoNotUse> entry;
    for (::google::protobuf::Map< bool, bool >::const_iterator
        it = this->map_bool_bool().begin();
        it != this->map_bool_bool().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_bool_bool_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, string> map_string_string = 69;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_string_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapStringStringEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->map_string_string().begin();
        it != this->map_string_string().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_string_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, bytes> map_string_bytes = 70;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_bytes_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapStringBytesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->map_string_bytes().begin();
        it != this->map_string_bytes().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_bytes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage> map_string_nested_message = 71;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_nested_message_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >::const_iterator
        it = this->map_string_nested_message().begin();
        it != this->map_string_nested_message().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_nested_message_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .protobuf_test_messages.proto3.ForeignMessage> map_string_foreign_message = 72;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_foreign_message_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignMessage >::const_iterator
        it = this->map_string_foreign_message().begin();
        it != this->map_string_foreign_message().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_foreign_message_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum> map_string_nested_enum = 73;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_nested_enum_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >::const_iterator
        it = this->map_string_nested_enum().begin();
        it != this->map_string_nested_enum().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .protobuf_test_messages.proto3.ForeignEnum> map_string_foreign_enum = 74;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_foreign_enum_size());
  {
    ::std::unique_ptr<TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto3::ForeignEnum >::const_iterator
        it = this->map_string_foreign_enum().begin();
        it != this->map_string_foreign_enum().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // repeated .google.protobuf.BoolValue repeated_bool_wrapper = 211;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_bool_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_bool_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Int32Value repeated_int32_wrapper = 212;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_int32_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_int32_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Int64Value repeated_int64_wrapper = 213;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_int64_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_int64_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.UInt32Value repeated_uint32_wrapper = 214;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_uint32_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_uint32_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.UInt64Value repeated_uint64_wrapper = 215;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_uint64_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_uint64_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.FloatValue repeated_float_wrapper = 216;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_float_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_float_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.DoubleValue repeated_double_wrapper = 217;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_double_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_double_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.StringValue repeated_string_wrapper = 218;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_string_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_string_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.BytesValue repeated_bytes_wrapper = 219;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_bytes_wrapper_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_bytes_wrapper(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Duration repeated_duration = 311;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_duration_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_duration(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Timestamp repeated_timestamp = 312;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_timestamp_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_timestamp(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.FieldMask repeated_fieldmask = 313;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_fieldmask_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_fieldmask(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any repeated_any = 315;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_any_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_any(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Value repeated_value = 316;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_value_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_value(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Struct repeated_struct = 324;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_struct_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_struct(static_cast<int>(i)));
    }
  }

  // string optional_string = 14;
  if (this->optional_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optional_string());
  }

  // bytes optional_bytes = 15;
  if (this->optional_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->optional_bytes());
  }

  // string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (this->optional_string_piece().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optional_string_piece());
  }

  // string optional_cord = 25 [ctype = CORD];
  if (this->optional_cord().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optional_cord());
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage optional_nested_message = 18;
  if (this->has_optional_nested_message()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_nested_message_);
  }

  // .protobuf_test_messages.proto3.ForeignMessage optional_foreign_message = 19;
  if (this->has_optional_foreign_message()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_foreign_message_);
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3 recursive_message = 27;
  if (this->has_recursive_message()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recursive_message_);
  }

  // .google.protobuf.BoolValue optional_bool_wrapper = 201;
  if (this->has_optional_bool_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_bool_wrapper_);
  }

  // .google.protobuf.Int32Value optional_int32_wrapper = 202;
  if (this->has_optional_int32_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_int32_wrapper_);
  }

  // .google.protobuf.Int64Value optional_int64_wrapper = 203;
  if (this->has_optional_int64_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_int64_wrapper_);
  }

  // .google.protobuf.UInt32Value optional_uint32_wrapper = 204;
  if (this->has_optional_uint32_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_uint32_wrapper_);
  }

  // .google.protobuf.UInt64Value optional_uint64_wrapper = 205;
  if (this->has_optional_uint64_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_uint64_wrapper_);
  }

  // .google.protobuf.FloatValue optional_float_wrapper = 206;
  if (this->has_optional_float_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_float_wrapper_);
  }

  // .google.protobuf.DoubleValue optional_double_wrapper = 207;
  if (this->has_optional_double_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_double_wrapper_);
  }

  // .google.protobuf.StringValue optional_string_wrapper = 208;
  if (this->has_optional_string_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_string_wrapper_);
  }

  // .google.protobuf.BytesValue optional_bytes_wrapper = 209;
  if (this->has_optional_bytes_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_bytes_wrapper_);
  }

  // .google.protobuf.Duration optional_duration = 301;
  if (this->has_optional_duration()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_duration_);
  }

  // .google.protobuf.Timestamp optional_timestamp = 302;
  if (this->has_optional_timestamp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_timestamp_);
  }

  // .google.protobuf.FieldMask optional_field_mask = 303;
  if (this->has_optional_field_mask()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_field_mask_);
  }

  // .google.protobuf.Struct optional_struct = 304;
  if (this->has_optional_struct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_struct_);
  }

  // .google.protobuf.Any optional_any = 305;
  if (this->has_optional_any()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_any_);
  }

  // .google.protobuf.Value optional_value = 306;
  if (this->has_optional_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optional_value_);
  }

  // int64 optional_int64 = 2;
  if (this->optional_int64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->optional_int64());
  }

  // int32 optional_int32 = 1;
  if (this->optional_int32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->optional_int32());
  }

  // uint32 optional_uint32 = 3;
  if (this->optional_uint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->optional_uint32());
  }

  // uint64 optional_uint64 = 4;
  if (this->optional_uint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->optional_uint64());
  }

  // sint64 optional_sint64 = 6;
  if (this->optional_sint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->optional_sint64());
  }

  // sint32 optional_sint32 = 5;
  if (this->optional_sint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->optional_sint32());
  }

  // fixed32 optional_fixed32 = 7;
  if (this->optional_fixed32() != 0) {
    total_size += 1 + 4;
  }

  // fixed64 optional_fixed64 = 8;
  if (this->optional_fixed64() != 0) {
    total_size += 1 + 8;
  }

  // sfixed64 optional_sfixed64 = 10;
  if (this->optional_sfixed64() != 0) {
    total_size += 1 + 8;
  }

  // sfixed32 optional_sfixed32 = 9;
  if (this->optional_sfixed32() != 0) {
    total_size += 1 + 4;
  }

  // float optional_float = 11;
  if (this->optional_float() != 0) {
    total_size += 1 + 4;
  }

  // double optional_double = 12;
  if (this->optional_double() != 0) {
    total_size += 1 + 8;
  }

  // bool optional_bool = 13;
  if (this->optional_bool() != 0) {
    total_size += 1 + 1;
  }

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum optional_nested_enum = 21;
  if (this->optional_nested_enum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_nested_enum());
  }

  // int32 Field_name18__ = 418;
  if (this->field_name18__() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name18__());
  }

  // .protobuf_test_messages.proto3.ForeignEnum optional_foreign_enum = 22;
  if (this->optional_foreign_enum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_foreign_enum());
  }

  // int32 fieldname1 = 401;
  if (this->fieldname1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fieldname1());
  }

  // int32 field_name2 = 402;
  if (this->field_name2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name2());
  }

  // int32 _field_name3 = 403;
  if (this->_field_name3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_field_name3());
  }

  // int32 field__name4_ = 404;
  if (this->field__name4_() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field__name4_());
  }

  // int32 field0name5 = 405;
  if (this->field0name5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field0name5());
  }

  // int32 field_0_name6 = 406;
  if (this->field_0_name6() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_0_name6());
  }

  // int32 fieldName7 = 407;
  if (this->fieldname7() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fieldname7());
  }

  // int32 FieldName8 = 408;
  if (this->fieldname8() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fieldname8());
  }

  // int32 field_Name9 = 409;
  if (this->field_name9() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name9());
  }

  // int32 Field_Name10 = 410;
  if (this->field_name10() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name10());
  }

  // int32 FIELD_NAME11 = 411;
  if (this->field_name11() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name11());
  }

  // int32 FIELD_name12 = 412;
  if (this->field_name12() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name12());
  }

  // int32 __field_name13 = 413;
  if (this->__field_name13() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->__field_name13());
  }

  // int32 __Field_name14 = 414;
  if (this->__field_name14() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->__field_name14());
  }

  // int32 field__name15 = 415;
  if (this->field__name15() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field__name15());
  }

  // int32 field__Name16 = 416;
  if (this->field__name16() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field__name16());
  }

  // int32 field_name17__ = 417;
  if (this->field_name17__() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name17__());
  }

  switch (oneof_field_case()) {
    // uint32 oneof_uint32 = 111;
    case kOneofUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oneof_uint32());
      break;
    }
    // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage oneof_nested_message = 112;
    case kOneofNestedMessage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *oneof_field_.oneof_nested_message_);
      break;
    }
    // string oneof_string = 113;
    case kOneofString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oneof_string());
      break;
    }
    // bytes oneof_bytes = 114;
    case kOneofBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->oneof_bytes());
      break;
    }
    // bool oneof_bool = 115;
    case kOneofBool: {
      total_size += 2 + 1;
      break;
    }
    // uint64 oneof_uint64 = 116;
    case kOneofUint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->oneof_uint64());
      break;
    }
    // float oneof_float = 117;
    case kOneofFloat: {
      total_size += 2 + 4;
      break;
    }
    // double oneof_double = 118;
    case kOneofDouble: {
      total_size += 2 + 8;
      break;
    }
    // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum oneof_enum = 119;
    case kOneofEnum: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestAllTypesProto3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  GOOGLE_DCHECK_NE(&from, this);
  const TestAllTypesProto3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypesProto3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto3.TestAllTypesProto3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto3.TestAllTypesProto3)
    MergeFrom(*source);
  }
}

void TestAllTypesProto3::MergeFrom(const TestAllTypesProto3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  repeated_int32_.MergeFrom(from.repeated_int32_);
  repeated_int64_.MergeFrom(from.repeated_int64_);
  repeated_uint32_.MergeFrom(from.repeated_uint32_);
  repeated_uint64_.MergeFrom(from.repeated_uint64_);
  repeated_sint32_.MergeFrom(from.repeated_sint32_);
  repeated_sint64_.MergeFrom(from.repeated_sint64_);
  repeated_fixed32_.MergeFrom(from.repeated_fixed32_);
  repeated_fixed64_.MergeFrom(from.repeated_fixed64_);
  repeated_sfixed32_.MergeFrom(from.repeated_sfixed32_);
  repeated_sfixed64_.MergeFrom(from.repeated_sfixed64_);
  repeated_float_.MergeFrom(from.repeated_float_);
  repeated_double_.MergeFrom(from.repeated_double_);
  repeated_bool_.MergeFrom(from.repeated_bool_);
  repeated_string_.MergeFrom(from.repeated_string_);
  repeated_bytes_.MergeFrom(from.repeated_bytes_);
  repeated_nested_message_.MergeFrom(from.repeated_nested_message_);
  repeated_foreign_message_.MergeFrom(from.repeated_foreign_message_);
  repeated_nested_enum_.MergeFrom(from.repeated_nested_enum_);
  repeated_foreign_enum_.MergeFrom(from.repeated_foreign_enum_);
  repeated_string_piece_.MergeFrom(from.repeated_string_piece_);
  repeated_cord_.MergeFrom(from.repeated_cord_);
  map_int32_int32_.MergeFrom(from.map_int32_int32_);
  map_int64_int64_.MergeFrom(from.map_int64_int64_);
  map_uint32_uint32_.MergeFrom(from.map_uint32_uint32_);
  map_uint64_uint64_.MergeFrom(from.map_uint64_uint64_);
  map_sint32_sint32_.MergeFrom(from.map_sint32_sint32_);
  map_sint64_sint64_.MergeFrom(from.map_sint64_sint64_);
  map_fixed32_fixed32_.MergeFrom(from.map_fixed32_fixed32_);
  map_fixed64_fixed64_.MergeFrom(from.map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.MergeFrom(from.map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.MergeFrom(from.map_sfixed64_sfixed64_);
  map_int32_float_.MergeFrom(from.map_int32_float_);
  map_int32_double_.MergeFrom(from.map_int32_double_);
  map_bool_bool_.MergeFrom(from.map_bool_bool_);
  map_string_string_.MergeFrom(from.map_string_string_);
  map_string_bytes_.MergeFrom(from.map_string_bytes_);
  map_string_nested_message_.MergeFrom(from.map_string_nested_message_);
  map_string_foreign_message_.MergeFrom(from.map_string_foreign_message_);
  map_string_nested_enum_.MergeFrom(from.map_string_nested_enum_);
  map_string_foreign_enum_.MergeFrom(from.map_string_foreign_enum_);
  repeated_bool_wrapper_.MergeFrom(from.repeated_bool_wrapper_);
  repeated_int32_wrapper_.MergeFrom(from.repeated_int32_wrapper_);
  repeated_int64_wrapper_.MergeFrom(from.repeated_int64_wrapper_);
  repeated_uint32_wrapper_.MergeFrom(from.repeated_uint32_wrapper_);
  repeated_uint64_wrapper_.MergeFrom(from.repeated_uint64_wrapper_);
  repeated_float_wrapper_.MergeFrom(from.repeated_float_wrapper_);
  repeated_double_wrapper_.MergeFrom(from.repeated_double_wrapper_);
  repeated_string_wrapper_.MergeFrom(from.repeated_string_wrapper_);
  repeated_bytes_wrapper_.MergeFrom(from.repeated_bytes_wrapper_);
  repeated_duration_.MergeFrom(from.repeated_duration_);
  repeated_timestamp_.MergeFrom(from.repeated_timestamp_);
  repeated_fieldmask_.MergeFrom(from.repeated_fieldmask_);
  repeated_any_.MergeFrom(from.repeated_any_);
  repeated_value_.MergeFrom(from.repeated_value_);
  repeated_struct_.MergeFrom(from.repeated_struct_);
  if (from.optional_string().size() > 0) {
    set_optional_string(from.optional_string());
  }
  if (from.optional_bytes().size() > 0) {
    set_optional_bytes(from.optional_bytes());
  }
  if (from.optional_string_piece().size() > 0) {
    set_optional_string_piece(from.optional_string_piece());
  }
  if (from.optional_cord().size() > 0) {
    set_optional_cord(from.optional_cord());
  }
  if (from.has_optional_nested_message()) {
    mutable_optional_nested_message()->::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage::MergeFrom(from.optional_nested_message());
  }
  if (from.has_optional_foreign_message()) {
    mutable_optional_foreign_message()->::protobuf_test_messages::proto3::ForeignMessage::MergeFrom(from.optional_foreign_message());
  }
  if (from.has_recursive_message()) {
    mutable_recursive_message()->::protobuf_test_messages::proto3::TestAllTypesProto3::MergeFrom(from.recursive_message());
  }
  if (from.has_optional_bool_wrapper()) {
    mutable_optional_bool_wrapper()->::google::protobuf::BoolValue::MergeFrom(from.optional_bool_wrapper());
  }
  if (from.has_optional_int32_wrapper()) {
    mutable_optional_int32_wrapper()->::google::protobuf::Int32Value::MergeFrom(from.optional_int32_wrapper());
  }
  if (from.has_optional_int64_wrapper()) {
    mutable_optional_int64_wrapper()->::google::protobuf::Int64Value::MergeFrom(from.optional_int64_wrapper());
  }
  if (from.has_optional_uint32_wrapper()) {
    mutable_optional_uint32_wrapper()->::google::protobuf::UInt32Value::MergeFrom(from.optional_uint32_wrapper());
  }
  if (from.has_optional_uint64_wrapper()) {
    mutable_optional_uint64_wrapper()->::google::protobuf::UInt64Value::MergeFrom(from.optional_uint64_wrapper());
  }
  if (from.has_optional_float_wrapper()) {
    mutable_optional_float_wrapper()->::google::protobuf::FloatValue::MergeFrom(from.optional_float_wrapper());
  }
  if (from.has_optional_double_wrapper()) {
    mutable_optional_double_wrapper()->::google::protobuf::DoubleValue::MergeFrom(from.optional_double_wrapper());
  }
  if (from.has_optional_string_wrapper()) {
    mutable_optional_string_wrapper()->::google::protobuf::StringValue::MergeFrom(from.optional_string_wrapper());
  }
  if (from.has_optional_bytes_wrapper()) {
    mutable_optional_bytes_wrapper()->::google::protobuf::BytesValue::MergeFrom(from.optional_bytes_wrapper());
  }
  if (from.has_optional_duration()) {
    mutable_optional_duration()->::google::protobuf::Duration::MergeFrom(from.optional_duration());
  }
  if (from.has_optional_timestamp()) {
    mutable_optional_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.optional_timestamp());
  }
  if (from.has_optional_field_mask()) {
    mutable_optional_field_mask()->::google::protobuf::FieldMask::MergeFrom(from.optional_field_mask());
  }
  if (from.has_optional_struct()) {
    mutable_optional_struct()->::google::protobuf::Struct::MergeFrom(from.optional_struct());
  }
  if (from.has_optional_any()) {
    mutable_optional_any()->::google::protobuf::Any::MergeFrom(from.optional_any());
  }
  if (from.has_optional_value()) {
    mutable_optional_value()->::google::protobuf::Value::MergeFrom(from.optional_value());
  }
  if (from.optional_int64() != 0) {
    set_optional_int64(from.optional_int64());
  }
  if (from.optional_int32() != 0) {
    set_optional_int32(from.optional_int32());
  }
  if (from.optional_uint32() != 0) {
    set_optional_uint32(from.optional_uint32());
  }
  if (from.optional_uint64() != 0) {
    set_optional_uint64(from.optional_uint64());
  }
  if (from.optional_sint64() != 0) {
    set_optional_sint64(from.optional_sint64());
  }
  if (from.optional_sint32() != 0) {
    set_optional_sint32(from.optional_sint32());
  }
  if (from.optional_fixed32() != 0) {
    set_optional_fixed32(from.optional_fixed32());
  }
  if (from.optional_fixed64() != 0) {
    set_optional_fixed64(from.optional_fixed64());
  }
  if (from.optional_sfixed64() != 0) {
    set_optional_sfixed64(from.optional_sfixed64());
  }
  if (from.optional_sfixed32() != 0) {
    set_optional_sfixed32(from.optional_sfixed32());
  }
  if (from.optional_float() != 0) {
    set_optional_float(from.optional_float());
  }
  if (from.optional_double() != 0) {
    set_optional_double(from.optional_double());
  }
  if (from.optional_bool() != 0) {
    set_optional_bool(from.optional_bool());
  }
  if (from.optional_nested_enum() != 0) {
    set_optional_nested_enum(from.optional_nested_enum());
  }
  if (from.field_name18__() != 0) {
    set_field_name18__(from.field_name18__());
  }
  if (from.optional_foreign_enum() != 0) {
    set_optional_foreign_enum(from.optional_foreign_enum());
  }
  if (from.fieldname1() != 0) {
    set_fieldname1(from.fieldname1());
  }
  if (from.field_name2() != 0) {
    set_field_name2(from.field_name2());
  }
  if (from._field_name3() != 0) {
    set__field_name3(from._field_name3());
  }
  if (from.field__name4_() != 0) {
    set_field__name4_(from.field__name4_());
  }
  if (from.field0name5() != 0) {
    set_field0name5(from.field0name5());
  }
  if (from.field_0_name6() != 0) {
    set_field_0_name6(from.field_0_name6());
  }
  if (from.fieldname7() != 0) {
    set_fieldname7(from.fieldname7());
  }
  if (from.fieldname8() != 0) {
    set_fieldname8(from.fieldname8());
  }
  if (from.field_name9() != 0) {
    set_field_name9(from.field_name9());
  }
  if (from.field_name10() != 0) {
    set_field_name10(from.field_name10());
  }
  if (from.field_name11() != 0) {
    set_field_name11(from.field_name11());
  }
  if (from.field_name12() != 0) {
    set_field_name12(from.field_name12());
  }
  if (from.__field_name13() != 0) {
    set___field_name13(from.__field_name13());
  }
  if (from.__field_name14() != 0) {
    set___field_name14(from.__field_name14());
  }
  if (from.field__name15() != 0) {
    set_field__name15(from.field__name15());
  }
  if (from.field__name16() != 0) {
    set_field__name16(from.field__name16());
  }
  if (from.field_name17__() != 0) {
    set_field_name17__(from.field_name17__());
  }
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      set_oneof_uint32(from.oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      mutable_oneof_nested_message()->::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage::MergeFrom(from.oneof_nested_message());
      break;
    }
    case kOneofString: {
      set_oneof_string(from.oneof_string());
      break;
    }
    case kOneofBytes: {
      set_oneof_bytes(from.oneof_bytes());
      break;
    }
    case kOneofBool: {
      set_oneof_bool(from.oneof_bool());
      break;
    }
    case kOneofUint64: {
      set_oneof_uint64(from.oneof_uint64());
      break;
    }
    case kOneofFloat: {
      set_oneof_float(from.oneof_float());
      break;
    }
    case kOneofDouble: {
      set_oneof_double(from.oneof_double());
      break;
    }
    case kOneofEnum: {
      set_oneof_enum(from.oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
}

void TestAllTypesProto3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypesProto3::CopyFrom(const TestAllTypesProto3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto3.TestAllTypesProto3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypesProto3::IsInitialized() const {
  return true;
}

void TestAllTypesProto3::Swap(TestAllTypesProto3* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypesProto3* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TestAllTypesProto3::UnsafeArenaSwap(TestAllTypesProto3* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypesProto3::InternalSwap(TestAllTypesProto3* other) {
  using std::swap;
  repeated_int32_.InternalSwap(&other->repeated_int32_);
  repeated_int64_.InternalSwap(&other->repeated_int64_);
  repeated_uint32_.InternalSwap(&other->repeated_uint32_);
  repeated_uint64_.InternalSwap(&other->repeated_uint64_);
  repeated_sint32_.InternalSwap(&other->repeated_sint32_);
  repeated_sint64_.InternalSwap(&other->repeated_sint64_);
  repeated_fixed32_.InternalSwap(&other->repeated_fixed32_);
  repeated_fixed64_.InternalSwap(&other->repeated_fixed64_);
  repeated_sfixed32_.InternalSwap(&other->repeated_sfixed32_);
  repeated_sfixed64_.InternalSwap(&other->repeated_sfixed64_);
  repeated_float_.InternalSwap(&other->repeated_float_);
  repeated_double_.InternalSwap(&other->repeated_double_);
  repeated_bool_.InternalSwap(&other->repeated_bool_);
  repeated_string_.InternalSwap(CastToBase(&other->repeated_string_));
  repeated_bytes_.InternalSwap(CastToBase(&other->repeated_bytes_));
  CastToBase(&repeated_nested_message_)->InternalSwap(CastToBase(&other->repeated_nested_message_));
  CastToBase(&repeated_foreign_message_)->InternalSwap(CastToBase(&other->repeated_foreign_message_));
  repeated_nested_enum_.InternalSwap(&other->repeated_nested_enum_);
  repeated_foreign_enum_.InternalSwap(&other->repeated_foreign_enum_);
  repeated_string_piece_.InternalSwap(CastToBase(&other->repeated_string_piece_));
  repeated_cord_.InternalSwap(CastToBase(&other->repeated_cord_));
  map_int32_int32_.Swap(&other->map_int32_int32_);
  map_int64_int64_.Swap(&other->map_int64_int64_);
  map_uint32_uint32_.Swap(&other->map_uint32_uint32_);
  map_uint64_uint64_.Swap(&other->map_uint64_uint64_);
  map_sint32_sint32_.Swap(&other->map_sint32_sint32_);
  map_sint64_sint64_.Swap(&other->map_sint64_sint64_);
  map_fixed32_fixed32_.Swap(&other->map_fixed32_fixed32_);
  map_fixed64_fixed64_.Swap(&other->map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.Swap(&other->map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.Swap(&other->map_sfixed64_sfixed64_);
  map_int32_float_.Swap(&other->map_int32_float_);
  map_int32_double_.Swap(&other->map_int32_double_);
  map_bool_bool_.Swap(&other->map_bool_bool_);
  map_string_string_.Swap(&other->map_string_string_);
  map_string_bytes_.Swap(&other->map_string_bytes_);
  map_string_nested_message_.Swap(&other->map_string_nested_message_);
  map_string_foreign_message_.Swap(&other->map_string_foreign_message_);
  map_string_nested_enum_.Swap(&other->map_string_nested_enum_);
  map_string_foreign_enum_.Swap(&other->map_string_foreign_enum_);
  CastToBase(&repeated_bool_wrapper_)->InternalSwap(CastToBase(&other->repeated_bool_wrapper_));
  CastToBase(&repeated_int32_wrapper_)->InternalSwap(CastToBase(&other->repeated_int32_wrapper_));
  CastToBase(&repeated_int64_wrapper_)->InternalSwap(CastToBase(&other->repeated_int64_wrapper_));
  CastToBase(&repeated_uint32_wrapper_)->InternalSwap(CastToBase(&other->repeated_uint32_wrapper_));
  CastToBase(&repeated_uint64_wrapper_)->InternalSwap(CastToBase(&other->repeated_uint64_wrapper_));
  CastToBase(&repeated_float_wrapper_)->InternalSwap(CastToBase(&other->repeated_float_wrapper_));
  CastToBase(&repeated_double_wrapper_)->InternalSwap(CastToBase(&other->repeated_double_wrapper_));
  CastToBase(&repeated_string_wrapper_)->InternalSwap(CastToBase(&other->repeated_string_wrapper_));
  CastToBase(&repeated_bytes_wrapper_)->InternalSwap(CastToBase(&other->repeated_bytes_wrapper_));
  CastToBase(&repeated_duration_)->InternalSwap(CastToBase(&other->repeated_duration_));
  CastToBase(&repeated_timestamp_)->InternalSwap(CastToBase(&other->repeated_timestamp_));
  CastToBase(&repeated_fieldmask_)->InternalSwap(CastToBase(&other->repeated_fieldmask_));
  CastToBase(&repeated_any_)->InternalSwap(CastToBase(&other->repeated_any_));
  CastToBase(&repeated_value_)->InternalSwap(CastToBase(&other->repeated_value_));
  CastToBase(&repeated_struct_)->InternalSwap(CastToBase(&other->repeated_struct_));
  optional_string_.Swap(&other->optional_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  optional_bytes_.Swap(&other->optional_bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  optional_string_piece_.Swap(&other->optional_string_piece_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  optional_cord_.Swap(&other->optional_cord_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(optional_nested_message_, other->optional_nested_message_);
  swap(optional_foreign_message_, other->optional_foreign_message_);
  swap(recursive_message_, other->recursive_message_);
  swap(optional_bool_wrapper_, other->optional_bool_wrapper_);
  swap(optional_int32_wrapper_, other->optional_int32_wrapper_);
  swap(optional_int64_wrapper_, other->optional_int64_wrapper_);
  swap(optional_uint32_wrapper_, other->optional_uint32_wrapper_);
  swap(optional_uint64_wrapper_, other->optional_uint64_wrapper_);
  swap(optional_float_wrapper_, other->optional_float_wrapper_);
  swap(optional_double_wrapper_, other->optional_double_wrapper_);
  swap(optional_string_wrapper_, other->optional_string_wrapper_);
  swap(optional_bytes_wrapper_, other->optional_bytes_wrapper_);
  swap(optional_duration_, other->optional_duration_);
  swap(optional_timestamp_, other->optional_timestamp_);
  swap(optional_field_mask_, other->optional_field_mask_);
  swap(optional_struct_, other->optional_struct_);
  swap(optional_any_, other->optional_any_);
  swap(optional_value_, other->optional_value_);
  swap(optional_int64_, other->optional_int64_);
  swap(optional_int32_, other->optional_int32_);
  swap(optional_uint32_, other->optional_uint32_);
  swap(optional_uint64_, other->optional_uint64_);
  swap(optional_sint64_, other->optional_sint64_);
  swap(optional_sint32_, other->optional_sint32_);
  swap(optional_fixed32_, other->optional_fixed32_);
  swap(optional_fixed64_, other->optional_fixed64_);
  swap(optional_sfixed64_, other->optional_sfixed64_);
  swap(optional_sfixed32_, other->optional_sfixed32_);
  swap(optional_float_, other->optional_float_);
  swap(optional_double_, other->optional_double_);
  swap(optional_bool_, other->optional_bool_);
  swap(optional_nested_enum_, other->optional_nested_enum_);
  swap(field_name18___, other->field_name18___);
  swap(optional_foreign_enum_, other->optional_foreign_enum_);
  swap(fieldname1_, other->fieldname1_);
  swap(field_name2_, other->field_name2_);
  swap(_field_name3_, other->_field_name3_);
  swap(field__name4__, other->field__name4__);
  swap(field0name5_, other->field0name5_);
  swap(field_0_name6_, other->field_0_name6_);
  swap(fieldname7_, other->fieldname7_);
  swap(fieldname8_, other->fieldname8_);
  swap(field_name9_, other->field_name9_);
  swap(field_name10_, other->field_name10_);
  swap(field_name11_, other->field_name11_);
  swap(field_name12_, other->field_name12_);
  swap(__field_name13_, other->__field_name13_);
  swap(__field_name14_, other->__field_name14_);
  swap(field__name15_, other->field__name15_);
  swap(field__name16_, other->field__name16_);
  swap(field_name17___, other->field_name17___);
  swap(oneof_field_, other->oneof_field_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestAllTypesProto3::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForeignMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForeignMessage::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForeignMessage::ForeignMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_ForeignMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto3.ForeignMessage)
}
ForeignMessage::ForeignMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_ForeignMessage.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto3.ForeignMessage)
}
ForeignMessage::ForeignMessage(const ForeignMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  c_ = from.c_;
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto3.ForeignMessage)
}

void ForeignMessage::SharedCtor() {
  c_ = 0;
}

ForeignMessage::~ForeignMessage() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto3.ForeignMessage)
  SharedDtor();
}

void ForeignMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ForeignMessage::ArenaDtor(void* object) {
  ForeignMessage* _this = reinterpret_cast< ForeignMessage* >(object);
  (void)_this;
}
void ForeignMessage::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ForeignMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForeignMessage::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForeignMessage& ForeignMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::scc_info_ForeignMessage.base);
  return *internal_default_instance();
}


void ForeignMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto3.ForeignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c_ = 0;
  _internal_metadata_.Clear();
}

bool ForeignMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto3.ForeignMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 c = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto3.ForeignMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto3.ForeignMessage)
  return false;
#undef DO_
}

void ForeignMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto3.ForeignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 c = 1;
  if (this->c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto3.ForeignMessage)
}

::google::protobuf::uint8* ForeignMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto3.ForeignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 c = 1;
  if (this->c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto3.ForeignMessage)
  return target;
}

size_t ForeignMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto3.ForeignMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 c = 1;
  if (this->c() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForeignMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto3.ForeignMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ForeignMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForeignMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto3.ForeignMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto3.ForeignMessage)
    MergeFrom(*source);
  }
}

void ForeignMessage::MergeFrom(const ForeignMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto3.ForeignMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.c() != 0) {
    set_c(from.c());
  }
}

void ForeignMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto3.ForeignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForeignMessage::CopyFrom(const ForeignMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto3.ForeignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForeignMessage::IsInitialized() const {
  return true;
}

void ForeignMessage::Swap(ForeignMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ForeignMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ForeignMessage::UnsafeArenaSwap(ForeignMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ForeignMessage::InternalSwap(ForeignMessage* other) {
  using std::swap;
  swap(c_, other->c_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForeignMessage::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto3
}  // namespace protobuf_test_messages
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::TestAllTypesProto3* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::TestAllTypesProto3 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto3::ForeignMessage* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto3::ForeignMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto3::ForeignMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
