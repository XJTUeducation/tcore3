// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/test_messages_proto2.proto

#include <google/protobuf/test_messages_proto2.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ForeignMessageProto2;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_Data;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapBoolBoolEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapInt32FloatEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapInt32Int32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapInt64Int64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapStringBytesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapStringStringEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MessageSetCorrectExtension1;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MessageSetCorrectExtension2;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto ::google::protobuf::internal::SCCInfo<20> scc_info_TestAllTypesProto2;
}  // namespace protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto
namespace protobuf_test_messages {
namespace proto2 {
class TestAllTypesProto2_NestedMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_NestedMessage>
      _instance;
} _TestAllTypesProto2_NestedMessage_default_instance_;
class TestAllTypesProto2_MapInt32Int32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapInt32Int32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapInt32Int32Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapInt64Int64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapInt64Int64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapInt64Int64Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapInt32FloatEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapInt32FloatEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapInt32FloatEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapBoolBoolEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapBoolBoolEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapBoolBoolEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapStringStringEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapStringStringEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapStringStringEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapStringBytesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapStringBytesEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapStringBytesEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse>
      _instance;
} _TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse_default_instance_;
class TestAllTypesProto2_DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_Data>
      _instance;
} _TestAllTypesProto2_Data_default_instance_;
class TestAllTypesProto2_MessageSetCorrectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MessageSetCorrect>
      _instance;
} _TestAllTypesProto2_MessageSetCorrect_default_instance_;
class TestAllTypesProto2_MessageSetCorrectExtension1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MessageSetCorrectExtension1>
      _instance;
} _TestAllTypesProto2_MessageSetCorrectExtension1_default_instance_;
class TestAllTypesProto2_MessageSetCorrectExtension2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2_MessageSetCorrectExtension2>
      _instance;
} _TestAllTypesProto2_MessageSetCorrectExtension2_default_instance_;
class TestAllTypesProto2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestAllTypesProto2>
      _instance;
  ::google::protobuf::uint32 oneof_uint32_;
  const ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage* oneof_nested_message_;
  ::google::protobuf::internal::ArenaStringPtr oneof_string_;
  ::google::protobuf::internal::ArenaStringPtr oneof_bytes_;
  bool oneof_bool_;
  ::google::protobuf::uint64 oneof_uint64_;
  float oneof_float_;
  double oneof_double_;
  int oneof_enum_;
} _TestAllTypesProto2_default_instance_;
class ForeignMessageProto2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForeignMessageProto2>
      _instance;
} _ForeignMessageProto2_default_instance_;
}  // namespace proto2
}  // namespace protobuf_test_messages
namespace protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto {
static void InitDefaultsTestAllTypesProto2_MapInt32Int32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapInt32Int32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapInt32Int32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapInt32Int32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapInt64Int64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapInt64Int64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapInt64Int64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapInt64Int64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapUint32Uint32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapUint32Uint32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapUint64Uint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapUint64Uint64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapSint32Sint32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapSint32Sint32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapSint64Sint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapSint64Sint64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapInt32FloatEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapInt32FloatEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapInt32FloatEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapInt32FloatEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapInt32DoubleEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapInt32DoubleEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapBoolBoolEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapBoolBoolEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapBoolBoolEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapBoolBoolEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapStringStringEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringStringEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapStringStringEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapStringStringEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapStringBytesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringBytesEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapStringBytesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapStringBytesEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse}, {
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_ForeignMessageProto2.base,}};

static void InitDefaultsTestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse();
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse}, {}};

static void InitDefaultsTestAllTypesProto2_Data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_Data_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_Data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_Data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_Data}, {}};

static void InitDefaultsTestAllTypesProto2_MessageSetCorrect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MessageSetCorrect_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MessageSetCorrect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MessageSetCorrect}, {}};

static void InitDefaultsTestAllTypesProto2_MessageSetCorrectExtension1() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MessageSetCorrectExtension1_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MessageSetCorrectExtension1 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MessageSetCorrectExtension1}, {}};

static void InitDefaultsTestAllTypesProto2_MessageSetCorrectExtension2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MessageSetCorrectExtension2_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestAllTypesProto2_MessageSetCorrectExtension2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestAllTypesProto2_MessageSetCorrectExtension2}, {}};

static void InitDefaultsTestAllTypesProto2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_NestedMessage_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse();
  }
  {
    void* ptr = &::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::TestAllTypesProto2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage::InitAsDefaultInstance();
  ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse::InitAsDefaultInstance();
  ::protobuf_test_messages::proto2::TestAllTypesProto2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<20> scc_info_TestAllTypesProto2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 20, InitDefaultsTestAllTypesProto2}, {
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_ForeignMessageProto2.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapInt32Int32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapInt64Int64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapInt32FloatEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapBoolBoolEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapStringStringEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapStringBytesEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_Data.base,}};

static void InitDefaultsForeignMessageProto2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_test_messages::proto2::_ForeignMessageProto2_default_instance_;
    new (ptr) ::protobuf_test_messages::proto2::ForeignMessageProto2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_test_messages::proto2::ForeignMessageProto2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ForeignMessageProto2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsForeignMessageProto2}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapInt32Int32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapInt64Int64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapInt32FloatEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapBoolBoolEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapStringStringEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapStringBytesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_Data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MessageSetCorrect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MessageSetCorrectExtension1.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2_MessageSetCorrectExtension2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestAllTypesProto2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForeignMessageProto2.base);
}

::google::protobuf::Metadata file_level_metadata[26];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage, corecursive_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_Data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_Data, group_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_Data, group_uint32_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect, _internal_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect, _extensions_),
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1, str_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2, i_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, _internal_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, _extensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_nested_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_foreign_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_nested_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_foreign_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_string_piece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, optional_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, recursive_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_nested_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_foreign_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_nested_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_foreign_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_string_piece_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, repeated_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_int32_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_int64_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_uint32_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_uint64_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_sint32_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_sint64_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_fixed32_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_fixed64_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_sfixed32_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_sfixed64_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_int32_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_int32_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_bool_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_string_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_string_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_string_nested_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_string_foreign_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_string_nested_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, map_string_foreign_enum_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_uint32_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_nested_message_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_string_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_bytes_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_bool_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_uint64_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_float_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_double_),
  offsetof(::protobuf_test_messages::proto2::TestAllTypesProto2DefaultTypeInternal, oneof_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, fieldname1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field_name2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, _field_name3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field__name4__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field0name5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field_0_name6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, fieldname7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, fieldname8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field_name9_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field_name10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field_name11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field_name12_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, __field_name13_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, __field_name14_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field__name15_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field__name16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field_name17___),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, field_name18___),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::TestAllTypesProto2, oneof_field_),
  9,
  8,
  10,
  11,
  13,
  12,
  14,
  15,
  17,
  16,
  18,
  19,
  20,
  0,
  1,
  4,
  5,
  21,
  23,
  2,
  3,
  6,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  7,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  22,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::ForeignMessageProto2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::ForeignMessageProto2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf_test_messages::proto2::ForeignMessageProto2, c_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage)},
  { 9, 16, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse)},
  { 18, 25, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse)},
  { 27, 34, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse)},
  { 36, 43, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse)},
  { 45, 52, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse)},
  { 54, 61, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse)},
  { 63, 70, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse)},
  { 72, 79, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse)},
  { 81, 88, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse)},
  { 90, 97, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse)},
  { 99, 106, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse)},
  { 108, 115, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse)},
  { 117, 124, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse)},
  { 126, 133, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse)},
  { 135, 142, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse)},
  { 144, 151, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse)},
  { 153, 160, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse)},
  { 162, 169, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse)},
  { 171, 178, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse)},
  { 180, 187, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_Data)},
  { 189, 194, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect)},
  { 194, 200, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1)},
  { 201, 207, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2)},
  { 208, 304, sizeof(::protobuf_test_messages::proto2::TestAllTypesProto2)},
  { 394, 400, sizeof(::protobuf_test_messages::proto2::ForeignMessageProto2)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_NestedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapInt32Int32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapInt64Int64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapInt32FloatEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapBoolBoolEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringStringEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringBytesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MessageSetCorrect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MessageSetCorrectExtension1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_MessageSetCorrectExtension2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf_test_messages::proto2::_ForeignMessageProto2_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/protobuf/test_messages_proto2.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*google/protobuf/test_messages_proto2.p"
      "roto\022\035protobuf_test_messages.proto2\"\3362\n\022"
      "TestAllTypesProto2\022\026\n\016optional_int32\030\001 \001"
      "(\005\022\026\n\016optional_int64\030\002 \001(\003\022\027\n\017optional_u"
      "int32\030\003 \001(\r\022\027\n\017optional_uint64\030\004 \001(\004\022\027\n\017"
      "optional_sint32\030\005 \001(\021\022\027\n\017optional_sint64"
      "\030\006 \001(\022\022\030\n\020optional_fixed32\030\007 \001(\007\022\030\n\020opti"
      "onal_fixed64\030\010 \001(\006\022\031\n\021optional_sfixed32\030"
      "\t \001(\017\022\031\n\021optional_sfixed64\030\n \001(\020\022\026\n\016opti"
      "onal_float\030\013 \001(\002\022\027\n\017optional_double\030\014 \001("
      "\001\022\025\n\roptional_bool\030\r \001(\010\022\027\n\017optional_str"
      "ing\030\016 \001(\t\022\026\n\016optional_bytes\030\017 \001(\014\022`\n\027opt"
      "ional_nested_message\030\022 \001(\0132\?.protobuf_te"
      "st_messages.proto2.TestAllTypesProto2.Ne"
      "stedMessage\022U\n\030optional_foreign_message\030"
      "\023 \001(\01323.protobuf_test_messages.proto2.Fo"
      "reignMessageProto2\022Z\n\024optional_nested_en"
      "um\030\025 \001(\0162<.protobuf_test_messages.proto2"
      ".TestAllTypesProto2.NestedEnum\022O\n\025option"
      "al_foreign_enum\030\026 \001(\01620.protobuf_test_me"
      "ssages.proto2.ForeignEnumProto2\022!\n\025optio"
      "nal_string_piece\030\030 \001(\tB\002\010\002\022\031\n\roptional_c"
      "ord\030\031 \001(\tB\002\010\001\022L\n\021recursive_message\030\033 \001(\013"
      "21.protobuf_test_messages.proto2.TestAll"
      "TypesProto2\022\026\n\016repeated_int32\030\037 \003(\005\022\026\n\016r"
      "epeated_int64\030  \003(\003\022\027\n\017repeated_uint32\030!"
      " \003(\r\022\027\n\017repeated_uint64\030\" \003(\004\022\027\n\017repeate"
      "d_sint32\030# \003(\021\022\027\n\017repeated_sint64\030$ \003(\022\022"
      "\030\n\020repeated_fixed32\030% \003(\007\022\030\n\020repeated_fi"
      "xed64\030& \003(\006\022\031\n\021repeated_sfixed32\030\' \003(\017\022\031"
      "\n\021repeated_sfixed64\030( \003(\020\022\026\n\016repeated_fl"
      "oat\030) \003(\002\022\027\n\017repeated_double\030* \003(\001\022\025\n\rre"
      "peated_bool\030+ \003(\010\022\027\n\017repeated_string\030, \003"
      "(\t\022\026\n\016repeated_bytes\030- \003(\014\022`\n\027repeated_n"
      "ested_message\0300 \003(\0132\?.protobuf_test_mess"
      "ages.proto2.TestAllTypesProto2.NestedMes"
      "sage\022U\n\030repeated_foreign_message\0301 \003(\01323"
      ".protobuf_test_messages.proto2.ForeignMe"
      "ssageProto2\022Z\n\024repeated_nested_enum\0303 \003("
      "\0162<.protobuf_test_messages.proto2.TestAl"
      "lTypesProto2.NestedEnum\022O\n\025repeated_fore"
      "ign_enum\0304 \003(\01620.protobuf_test_messages."
      "proto2.ForeignEnumProto2\022!\n\025repeated_str"
      "ing_piece\0306 \003(\tB\002\010\002\022\031\n\rrepeated_cord\0307 \003"
      "(\tB\002\010\001\022]\n\017map_int32_int32\0308 \003(\0132D.protob"
      "uf_test_messages.proto2.TestAllTypesProt"
      "o2.MapInt32Int32Entry\022]\n\017map_int64_int64"
      "\0309 \003(\0132D.protobuf_test_messages.proto2.T"
      "estAllTypesProto2.MapInt64Int64Entry\022a\n\021"
      "map_uint32_uint32\030: \003(\0132F.protobuf_test_"
      "messages.proto2.TestAllTypesProto2.MapUi"
      "nt32Uint32Entry\022a\n\021map_uint64_uint64\030; \003"
      "(\0132F.protobuf_test_messages.proto2.TestA"
      "llTypesProto2.MapUint64Uint64Entry\022a\n\021ma"
      "p_sint32_sint32\030< \003(\0132F.protobuf_test_me"
      "ssages.proto2.TestAllTypesProto2.MapSint"
      "32Sint32Entry\022a\n\021map_sint64_sint64\030= \003(\013"
      "2F.protobuf_test_messages.proto2.TestAll"
      "TypesProto2.MapSint64Sint64Entry\022e\n\023map_"
      "fixed32_fixed32\030> \003(\0132H.protobuf_test_me"
      "ssages.proto2.TestAllTypesProto2.MapFixe"
      "d32Fixed32Entry\022e\n\023map_fixed64_fixed64\030\?"
      " \003(\0132H.protobuf_test_messages.proto2.Tes"
      "tAllTypesProto2.MapFixed64Fixed64Entry\022i"
      "\n\025map_sfixed32_sfixed32\030@ \003(\0132J.protobuf"
      "_test_messages.proto2.TestAllTypesProto2"
      ".MapSfixed32Sfixed32Entry\022i\n\025map_sfixed6"
      "4_sfixed64\030A \003(\0132J.protobuf_test_message"
      "s.proto2.TestAllTypesProto2.MapSfixed64S"
      "fixed64Entry\022]\n\017map_int32_float\030B \003(\0132D."
      "protobuf_test_messages.proto2.TestAllTyp"
      "esProto2.MapInt32FloatEntry\022_\n\020map_int32"
      "_double\030C \003(\0132E.protobuf_test_messages.p"
      "roto2.TestAllTypesProto2.MapInt32DoubleE"
      "ntry\022Y\n\rmap_bool_bool\030D \003(\0132B.protobuf_t"
      "est_messages.proto2.TestAllTypesProto2.M"
      "apBoolBoolEntry\022a\n\021map_string_string\030E \003"
      "(\0132F.protobuf_test_messages.proto2.TestA"
      "llTypesProto2.MapStringStringEntry\022_\n\020ma"
      "p_string_bytes\030F \003(\0132E.protobuf_test_mes"
      "sages.proto2.TestAllTypesProto2.MapStrin"
      "gBytesEntry\022p\n\031map_string_nested_message"
      "\030G \003(\0132M.protobuf_test_messages.proto2.T"
      "estAllTypesProto2.MapStringNestedMessage"
      "Entry\022r\n\032map_string_foreign_message\030H \003("
      "\0132N.protobuf_test_messages.proto2.TestAl"
      "lTypesProto2.MapStringForeignMessageEntr"
      "y\022j\n\026map_string_nested_enum\030I \003(\0132J.prot"
      "obuf_test_messages.proto2.TestAllTypesPr"
      "oto2.MapStringNestedEnumEntry\022l\n\027map_str"
      "ing_foreign_enum\030J \003(\0132K.protobuf_test_m"
      "essages.proto2.TestAllTypesProto2.MapStr"
      "ingForeignEnumEntry\022\026\n\014oneof_uint32\030o \001("
      "\rH\000\022_\n\024oneof_nested_message\030p \001(\0132\?.prot"
      "obuf_test_messages.proto2.TestAllTypesPr"
      "oto2.NestedMessageH\000\022\026\n\014oneof_string\030q \001"
      "(\tH\000\022\025\n\013oneof_bytes\030r \001(\014H\000\022\024\n\noneof_boo"
      "l\030s \001(\010H\000\022\026\n\014oneof_uint64\030t \001(\004H\000\022\025\n\013one"
      "of_float\030u \001(\002H\000\022\026\n\014oneof_double\030v \001(\001H\000"
      "\022R\n\noneof_enum\030w \001(\0162<.protobuf_test_mes"
      "sages.proto2.TestAllTypesProto2.NestedEn"
      "umH\000\022E\n\004data\030\311\001 \001(\n26.protobuf_test_mess"
      "ages.proto2.TestAllTypesProto2.Data\022\023\n\nf"
      "ieldname1\030\221\003 \001(\005\022\024\n\013field_name2\030\222\003 \001(\005\022\025"
      "\n\014_field_name3\030\223\003 \001(\005\022\026\n\rfield__name4_\030\224"
      "\003 \001(\005\022\024\n\013field0name5\030\225\003 \001(\005\022\026\n\rfield_0_n"
      "ame6\030\226\003 \001(\005\022\023\n\nfieldName7\030\227\003 \001(\005\022\023\n\nFiel"
      "dName8\030\230\003 \001(\005\022\024\n\013field_Name9\030\231\003 \001(\005\022\025\n\014F"
      "ield_Name10\030\232\003 \001(\005\022\025\n\014FIELD_NAME11\030\233\003 \001("
      "\005\022\025\n\014FIELD_name12\030\234\003 \001(\005\022\027\n\016__field_name"
      "13\030\235\003 \001(\005\022\027\n\016__Field_name14\030\236\003 \001(\005\022\026\n\rfi"
      "eld__name15\030\237\003 \001(\005\022\026\n\rfield__Name16\030\240\003 \001"
      "(\005\022\027\n\016field_name17__\030\241\003 \001(\005\022\027\n\016Field_nam"
      "e18__\030\242\003 \001(\005\032b\n\rNestedMessage\022\t\n\001a\030\001 \001(\005"
      "\022F\n\013corecursive\030\002 \001(\01321.protobuf_test_me"
      "ssages.proto2.TestAllTypesProto2\0324\n\022MapI"
      "nt32Int32Entry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001"
      "(\005:\0028\001\0324\n\022MapInt64Int64Entry\022\013\n\003key\030\001 \001("
      "\003\022\r\n\005value\030\002 \001(\003:\0028\001\0326\n\024MapUint32Uint32E"
      "ntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\0326\n\024"
      "MapUint64Uint64Entry\022\013\n\003key\030\001 \001(\004\022\r\n\005val"
      "ue\030\002 \001(\004:\0028\001\0326\n\024MapSint32Sint32Entry\022\013\n\003"
      "key\030\001 \001(\021\022\r\n\005value\030\002 \001(\021:\0028\001\0326\n\024MapSint6"
      "4Sint64Entry\022\013\n\003key\030\001 \001(\022\022\r\n\005value\030\002 \001(\022"
      ":\0028\001\0328\n\026MapFixed32Fixed32Entry\022\013\n\003key\030\001 "
      "\001(\007\022\r\n\005value\030\002 \001(\007:\0028\001\0328\n\026MapFixed64Fixe"
      "d64Entry\022\013\n\003key\030\001 \001(\006\022\r\n\005value\030\002 \001(\006:\0028\001"
      "\032:\n\030MapSfixed32Sfixed32Entry\022\013\n\003key\030\001 \001("
      "\017\022\r\n\005value\030\002 \001(\017:\0028\001\032:\n\030MapSfixed64Sfixe"
      "d64Entry\022\013\n\003key\030\001 \001(\020\022\r\n\005value\030\002 \001(\020:\0028\001"
      "\0324\n\022MapInt32FloatEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005v"
      "alue\030\002 \001(\002:\0028\001\0325\n\023MapInt32DoubleEntry\022\013\n"
      "\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\001:\0028\001\0322\n\020MapBool"
      "BoolEntry\022\013\n\003key\030\001 \001(\010\022\r\n\005value\030\002 \001(\010:\0028"
      "\001\0326\n\024MapStringStringEntry\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005value\030\002 \001(\t:\0028\001\0325\n\023MapStringBytesEntry"
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\032~\n\033MapS"
      "tringNestedMessageEntry\022\013\n\003key\030\001 \001(\t\022N\n\005"
      "value\030\002 \001(\0132\?.protobuf_test_messages.pro"
      "to2.TestAllTypesProto2.NestedMessage:\0028\001"
      "\032s\n\034MapStringForeignMessageEntry\022\013\n\003key\030"
      "\001 \001(\t\022B\n\005value\030\002 \001(\01323.protobuf_test_mes"
      "sages.proto2.ForeignMessageProto2:\0028\001\032x\n"
      "\030MapStringNestedEnumEntry\022\013\n\003key\030\001 \001(\t\022K"
      "\n\005value\030\002 \001(\0162<.protobuf_test_messages.p"
      "roto2.TestAllTypesProto2.NestedEnum:\0028\001\032"
      "m\n\031MapStringForeignEnumEntry\022\013\n\003key\030\001 \001("
      "\t\022\?\n\005value\030\002 \001(\01620.protobuf_test_message"
      "s.proto2.ForeignEnumProto2:\0028\001\0323\n\004Data\022\024"
      "\n\013group_int32\030\312\001 \001(\005\022\025\n\014group_uint32\030\313\001 "
      "\001(\r\032!\n\021MessageSetCorrect*\010\010\004\020\377\377\377\377\007:\002\010\001\032\340"
      "\001\n\033MessageSetCorrectExtension1\022\013\n\003str\030\031 "
      "\001(\t2\263\001\n\025message_set_extension\022C.protobuf"
      "_test_messages.proto2.TestAllTypesProto2"
      ".MessageSetCorrect\030\371\273^ \001(\0132M.protobuf_te"
      "st_messages.proto2.TestAllTypesProto2.Me"
      "ssageSetCorrectExtension1\032\337\001\n\033MessageSet"
      "CorrectExtension2\022\t\n\001i\030\t \001(\0052\264\001\n\025message"
      "_set_extension\022C.protobuf_test_messages."
      "proto2.TestAllTypesProto2.MessageSetCorr"
      "ect\030\220\263\374\001 \001(\0132M.protobuf_test_messages.pr"
      "oto2.TestAllTypesProto2.MessageSetCorrec"
      "tExtension2\"9\n\nNestedEnum\022\007\n\003FOO\020\000\022\007\n\003BA"
      "R\020\001\022\007\n\003BAZ\020\002\022\020\n\003NEG\020\377\377\377\377\377\377\377\377\377\001*\005\010x\020\311\001B\r\n"
      "\013oneof_field\"!\n\024ForeignMessageProto2\022\t\n\001"
      "c\030\001 \001(\005*F\n\021ForeignEnumProto2\022\017\n\013FOREIGN_"
      "FOO\020\000\022\017\n\013FOREIGN_BAR\020\001\022\017\n\013FOREIGN_BAZ\020\002:"
      "J\n\017extension_int32\0221.protobuf_test_messa"
      "ges.proto2.TestAllTypesProto2\030x \001(\005B/\n(c"
      "om.google.protobuf_test_messages.proto2H"
      "\001\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6804);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/test_messages_proto2.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto
namespace protobuf_test_messages {
namespace proto2 {
const ::google::protobuf::EnumDescriptor* TestAllTypesProto2_NestedEnum_descriptor() {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_enum_descriptors[0];
}
bool TestAllTypesProto2_NestedEnum_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TestAllTypesProto2_NestedEnum TestAllTypesProto2::FOO;
const TestAllTypesProto2_NestedEnum TestAllTypesProto2::BAR;
const TestAllTypesProto2_NestedEnum TestAllTypesProto2::BAZ;
const TestAllTypesProto2_NestedEnum TestAllTypesProto2::NEG;
const TestAllTypesProto2_NestedEnum TestAllTypesProto2::NestedEnum_MIN;
const TestAllTypesProto2_NestedEnum TestAllTypesProto2::NestedEnum_MAX;
const int TestAllTypesProto2::NestedEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ForeignEnumProto2_descriptor() {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_enum_descriptors[1];
}
bool ForeignEnumProto2_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TestAllTypesProto2_NestedMessage::InitAsDefaultInstance() {
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_NestedMessage_default_instance_._instance.get_mutable()->corecursive_ = const_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2*>(
      ::protobuf_test_messages::proto2::TestAllTypesProto2::internal_default_instance());
}
void TestAllTypesProto2_NestedMessage::unsafe_arena_set_allocated_corecursive(
    ::protobuf_test_messages::proto2::TestAllTypesProto2* corecursive) {
  if (GetArenaNoVirtual() == NULL) {
    delete corecursive_;
  }
  corecursive_ = corecursive;
  if (corecursive) {
    set_has_corecursive();
  } else {
    clear_has_corecursive();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.corecursive)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto2_NestedMessage::kAFieldNumber;
const int TestAllTypesProto2_NestedMessage::kCorecursiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesProto2_NestedMessage::TestAllTypesProto2_NestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
}
TestAllTypesProto2_NestedMessage::TestAllTypesProto2_NestedMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
}
TestAllTypesProto2_NestedMessage::TestAllTypesProto2_NestedMessage(const TestAllTypesProto2_NestedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_corecursive()) {
    corecursive_ = new ::protobuf_test_messages::proto2::TestAllTypesProto2(*from.corecursive_);
  } else {
    corecursive_ = NULL;
  }
  a_ = from.a_;
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
}

void TestAllTypesProto2_NestedMessage::SharedCtor() {
  ::memset(&corecursive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_) -
      reinterpret_cast<char*>(&corecursive_)) + sizeof(a_));
}

TestAllTypesProto2_NestedMessage::~TestAllTypesProto2_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  SharedDtor();
}

void TestAllTypesProto2_NestedMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete corecursive_;
}

void TestAllTypesProto2_NestedMessage::ArenaDtor(void* object) {
  TestAllTypesProto2_NestedMessage* _this = reinterpret_cast< TestAllTypesProto2_NestedMessage* >(object);
  (void)_this;
}
void TestAllTypesProto2_NestedMessage::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TestAllTypesProto2_NestedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestAllTypesProto2_NestedMessage::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestAllTypesProto2_NestedMessage& TestAllTypesProto2_NestedMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2.base);
  return *internal_default_instance();
}


void TestAllTypesProto2_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(corecursive_ != NULL);
    corecursive_->Clear();
  }
  a_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestAllTypesProto2_NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protobuf_test_messages.proto2.TestAllTypesProto2 corecursive = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_corecursive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  return false;
#undef DO_
}

void TestAllTypesProto2_NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional .protobuf_test_messages.proto2.TestAllTypesProto2 corecursive = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_corecursive(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
}

::google::protobuf::uint8* TestAllTypesProto2_NestedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional .protobuf_test_messages.proto2.TestAllTypesProto2 corecursive = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_corecursive(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  return target;
}

size_t TestAllTypesProto2_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .protobuf_test_messages.proto2.TestAllTypesProto2 corecursive = 2;
    if (has_corecursive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *corecursive_);
    }

    // optional int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestAllTypesProto2_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TestAllTypesProto2_NestedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypesProto2_NestedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
    MergeFrom(*source);
  }
}

void TestAllTypesProto2_NestedMessage::MergeFrom(const TestAllTypesProto2_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_corecursive()->::protobuf_test_messages::proto2::TestAllTypesProto2::MergeFrom(from.corecursive());
    }
    if (cached_has_bits & 0x00000002u) {
      a_ = from.a_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestAllTypesProto2_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypesProto2_NestedMessage::CopyFrom(const TestAllTypesProto2_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypesProto2_NestedMessage::IsInitialized() const {
  if (has_corecursive()) {
    if (!this->corecursive_->IsInitialized()) return false;
  }
  return true;
}

void TestAllTypesProto2_NestedMessage::Swap(TestAllTypesProto2_NestedMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypesProto2_NestedMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TestAllTypesProto2_NestedMessage::UnsafeArenaSwap(TestAllTypesProto2_NestedMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypesProto2_NestedMessage::InternalSwap(TestAllTypesProto2_NestedMessage* other) {
  using std::swap;
  swap(corecursive_, other->corecursive_);
  swap(a_, other->a_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestAllTypesProto2_NestedMessage::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TestAllTypesProto2_MapInt32Int32Entry_DoNotUse::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse() {}
TestAllTypesProto2_MapInt32Int32Entry_DoNotUse::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapInt32Int32Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapInt32Int32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapInt32Int32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[1];
}
void TestAllTypesProto2_MapInt32Int32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapInt64Int64Entry_DoNotUse::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse() {}
TestAllTypesProto2_MapInt64Int64Entry_DoNotUse::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapInt64Int64Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapInt64Int64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapInt64Int64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[2];
}
void TestAllTypesProto2_MapInt64Int64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse() {}
TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[3];
}
void TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse() {}
TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[4];
}
void TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse() {}
TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[5];
}
void TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse() {}
TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[6];
}
void TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse() {}
TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[7];
}
void TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse() {}
TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[8];
}
void TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse() {}
TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[9];
}
void TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse() {}
TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[10];
}
void TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapInt32FloatEntry_DoNotUse::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse() {}
TestAllTypesProto2_MapInt32FloatEntry_DoNotUse::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapInt32FloatEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapInt32FloatEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapInt32FloatEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[11];
}
void TestAllTypesProto2_MapInt32FloatEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse() {}
TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[12];
}
void TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapBoolBoolEntry_DoNotUse::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse() {}
TestAllTypesProto2_MapBoolBoolEntry_DoNotUse::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapBoolBoolEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapBoolBoolEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapBoolBoolEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[13];
}
void TestAllTypesProto2_MapBoolBoolEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapStringStringEntry_DoNotUse::TestAllTypesProto2_MapStringStringEntry_DoNotUse() {}
TestAllTypesProto2_MapStringStringEntry_DoNotUse::TestAllTypesProto2_MapStringStringEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapStringStringEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapStringStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapStringStringEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[14];
}
void TestAllTypesProto2_MapStringStringEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapStringBytesEntry_DoNotUse::TestAllTypesProto2_MapStringBytesEntry_DoNotUse() {}
TestAllTypesProto2_MapStringBytesEntry_DoNotUse::TestAllTypesProto2_MapStringBytesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapStringBytesEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapStringBytesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapStringBytesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[15];
}
void TestAllTypesProto2_MapStringBytesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse() {}
TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[16];
}
void TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse() {}
TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[17];
}
void TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse() {}
TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[18];
}
void TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse() {}
TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse::MergeFrom(const TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[19];
}
void TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TestAllTypesProto2_Data::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto2_Data::kGroupInt32FieldNumber;
const int TestAllTypesProto2_Data::kGroupUint32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesProto2_Data::TestAllTypesProto2_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_Data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
}
TestAllTypesProto2_Data::TestAllTypesProto2_Data(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_Data.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
}
TestAllTypesProto2_Data::TestAllTypesProto2_Data(const TestAllTypesProto2_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_int32_, &from.group_int32_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_uint32_) -
    reinterpret_cast<char*>(&group_int32_)) + sizeof(group_uint32_));
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
}

void TestAllTypesProto2_Data::SharedCtor() {
  ::memset(&group_int32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_uint32_) -
      reinterpret_cast<char*>(&group_int32_)) + sizeof(group_uint32_));
}

TestAllTypesProto2_Data::~TestAllTypesProto2_Data() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  SharedDtor();
}

void TestAllTypesProto2_Data::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TestAllTypesProto2_Data::ArenaDtor(void* object) {
  TestAllTypesProto2_Data* _this = reinterpret_cast< TestAllTypesProto2_Data* >(object);
  (void)_this;
}
void TestAllTypesProto2_Data::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TestAllTypesProto2_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestAllTypesProto2_Data::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestAllTypesProto2_Data& TestAllTypesProto2_Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_Data.base);
  return *internal_default_instance();
}


void TestAllTypesProto2_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&group_int32_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&group_uint32_) -
        reinterpret_cast<char*>(&group_int32_)) + sizeof(group_uint32_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestAllTypesProto2_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 group_int32 = 202;
      case 202: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 1616 & 0xFF */)) {
          set_has_group_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 group_uint32 = 203;
      case 203: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 1624 & 0xFF */)) {
          set_has_group_uint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_uint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          input->SetLastTag(tag);
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  return false;
#undef DO_
}

void TestAllTypesProto2_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 group_int32 = 202;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(202, this->group_int32(), output);
  }

  // optional uint32 group_uint32 = 203;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(203, this->group_uint32(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
}

::google::protobuf::uint8* TestAllTypesProto2_Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 group_int32 = 202;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(202, this->group_int32(), target);
  }

  // optional uint32 group_uint32 = 203;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(203, this->group_uint32(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  return target;
}

size_t TestAllTypesProto2_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 group_int32 = 202;
    if (has_group_int32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group_int32());
    }

    // optional uint32 group_uint32 = 203;
    if (has_group_uint32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group_uint32());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestAllTypesProto2_Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const TestAllTypesProto2_Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypesProto2_Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
    MergeFrom(*source);
  }
}

void TestAllTypesProto2_Data::MergeFrom(const TestAllTypesProto2_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      group_int32_ = from.group_int32_;
    }
    if (cached_has_bits & 0x00000002u) {
      group_uint32_ = from.group_uint32_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestAllTypesProto2_Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypesProto2_Data::CopyFrom(const TestAllTypesProto2_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypesProto2_Data::IsInitialized() const {
  return true;
}

void TestAllTypesProto2_Data::Swap(TestAllTypesProto2_Data* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypesProto2_Data* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TestAllTypesProto2_Data::UnsafeArenaSwap(TestAllTypesProto2_Data* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypesProto2_Data::InternalSwap(TestAllTypesProto2_Data* other) {
  using std::swap;
  swap(group_int32_, other->group_int32_);
  swap(group_uint32_, other->group_uint32_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestAllTypesProto2_Data::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestAllTypesProto2_MessageSetCorrect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesProto2_MessageSetCorrect::TestAllTypesProto2_MessageSetCorrect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
}
TestAllTypesProto2_MessageSetCorrect::TestAllTypesProto2_MessageSetCorrect(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrect.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
}
TestAllTypesProto2_MessageSetCorrect::TestAllTypesProto2_MessageSetCorrect(const TestAllTypesProto2_MessageSetCorrect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
}

void TestAllTypesProto2_MessageSetCorrect::SharedCtor() {
}

TestAllTypesProto2_MessageSetCorrect::~TestAllTypesProto2_MessageSetCorrect() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
  SharedDtor();
}

void TestAllTypesProto2_MessageSetCorrect::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TestAllTypesProto2_MessageSetCorrect::ArenaDtor(void* object) {
  TestAllTypesProto2_MessageSetCorrect* _this = reinterpret_cast< TestAllTypesProto2_MessageSetCorrect* >(object);
  (void)_this;
}
void TestAllTypesProto2_MessageSetCorrect::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TestAllTypesProto2_MessageSetCorrect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestAllTypesProto2_MessageSetCorrect::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestAllTypesProto2_MessageSetCorrect& TestAllTypesProto2_MessageSetCorrect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrect.base);
  return *internal_default_instance();
}


void TestAllTypesProto2_MessageSetCorrect::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestAllTypesProto2_MessageSetCorrect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
  return _extensions_.ParseMessageSet(input,
      internal_default_instance(), _internal_metadata_.mutable_unknown_fields());
}

void TestAllTypesProto2_MessageSetCorrect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  _extensions_.SerializeMessageSetWithCachedSizes(output);
  ::google::protobuf::internal::WireFormat::SerializeUnknownMessageSetItems(
      _internal_metadata_.unknown_fields(), output);
}

::google::protobuf::uint8* TestAllTypesProto2_MessageSetCorrect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  target = _extensions_.InternalSerializeMessageSetWithCachedSizesToArray(
               deterministic, target);
  target = ::google::protobuf::internal::WireFormat::
             SerializeUnknownMessageSetItemsToArray(
               _internal_metadata_.unknown_fields(), target);
  return target;
}

size_t TestAllTypesProto2_MessageSetCorrect::ByteSizeLong() const {
// @@protoc_insertion_point(message_set_byte_size_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
  size_t total_size = _extensions_.MessageSetByteSize();
  if (_internal_metadata_.have_unknown_fields()) {
    total_size += ::google::protobuf::internal::WireFormat::
        ComputeUnknownMessageSetItemsSize(_internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestAllTypesProto2_MessageSetCorrect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
  GOOGLE_DCHECK_NE(&from, this);
  const TestAllTypesProto2_MessageSetCorrect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypesProto2_MessageSetCorrect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
    MergeFrom(*source);
  }
}

void TestAllTypesProto2_MessageSetCorrect::MergeFrom(const TestAllTypesProto2_MessageSetCorrect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestAllTypesProto2_MessageSetCorrect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypesProto2_MessageSetCorrect::CopyFrom(const TestAllTypesProto2_MessageSetCorrect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypesProto2_MessageSetCorrect::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  return true;
}

void TestAllTypesProto2_MessageSetCorrect::Swap(TestAllTypesProto2_MessageSetCorrect* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypesProto2_MessageSetCorrect* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TestAllTypesProto2_MessageSetCorrect::UnsafeArenaSwap(TestAllTypesProto2_MessageSetCorrect* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypesProto2_MessageSetCorrect::InternalSwap(TestAllTypesProto2_MessageSetCorrect* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestAllTypesProto2_MessageSetCorrect::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestAllTypesProto2_MessageSetCorrectExtension1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto2_MessageSetCorrectExtension1::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesProto2_MessageSetCorrectExtension1::TestAllTypesProto2_MessageSetCorrectExtension1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrectExtension1.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
}
TestAllTypesProto2_MessageSetCorrectExtension1::TestAllTypesProto2_MessageSetCorrectExtension1(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrectExtension1.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
}
TestAllTypesProto2_MessageSetCorrectExtension1::TestAllTypesProto2_MessageSetCorrectExtension1(const TestAllTypesProto2_MessageSetCorrectExtension1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_str()) {
    str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
}

void TestAllTypesProto2_MessageSetCorrectExtension1::SharedCtor() {
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestAllTypesProto2_MessageSetCorrectExtension1::~TestAllTypesProto2_MessageSetCorrectExtension1() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  SharedDtor();
}

void TestAllTypesProto2_MessageSetCorrectExtension1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestAllTypesProto2_MessageSetCorrectExtension1::ArenaDtor(void* object) {
  TestAllTypesProto2_MessageSetCorrectExtension1* _this = reinterpret_cast< TestAllTypesProto2_MessageSetCorrectExtension1* >(object);
  (void)_this;
}
void TestAllTypesProto2_MessageSetCorrectExtension1::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TestAllTypesProto2_MessageSetCorrectExtension1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestAllTypesProto2_MessageSetCorrectExtension1::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestAllTypesProto2_MessageSetCorrectExtension1& TestAllTypesProto2_MessageSetCorrectExtension1::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrectExtension1.base);
  return *internal_default_instance();
}


void TestAllTypesProto2_MessageSetCorrectExtension1::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    str_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestAllTypesProto2_MessageSetCorrectExtension1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  return false;
#undef DO_
}

void TestAllTypesProto2_MessageSetCorrectExtension1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string str = 25;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
}

::google::protobuf::uint8* TestAllTypesProto2_MessageSetCorrectExtension1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string str = 25;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  return target;
}

size_t TestAllTypesProto2_MessageSetCorrectExtension1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string str = 25;
  if (has_str()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestAllTypesProto2_MessageSetCorrectExtension1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  GOOGLE_DCHECK_NE(&from, this);
  const TestAllTypesProto2_MessageSetCorrectExtension1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypesProto2_MessageSetCorrectExtension1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
    MergeFrom(*source);
  }
}

void TestAllTypesProto2_MessageSetCorrectExtension1::MergeFrom(const TestAllTypesProto2_MessageSetCorrectExtension1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_str()) {
    set_str(from.str());
  }
}

void TestAllTypesProto2_MessageSetCorrectExtension1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypesProto2_MessageSetCorrectExtension1::CopyFrom(const TestAllTypesProto2_MessageSetCorrectExtension1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypesProto2_MessageSetCorrectExtension1::IsInitialized() const {
  return true;
}

void TestAllTypesProto2_MessageSetCorrectExtension1::Swap(TestAllTypesProto2_MessageSetCorrectExtension1* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypesProto2_MessageSetCorrectExtension1* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TestAllTypesProto2_MessageSetCorrectExtension1::UnsafeArenaSwap(TestAllTypesProto2_MessageSetCorrectExtension1* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypesProto2_MessageSetCorrectExtension1::InternalSwap(TestAllTypesProto2_MessageSetCorrectExtension1* other) {
  using std::swap;
  str_.Swap(&other->str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestAllTypesProto2_MessageSetCorrectExtension1::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestAllTypesProto2_MessageSetCorrectExtension2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto2_MessageSetCorrectExtension2::kIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesProto2_MessageSetCorrectExtension2::TestAllTypesProto2_MessageSetCorrectExtension2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrectExtension2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
}
TestAllTypesProto2_MessageSetCorrectExtension2::TestAllTypesProto2_MessageSetCorrectExtension2(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrectExtension2.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
}
TestAllTypesProto2_MessageSetCorrectExtension2::TestAllTypesProto2_MessageSetCorrectExtension2(const TestAllTypesProto2_MessageSetCorrectExtension2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  i_ = from.i_;
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
}

void TestAllTypesProto2_MessageSetCorrectExtension2::SharedCtor() {
  i_ = 0;
}

TestAllTypesProto2_MessageSetCorrectExtension2::~TestAllTypesProto2_MessageSetCorrectExtension2() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  SharedDtor();
}

void TestAllTypesProto2_MessageSetCorrectExtension2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TestAllTypesProto2_MessageSetCorrectExtension2::ArenaDtor(void* object) {
  TestAllTypesProto2_MessageSetCorrectExtension2* _this = reinterpret_cast< TestAllTypesProto2_MessageSetCorrectExtension2* >(object);
  (void)_this;
}
void TestAllTypesProto2_MessageSetCorrectExtension2::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TestAllTypesProto2_MessageSetCorrectExtension2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestAllTypesProto2_MessageSetCorrectExtension2::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestAllTypesProto2_MessageSetCorrectExtension2& TestAllTypesProto2_MessageSetCorrectExtension2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2_MessageSetCorrectExtension2.base);
  return *internal_default_instance();
}


void TestAllTypesProto2_MessageSetCorrectExtension2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  i_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestAllTypesProto2_MessageSetCorrectExtension2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 i = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  return false;
#undef DO_
}

void TestAllTypesProto2_MessageSetCorrectExtension2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 i = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->i(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
}

::google::protobuf::uint8* TestAllTypesProto2_MessageSetCorrectExtension2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 i = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->i(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  return target;
}

size_t TestAllTypesProto2_MessageSetCorrectExtension2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 i = 9;
  if (has_i()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->i());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestAllTypesProto2_MessageSetCorrectExtension2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  GOOGLE_DCHECK_NE(&from, this);
  const TestAllTypesProto2_MessageSetCorrectExtension2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypesProto2_MessageSetCorrectExtension2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
    MergeFrom(*source);
  }
}

void TestAllTypesProto2_MessageSetCorrectExtension2::MergeFrom(const TestAllTypesProto2_MessageSetCorrectExtension2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_i()) {
    set_i(from.i());
  }
}

void TestAllTypesProto2_MessageSetCorrectExtension2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypesProto2_MessageSetCorrectExtension2::CopyFrom(const TestAllTypesProto2_MessageSetCorrectExtension2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypesProto2_MessageSetCorrectExtension2::IsInitialized() const {
  return true;
}

void TestAllTypesProto2_MessageSetCorrectExtension2::Swap(TestAllTypesProto2_MessageSetCorrectExtension2* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypesProto2_MessageSetCorrectExtension2* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TestAllTypesProto2_MessageSetCorrectExtension2::UnsafeArenaSwap(TestAllTypesProto2_MessageSetCorrectExtension2* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypesProto2_MessageSetCorrectExtension2::InternalSwap(TestAllTypesProto2_MessageSetCorrectExtension2* other) {
  using std::swap;
  swap(i_, other->i_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestAllTypesProto2_MessageSetCorrectExtension2::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestAllTypesProto2::InitAsDefaultInstance() {
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_._instance.get_mutable()->optional_nested_message_ = const_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage*>(
      ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage::internal_default_instance());
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_._instance.get_mutable()->optional_foreign_message_ = const_cast< ::protobuf_test_messages::proto2::ForeignMessageProto2*>(
      ::protobuf_test_messages::proto2::ForeignMessageProto2::internal_default_instance());
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_._instance.get_mutable()->recursive_message_ = const_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2*>(
      ::protobuf_test_messages::proto2::TestAllTypesProto2::internal_default_instance());
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_uint32_ = 0u;
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_nested_message_ = const_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage*>(
      ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage::internal_default_instance());
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_bytes_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_bool_ = false;
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_uint64_ = GOOGLE_ULONGLONG(0);
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_float_ = 0;
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_double_ = 0;
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_.oneof_enum_ = 0;
  ::protobuf_test_messages::proto2::_TestAllTypesProto2_default_instance_._instance.get_mutable()->data_ = const_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2_Data*>(
      ::protobuf_test_messages::proto2::TestAllTypesProto2_Data::internal_default_instance());
}
void TestAllTypesProto2::unsafe_arena_set_allocated_optional_nested_message(
    ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage* optional_nested_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_nested_message_;
  }
  optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    set_has_optional_nested_message();
  } else {
    clear_has_optional_nested_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto2.TestAllTypesProto2.optional_nested_message)
}
void TestAllTypesProto2::unsafe_arena_set_allocated_optional_foreign_message(
    ::protobuf_test_messages::proto2::ForeignMessageProto2* optional_foreign_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete optional_foreign_message_;
  }
  optional_foreign_message_ = optional_foreign_message;
  if (optional_foreign_message) {
    set_has_optional_foreign_message();
  } else {
    clear_has_optional_foreign_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto2.TestAllTypesProto2.optional_foreign_message)
}
void TestAllTypesProto2::unsafe_arena_set_allocated_recursive_message(
    ::protobuf_test_messages::proto2::TestAllTypesProto2* recursive_message) {
  if (GetArenaNoVirtual() == NULL) {
    delete recursive_message_;
  }
  recursive_message_ = recursive_message;
  if (recursive_message) {
    set_has_recursive_message();
  } else {
    clear_has_recursive_message();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto2.TestAllTypesProto2.recursive_message)
}
void TestAllTypesProto2::set_allocated_oneof_nested_message(::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage* oneof_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_oneof_field();
  if (oneof_nested_message) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(oneof_nested_message);
    if (message_arena != submessage_arena) {
      oneof_nested_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oneof_nested_message, submessage_arena);
    }
    set_has_oneof_nested_message();
    oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto2.TestAllTypesProto2.oneof_nested_message)
}
void TestAllTypesProto2::unsafe_arena_set_allocated_data(
    ::protobuf_test_messages::proto2::TestAllTypesProto2_Data* data) {
  if (GetArenaNoVirtual() == NULL) {
    delete data_;
  }
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto2.TestAllTypesProto2.data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto2::kOptionalInt32FieldNumber;
const int TestAllTypesProto2::kOptionalInt64FieldNumber;
const int TestAllTypesProto2::kOptionalUint32FieldNumber;
const int TestAllTypesProto2::kOptionalUint64FieldNumber;
const int TestAllTypesProto2::kOptionalSint32FieldNumber;
const int TestAllTypesProto2::kOptionalSint64FieldNumber;
const int TestAllTypesProto2::kOptionalFixed32FieldNumber;
const int TestAllTypesProto2::kOptionalFixed64FieldNumber;
const int TestAllTypesProto2::kOptionalSfixed32FieldNumber;
const int TestAllTypesProto2::kOptionalSfixed64FieldNumber;
const int TestAllTypesProto2::kOptionalFloatFieldNumber;
const int TestAllTypesProto2::kOptionalDoubleFieldNumber;
const int TestAllTypesProto2::kOptionalBoolFieldNumber;
const int TestAllTypesProto2::kOptionalStringFieldNumber;
const int TestAllTypesProto2::kOptionalBytesFieldNumber;
const int TestAllTypesProto2::kOptionalNestedMessageFieldNumber;
const int TestAllTypesProto2::kOptionalForeignMessageFieldNumber;
const int TestAllTypesProto2::kOptionalNestedEnumFieldNumber;
const int TestAllTypesProto2::kOptionalForeignEnumFieldNumber;
const int TestAllTypesProto2::kOptionalStringPieceFieldNumber;
const int TestAllTypesProto2::kOptionalCordFieldNumber;
const int TestAllTypesProto2::kRecursiveMessageFieldNumber;
const int TestAllTypesProto2::kRepeatedInt32FieldNumber;
const int TestAllTypesProto2::kRepeatedInt64FieldNumber;
const int TestAllTypesProto2::kRepeatedUint32FieldNumber;
const int TestAllTypesProto2::kRepeatedUint64FieldNumber;
const int TestAllTypesProto2::kRepeatedSint32FieldNumber;
const int TestAllTypesProto2::kRepeatedSint64FieldNumber;
const int TestAllTypesProto2::kRepeatedFixed32FieldNumber;
const int TestAllTypesProto2::kRepeatedFixed64FieldNumber;
const int TestAllTypesProto2::kRepeatedSfixed32FieldNumber;
const int TestAllTypesProto2::kRepeatedSfixed64FieldNumber;
const int TestAllTypesProto2::kRepeatedFloatFieldNumber;
const int TestAllTypesProto2::kRepeatedDoubleFieldNumber;
const int TestAllTypesProto2::kRepeatedBoolFieldNumber;
const int TestAllTypesProto2::kRepeatedStringFieldNumber;
const int TestAllTypesProto2::kRepeatedBytesFieldNumber;
const int TestAllTypesProto2::kRepeatedNestedMessageFieldNumber;
const int TestAllTypesProto2::kRepeatedForeignMessageFieldNumber;
const int TestAllTypesProto2::kRepeatedNestedEnumFieldNumber;
const int TestAllTypesProto2::kRepeatedForeignEnumFieldNumber;
const int TestAllTypesProto2::kRepeatedStringPieceFieldNumber;
const int TestAllTypesProto2::kRepeatedCordFieldNumber;
const int TestAllTypesProto2::kMapInt32Int32FieldNumber;
const int TestAllTypesProto2::kMapInt64Int64FieldNumber;
const int TestAllTypesProto2::kMapUint32Uint32FieldNumber;
const int TestAllTypesProto2::kMapUint64Uint64FieldNumber;
const int TestAllTypesProto2::kMapSint32Sint32FieldNumber;
const int TestAllTypesProto2::kMapSint64Sint64FieldNumber;
const int TestAllTypesProto2::kMapFixed32Fixed32FieldNumber;
const int TestAllTypesProto2::kMapFixed64Fixed64FieldNumber;
const int TestAllTypesProto2::kMapSfixed32Sfixed32FieldNumber;
const int TestAllTypesProto2::kMapSfixed64Sfixed64FieldNumber;
const int TestAllTypesProto2::kMapInt32FloatFieldNumber;
const int TestAllTypesProto2::kMapInt32DoubleFieldNumber;
const int TestAllTypesProto2::kMapBoolBoolFieldNumber;
const int TestAllTypesProto2::kMapStringStringFieldNumber;
const int TestAllTypesProto2::kMapStringBytesFieldNumber;
const int TestAllTypesProto2::kMapStringNestedMessageFieldNumber;
const int TestAllTypesProto2::kMapStringForeignMessageFieldNumber;
const int TestAllTypesProto2::kMapStringNestedEnumFieldNumber;
const int TestAllTypesProto2::kMapStringForeignEnumFieldNumber;
const int TestAllTypesProto2::kOneofUint32FieldNumber;
const int TestAllTypesProto2::kOneofNestedMessageFieldNumber;
const int TestAllTypesProto2::kOneofStringFieldNumber;
const int TestAllTypesProto2::kOneofBytesFieldNumber;
const int TestAllTypesProto2::kOneofBoolFieldNumber;
const int TestAllTypesProto2::kOneofUint64FieldNumber;
const int TestAllTypesProto2::kOneofFloatFieldNumber;
const int TestAllTypesProto2::kOneofDoubleFieldNumber;
const int TestAllTypesProto2::kOneofEnumFieldNumber;
const int TestAllTypesProto2::kDataFieldNumber;
const int TestAllTypesProto2::kFieldname1FieldNumber;
const int TestAllTypesProto2::kFieldName2FieldNumber;
const int TestAllTypesProto2::kFieldName3FieldNumber;
const int TestAllTypesProto2::kFieldName4FieldNumber;
const int TestAllTypesProto2::kField0Name5FieldNumber;
const int TestAllTypesProto2::kField0Name6FieldNumber;
const int TestAllTypesProto2::kFieldName7FieldNumber;
const int TestAllTypesProto2::kFieldName8FieldNumber;
const int TestAllTypesProto2::kFieldName9FieldNumber;
const int TestAllTypesProto2::kFieldName10FieldNumber;
const int TestAllTypesProto2::kFIELDNAME11FieldNumber;
const int TestAllTypesProto2::kFIELDName12FieldNumber;
const int TestAllTypesProto2::kFieldName13FieldNumber;
const int TestAllTypesProto2::kFieldName14FieldNumber;
const int TestAllTypesProto2::kFieldName15FieldNumber;
const int TestAllTypesProto2::kFieldName16FieldNumber;
const int TestAllTypesProto2::kFieldName17FieldNumber;
const int TestAllTypesProto2::kFieldName18FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestAllTypesProto2::TestAllTypesProto2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto2.TestAllTypesProto2)
}
TestAllTypesProto2::TestAllTypesProto2(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _extensions_(arena),
  _internal_metadata_(arena),
  repeated_int32_(arena),
  repeated_int64_(arena),
  repeated_uint32_(arena),
  repeated_uint64_(arena),
  repeated_sint32_(arena),
  repeated_sint64_(arena),
  repeated_fixed32_(arena),
  repeated_fixed64_(arena),
  repeated_sfixed32_(arena),
  repeated_sfixed64_(arena),
  repeated_float_(arena),
  repeated_double_(arena),
  repeated_bool_(arena),
  repeated_string_(arena),
  repeated_bytes_(arena),
  repeated_nested_message_(arena),
  repeated_foreign_message_(arena),
  repeated_nested_enum_(arena),
  repeated_foreign_enum_(arena),
  repeated_string_piece_(arena),
  repeated_cord_(arena),
  map_int32_int32_(arena),
  map_int64_int64_(arena),
  map_uint32_uint32_(arena),
  map_uint64_uint64_(arena),
  map_sint32_sint32_(arena),
  map_sint64_sint64_(arena),
  map_fixed32_fixed32_(arena),
  map_fixed64_fixed64_(arena),
  map_sfixed32_sfixed32_(arena),
  map_sfixed64_sfixed64_(arena),
  map_int32_float_(arena),
  map_int32_double_(arena),
  map_bool_bool_(arena),
  map_string_string_(arena),
  map_string_bytes_(arena),
  map_string_nested_message_(arena),
  map_string_foreign_message_(arena),
  map_string_nested_enum_(arena),
  map_string_foreign_enum_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto2.TestAllTypesProto2)
}
TestAllTypesProto2::TestAllTypesProto2(const TestAllTypesProto2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      repeated_int32_(from.repeated_int32_),
      repeated_int64_(from.repeated_int64_),
      repeated_uint32_(from.repeated_uint32_),
      repeated_uint64_(from.repeated_uint64_),
      repeated_sint32_(from.repeated_sint32_),
      repeated_sint64_(from.repeated_sint64_),
      repeated_fixed32_(from.repeated_fixed32_),
      repeated_fixed64_(from.repeated_fixed64_),
      repeated_sfixed32_(from.repeated_sfixed32_),
      repeated_sfixed64_(from.repeated_sfixed64_),
      repeated_float_(from.repeated_float_),
      repeated_double_(from.repeated_double_),
      repeated_bool_(from.repeated_bool_),
      repeated_string_(from.repeated_string_),
      repeated_bytes_(from.repeated_bytes_),
      repeated_nested_message_(from.repeated_nested_message_),
      repeated_foreign_message_(from.repeated_foreign_message_),
      repeated_nested_enum_(from.repeated_nested_enum_),
      repeated_foreign_enum_(from.repeated_foreign_enum_),
      repeated_string_piece_(from.repeated_string_piece_),
      repeated_cord_(from.repeated_cord_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  map_int32_int32_.MergeFrom(from.map_int32_int32_);
  map_int64_int64_.MergeFrom(from.map_int64_int64_);
  map_uint32_uint32_.MergeFrom(from.map_uint32_uint32_);
  map_uint64_uint64_.MergeFrom(from.map_uint64_uint64_);
  map_sint32_sint32_.MergeFrom(from.map_sint32_sint32_);
  map_sint64_sint64_.MergeFrom(from.map_sint64_sint64_);
  map_fixed32_fixed32_.MergeFrom(from.map_fixed32_fixed32_);
  map_fixed64_fixed64_.MergeFrom(from.map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.MergeFrom(from.map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.MergeFrom(from.map_sfixed64_sfixed64_);
  map_int32_float_.MergeFrom(from.map_int32_float_);
  map_int32_double_.MergeFrom(from.map_int32_double_);
  map_bool_bool_.MergeFrom(from.map_bool_bool_);
  map_string_string_.MergeFrom(from.map_string_string_);
  map_string_bytes_.MergeFrom(from.map_string_bytes_);
  map_string_nested_message_.MergeFrom(from.map_string_nested_message_);
  map_string_foreign_message_.MergeFrom(from.map_string_foreign_message_);
  map_string_nested_enum_.MergeFrom(from.map_string_nested_enum_);
  map_string_foreign_enum_.MergeFrom(from.map_string_foreign_enum_);
  optional_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_optional_string()) {
    optional_string_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_string(),
      GetArenaNoVirtual());
  }
  optional_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_optional_bytes()) {
    optional_bytes_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_bytes(),
      GetArenaNoVirtual());
  }
  optional_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_optional_string_piece()) {
    optional_string_piece_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_string_piece(),
      GetArenaNoVirtual());
  }
  optional_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_optional_cord()) {
    optional_cord_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_cord(),
      GetArenaNoVirtual());
  }
  if (from.has_optional_nested_message()) {
    optional_nested_message_ = new ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage(*from.optional_nested_message_);
  } else {
    optional_nested_message_ = NULL;
  }
  if (from.has_optional_foreign_message()) {
    optional_foreign_message_ = new ::protobuf_test_messages::proto2::ForeignMessageProto2(*from.optional_foreign_message_);
  } else {
    optional_foreign_message_ = NULL;
  }
  if (from.has_recursive_message()) {
    recursive_message_ = new ::protobuf_test_messages::proto2::TestAllTypesProto2(*from.recursive_message_);
  } else {
    recursive_message_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::protobuf_test_messages::proto2::TestAllTypesProto2_Data(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&optional_int64_, &from.optional_int64_,
    static_cast<size_t>(reinterpret_cast<char*>(&field_name17___) -
    reinterpret_cast<char*>(&optional_int64_)) + sizeof(field_name17___));
  clear_has_oneof_field();
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      set_oneof_uint32(from.oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      mutable_oneof_nested_message()->::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage::MergeFrom(from.oneof_nested_message());
      break;
    }
    case kOneofString: {
      set_oneof_string(from.oneof_string());
      break;
    }
    case kOneofBytes: {
      set_oneof_bytes(from.oneof_bytes());
      break;
    }
    case kOneofBool: {
      set_oneof_bool(from.oneof_bool());
      break;
    }
    case kOneofUint64: {
      set_oneof_uint64(from.oneof_uint64());
      break;
    }
    case kOneofFloat: {
      set_oneof_float(from.oneof_float());
      break;
    }
    case kOneofDouble: {
      set_oneof_double(from.oneof_double());
      break;
    }
    case kOneofEnum: {
      set_oneof_enum(from.oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto2.TestAllTypesProto2)
}

void TestAllTypesProto2::SharedCtor() {
  optional_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_piece_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_cord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&optional_nested_message_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_name17___) -
      reinterpret_cast<char*>(&optional_nested_message_)) + sizeof(field_name17___));
  clear_has_oneof_field();
}

TestAllTypesProto2::~TestAllTypesProto2() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto2.TestAllTypesProto2)
  SharedDtor();
}

void TestAllTypesProto2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  optional_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_piece_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_cord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete optional_nested_message_;
  if (this != internal_default_instance()) delete optional_foreign_message_;
  if (this != internal_default_instance()) delete recursive_message_;
  if (this != internal_default_instance()) delete data_;
  if (has_oneof_field()) {
    clear_oneof_field();
  }
}

void TestAllTypesProto2::ArenaDtor(void* object) {
  TestAllTypesProto2* _this = reinterpret_cast< TestAllTypesProto2* >(object);
  (void)_this;
}
void TestAllTypesProto2::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void TestAllTypesProto2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestAllTypesProto2::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestAllTypesProto2& TestAllTypesProto2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_TestAllTypesProto2.base);
  return *internal_default_instance();
}


void TestAllTypesProto2::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      if (GetArenaNoVirtual() == NULL) {
        delete oneof_field_.oneof_nested_message_;
      }
      break;
    }
    case kOneofString: {
      oneof_field_.oneof_string_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kOneofBytes: {
      oneof_field_.oneof_bytes_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kOneofBool: {
      // No need to clear
      break;
    }
    case kOneofUint64: {
      // No need to clear
      break;
    }
    case kOneofFloat: {
      // No need to clear
      break;
    }
    case kOneofDouble: {
      // No need to clear
      break;
    }
    case kOneofEnum: {
      // No need to clear
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


void TestAllTypesProto2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  repeated_int32_.Clear();
  repeated_int64_.Clear();
  repeated_uint32_.Clear();
  repeated_uint64_.Clear();
  repeated_sint32_.Clear();
  repeated_sint64_.Clear();
  repeated_fixed32_.Clear();
  repeated_fixed64_.Clear();
  repeated_sfixed32_.Clear();
  repeated_sfixed64_.Clear();
  repeated_float_.Clear();
  repeated_double_.Clear();
  repeated_bool_.Clear();
  repeated_string_.Clear();
  repeated_bytes_.Clear();
  repeated_nested_message_.Clear();
  repeated_foreign_message_.Clear();
  repeated_nested_enum_.Clear();
  repeated_foreign_enum_.Clear();
  repeated_string_piece_.Clear();
  repeated_cord_.Clear();
  map_int32_int32_.Clear();
  map_int64_int64_.Clear();
  map_uint32_uint32_.Clear();
  map_uint64_uint64_.Clear();
  map_sint32_sint32_.Clear();
  map_sint64_sint64_.Clear();
  map_fixed32_fixed32_.Clear();
  map_fixed64_fixed64_.Clear();
  map_sfixed32_sfixed32_.Clear();
  map_sfixed64_sfixed64_.Clear();
  map_int32_float_.Clear();
  map_int32_double_.Clear();
  map_bool_bool_.Clear();
  map_string_string_.Clear();
  map_string_bytes_.Clear();
  map_string_nested_message_.Clear();
  map_string_foreign_message_.Clear();
  map_string_nested_enum_.Clear();
  map_string_foreign_enum_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      optional_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      optional_bytes_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      optional_string_piece_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      optional_cord_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(optional_nested_message_ != NULL);
      optional_nested_message_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(optional_foreign_message_ != NULL);
      optional_foreign_message_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(recursive_message_ != NULL);
      recursive_message_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(data_ != NULL);
      data_->Clear();
    }
  }
  if (cached_has_bits & 65280u) {
    ::memset(&optional_int64_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optional_fixed64_) -
        reinterpret_cast<char*>(&optional_int64_)) + sizeof(optional_fixed64_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&optional_sfixed64_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optional_foreign_enum_) -
        reinterpret_cast<char*>(&optional_sfixed64_)) + sizeof(optional_foreign_enum_));
  }
  if (cached_has_bits & 4278190080u) {
    ::memset(&fieldname1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fieldname8_) -
        reinterpret_cast<char*>(&fieldname1_)) + sizeof(fieldname8_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 255u) {
    ::memset(&field_name9_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&field__name16_) -
        reinterpret_cast<char*>(&field_name9_)) + sizeof(field__name16_));
  }
  field_name17___ = 0;
  clear_oneof_field();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestAllTypesProto2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 optional_int32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_optional_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optional_int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 optional_int64 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_optional_int64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &optional_int64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 optional_uint32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_optional_uint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optional_uint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 optional_uint64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_optional_uint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &optional_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 optional_sint32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_optional_sint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &optional_sint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 optional_sint64 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_optional_sint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &optional_sint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 optional_fixed32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_optional_fixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &optional_fixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 optional_fixed64 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_optional_fixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &optional_fixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed32 optional_sfixed32 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_optional_sfixed32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &optional_sfixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 optional_sfixed64 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_optional_sfixed64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optional_sfixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float optional_float = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_optional_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &optional_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double optional_double = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_optional_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &optional_double_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool optional_bool = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_optional_bool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &optional_bool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string optional_string = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_string().data(), static_cast<int>(this->optional_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.optional_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes optional_bytes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_optional_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage optional_nested_message = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_nested_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protobuf_test_messages.proto2.ForeignMessageProto2 optional_foreign_message = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional_foreign_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum optional_nested_enum = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum_IsValid(value)) {
            set_optional_nested_enum(static_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                21, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protobuf_test_messages.proto2.ForeignEnumProto2 optional_foreign_enum = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_test_messages::proto2::ForeignEnumProto2_IsValid(value)) {
            set_optional_foreign_enum(static_cast< ::protobuf_test_messages::proto2::ForeignEnumProto2 >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                22, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_string_piece().data(), static_cast<int>(this->optional_string_piece().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.optional_string_piece");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string optional_cord = 25 [ctype = CORD];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_cord().data(), static_cast<int>(this->optional_cord().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.optional_cord");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protobuf_test_messages.proto2.TestAllTypesProto2 recursive_message = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recursive_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 repeated_int32 = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 248u, input, this->mutable_repeated_int32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_repeated_int32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 repeated_int64 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 256u, input, this->mutable_repeated_int64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_repeated_int64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 repeated_uint32 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 264u, input, this->mutable_repeated_uint32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_repeated_uint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 repeated_uint64 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 272u, input, this->mutable_repeated_uint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_repeated_uint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 repeated_sint32 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 280u, input, this->mutable_repeated_sint32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_repeated_sint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 repeated_sint64 = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 288u, input, this->mutable_repeated_sint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_repeated_sint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 repeated_fixed32 = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 301 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 301u, input, this->mutable_repeated_fixed32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_repeated_fixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 repeated_fixed64 = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 305 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 305u, input, this->mutable_repeated_fixed64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_repeated_fixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 repeated_sfixed32 = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 317 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 317u, input, this->mutable_repeated_sfixed32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_repeated_sfixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 repeated_sfixed64 = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 321 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 321u, input, this->mutable_repeated_sfixed64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_repeated_sfixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float repeated_float = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 333 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 333u, input, this->mutable_repeated_float())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_repeated_float())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double repeated_double = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 337 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 337u, input, this->mutable_repeated_double())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_repeated_double())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool repeated_bool = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 344u, input, this->mutable_repeated_bool())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_repeated_bool())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repeated_string = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_string(this->repeated_string_size() - 1).data(),
            static_cast<int>(this->repeated_string(this->repeated_string_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes repeated_bytes = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_repeated_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage repeated_nested_message = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_nested_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuf_test_messages.proto2.ForeignMessageProto2 repeated_foreign_message = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_foreign_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum repeated_nested_enum = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum_IsValid(value)) {
            add_repeated_nested_enum(static_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                51, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 51,
                 ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_repeated_nested_enum())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .protobuf_test_messages.proto2.ForeignEnumProto2 repeated_foreign_enum = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_test_messages::proto2::ForeignEnumProto2_IsValid(value)) {
            add_repeated_foreign_enum(static_cast< ::protobuf_test_messages::proto2::ForeignEnumProto2 >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                52, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 52,
                 ::protobuf_test_messages::proto2::ForeignEnumProto2_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_repeated_foreign_enum())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string_piece()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_string_piece(this->repeated_string_piece_size() - 1).data(),
            static_cast<int>(this->repeated_string_piece(this->repeated_string_piece_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_string_piece");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repeated_cord = 55 [ctype = CORD];
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_cord()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_cord(this->repeated_cord_size() - 1).data(),
            static_cast<int>(this->repeated_cord(this->repeated_cord_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_cord");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, int32> map_int32_int32 = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 450 & 0xFF */)) {
          TestAllTypesProto2_MapInt32Int32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapInt32Int32Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&map_int32_int32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, int64> map_int64_int64 = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          TestAllTypesProto2_MapInt64Int64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapInt64Int64Entry_DoNotUse,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&map_int64_int64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> map_uint32_uint32 = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 466 & 0xFF */)) {
          TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&map_uint32_uint32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, uint64> map_uint64_uint64 = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse,
              ::google::protobuf::uint64, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 > > parser(&map_uint64_uint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, sint32> map_sint32_sint32 = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&map_sint32_sint32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint64, sint64> map_sint64_sint64 = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&map_sint64_sint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&map_fixed32_fixed32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 506 & 0xFF */)) {
          TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse,
              ::google::protobuf::uint64, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
              ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 > > parser(&map_fixed64_fixed64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&map_sfixed32_sfixed32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 522 & 0xFF */)) {
          TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&map_sfixed64_sfixed64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, float> map_int32_float = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 530 & 0xFF */)) {
          TestAllTypesProto2_MapInt32FloatEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapInt32FloatEntry_DoNotUse,
              ::google::protobuf::int32, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, float > > parser(&map_int32_float_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, double> map_int32_double = 67;
      case 67: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 538 & 0xFF */)) {
          TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse,
              ::google::protobuf::int32, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, double > > parser(&map_int32_double_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<bool, bool> map_bool_bool = 68;
      case 68: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 546 & 0xFF */)) {
          TestAllTypesProto2_MapBoolBoolEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapBoolBoolEntry_DoNotUse,
              bool, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< bool, bool > > parser(&map_bool_bool_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> map_string_string = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 554 & 0xFF */)) {
          TestAllTypesProto2_MapStringStringEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapStringStringEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&map_string_string_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringStringEntry.key");
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringStringEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> map_string_bytes = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          TestAllTypesProto2_MapStringBytesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapStringBytesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&map_string_bytes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringBytesEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage> map_string_nested_message = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 570 & 0xFF */)) {
          TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse,
              ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage > > parser(&map_string_nested_message_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringNestedMessageEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .protobuf_test_messages.proto2.ForeignMessageProto2> map_string_foreign_message = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 578 & 0xFF */)) {
          TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse,
              ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 > > parser(&map_string_foreign_message_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringForeignMessageEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum> map_string_nested_enum = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 586 & 0xFF */)) {
          ::std::unique_ptr<TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse> entry(map_string_nested_enum_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum_IsValid(*entry->mutable_value())) {
              (*mutable_map_string_nested_enum())[entry->key()] =
                  static_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(73, data);
            }
          }
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            entry->key().data(), static_cast<int>(entry->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringNestedEnumEntry.key");
          if (entry->GetArena() != NULL) entry.release();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .protobuf_test_messages.proto2.ForeignEnumProto2> map_string_foreign_enum = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 594 & 0xFF */)) {
          ::std::unique_ptr<TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse> entry(map_string_foreign_enum_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::protobuf_test_messages::proto2::ForeignEnumProto2_IsValid(*entry->mutable_value())) {
              (*mutable_map_string_foreign_enum())[entry->key()] =
                  static_cast< ::protobuf_test_messages::proto2::ForeignEnumProto2 >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(74, data);
            }
          }
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            entry->key().data(), static_cast<int>(entry->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringForeignEnumEntry.key");
          if (entry->GetArena() != NULL) entry.release();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 oneof_uint32 = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 888 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oneof_field_.oneof_uint32_)));
          set_has_oneof_uint32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage oneof_nested_message = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oneof_nested_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string oneof_string = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oneof_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oneof_string().data(), static_cast<int>(this->oneof_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_test_messages.proto2.TestAllTypesProto2.oneof_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes oneof_bytes = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oneof_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool oneof_bool = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 920 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &oneof_field_.oneof_bool_)));
          set_has_oneof_bool();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 oneof_uint64 = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 928 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &oneof_field_.oneof_uint64_)));
          set_has_oneof_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float oneof_float = 117;
      case 117: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 941 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oneof_field_.oneof_float_)));
          set_has_oneof_float();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double oneof_double = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 945 & 0xFF */)) {
          clear_oneof_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &oneof_field_.oneof_double_)));
          set_has_oneof_double();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum oneof_enum = 119;
      case 119: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 952 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum_IsValid(value)) {
            set_oneof_enum(static_cast< ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                119, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional group Data = 201 { ... };
      case 201: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(75u /* 1611 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroup(
                201, input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fieldname1 = 401;
      case 401: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 3208 & 0xFF */)) {
          set_has_fieldname1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldname1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field_name2 = 402;
      case 402: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 3216 & 0xFF */)) {
          set_has_field_name2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 _field_name3 = 403;
      case 403: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 3224 & 0xFF */)) {
          set_has__field_name3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_field_name3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field__name4_ = 404;
      case 404: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 3232 & 0xFF */)) {
          set_has_field__name4_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field__name4__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field0name5 = 405;
      case 405: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 3240 & 0xFF */)) {
          set_has_field0name5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field0name5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field_0_name6 = 406;
      case 406: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 3248 & 0xFF */)) {
          set_has_field_0_name6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_0_name6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fieldName7 = 407;
      case 407: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 3256 & 0xFF */)) {
          set_has_fieldname7();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldname7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 FieldName8 = 408;
      case 408: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 3264 & 0xFF */)) {
          set_has_fieldname8();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fieldname8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field_Name9 = 409;
      case 409: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 3272 & 0xFF */)) {
          set_has_field_name9();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Field_Name10 = 410;
      case 410: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 3280 & 0xFF */)) {
          set_has_field_name10();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 FIELD_NAME11 = 411;
      case 411: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 3288 & 0xFF */)) {
          set_has_field_name11();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name11_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 FIELD_name12 = 412;
      case 412: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 3296 & 0xFF */)) {
          set_has_field_name12();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 __field_name13 = 413;
      case 413: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 3304 & 0xFF */)) {
          set_has___field_name13();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &__field_name13_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 __Field_name14 = 414;
      case 414: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 3312 & 0xFF */)) {
          set_has___field_name14();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &__field_name14_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field__name15 = 415;
      case 415: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 3320 & 0xFF */)) {
          set_has_field__name15();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field__name15_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field__Name16 = 416;
      case 416: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 3328 & 0xFF */)) {
          set_has_field__name16();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field__name16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field_name17__ = 417;
      case 417: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 3336 & 0xFF */)) {
          set_has_field_name17__();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name17___)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Field_name18__ = 418;
      case 418: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 3344 & 0xFF */)) {
          set_has_field_name18__();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name18___)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        if ((960u <= tag && tag < 1608u)) {
          DO_(_extensions_.ParseField(tag, input,
              internal_default_instance(),
              _internal_metadata_.mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto2.TestAllTypesProto2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto2.TestAllTypesProto2)
  return false;
#undef DO_
}

void TestAllTypesProto2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 optional_int32 = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->optional_int32(), output);
  }

  // optional int64 optional_int64 = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->optional_int64(), output);
  }

  // optional uint32 optional_uint32 = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->optional_uint32(), output);
  }

  // optional uint64 optional_uint64 = 4;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->optional_uint64(), output);
  }

  // optional sint32 optional_sint32 = 5;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->optional_sint32(), output);
  }

  // optional sint64 optional_sint64 = 6;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->optional_sint64(), output);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->optional_fixed32(), output);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->optional_fixed64(), output);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(9, this->optional_sfixed32(), output);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->optional_sfixed64(), output);
  }

  // optional float optional_float = 11;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->optional_float(), output);
  }

  // optional double optional_double = 12;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->optional_double(), output);
  }

  // optional bool optional_bool = 13;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->optional_bool(), output);
  }

  // optional string optional_string = 14;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string().data(), static_cast<int>(this->optional_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.optional_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->optional_string(), output);
  }

  // optional bytes optional_bytes = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->optional_bytes(), output);
  }

  // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage optional_nested_message = 18;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_optional_nested_message(), output);
  }

  // optional .protobuf_test_messages.proto2.ForeignMessageProto2 optional_foreign_message = 19;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_optional_foreign_message(), output);
  }

  // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum optional_nested_enum = 21;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->optional_nested_enum(), output);
  }

  // optional .protobuf_test_messages.proto2.ForeignEnumProto2 optional_foreign_enum = 22;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->optional_foreign_enum(), output);
  }

  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string_piece().data(), static_cast<int>(this->optional_string_piece().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.optional_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->optional_string_piece(), output);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_cord().data(), static_cast<int>(this->optional_cord().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.optional_cord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->optional_cord(), output);
  }

  // optional .protobuf_test_messages.proto2.TestAllTypesProto2 recursive_message = 27;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_recursive_message(), output);
  }

  // repeated int32 repeated_int32 = 31;
  for (int i = 0, n = this->repeated_int32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      31, this->repeated_int32(i), output);
  }

  // repeated int64 repeated_int64 = 32;
  for (int i = 0, n = this->repeated_int64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      32, this->repeated_int64(i), output);
  }

  // repeated uint32 repeated_uint32 = 33;
  for (int i = 0, n = this->repeated_uint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      33, this->repeated_uint32(i), output);
  }

  // repeated uint64 repeated_uint64 = 34;
  for (int i = 0, n = this->repeated_uint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      34, this->repeated_uint64(i), output);
  }

  // repeated sint32 repeated_sint32 = 35;
  for (int i = 0, n = this->repeated_sint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      35, this->repeated_sint32(i), output);
  }

  // repeated sint64 repeated_sint64 = 36;
  for (int i = 0, n = this->repeated_sint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      36, this->repeated_sint64(i), output);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  for (int i = 0, n = this->repeated_fixed32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      37, this->repeated_fixed32(i), output);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  for (int i = 0, n = this->repeated_fixed64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      38, this->repeated_fixed64(i), output);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  for (int i = 0, n = this->repeated_sfixed32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      39, this->repeated_sfixed32(i), output);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  for (int i = 0, n = this->repeated_sfixed64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      40, this->repeated_sfixed64(i), output);
  }

  // repeated float repeated_float = 41;
  for (int i = 0, n = this->repeated_float_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      41, this->repeated_float(i), output);
  }

  // repeated double repeated_double = 42;
  for (int i = 0, n = this->repeated_double_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      42, this->repeated_double(i), output);
  }

  // repeated bool repeated_bool = 43;
  for (int i = 0, n = this->repeated_bool_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      43, this->repeated_bool(i), output);
  }

  // repeated string repeated_string = 44;
  for (int i = 0, n = this->repeated_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string(i).data(), static_cast<int>(this->repeated_string(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      44, this->repeated_string(i), output);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0, n = this->repeated_bytes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      45, this->repeated_bytes(i), output);
  }

  // repeated .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage repeated_nested_message = 48;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_nested_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48,
      this->repeated_nested_message(static_cast<int>(i)),
      output);
  }

  // repeated .protobuf_test_messages.proto2.ForeignMessageProto2 repeated_foreign_message = 49;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_foreign_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49,
      this->repeated_foreign_message(static_cast<int>(i)),
      output);
  }

  // repeated .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum repeated_nested_enum = 51;
  for (int i = 0, n = this->repeated_nested_enum_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      51, this->repeated_nested_enum(i), output);
  }

  // repeated .protobuf_test_messages.proto2.ForeignEnumProto2 repeated_foreign_enum = 52;
  for (int i = 0, n = this->repeated_foreign_enum_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      52, this->repeated_foreign_enum(i), output);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0, n = this->repeated_string_piece_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string_piece(i).data(), static_cast<int>(this->repeated_string_piece(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_string_piece");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      54, this->repeated_string_piece(i), output);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0, n = this->repeated_cord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_cord(i).data(), static_cast<int>(this->repeated_cord(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_cord");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      55, this->repeated_cord(i), output);
  }

  // map<int32, int32> map_int32_int32 = 56;
  if (!this->map_int32_int32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int32_int32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_int32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32_int32().begin();
          it != this->map_int32_int32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapInt32Int32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_int32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            56, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapInt32Int32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32_int32().begin();
          it != this->map_int32_int32().end(); ++it) {
        entry.reset(map_int32_int32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            56, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int64, int64> map_int64_int64 = 57;
  if (!this->map_int64_int64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int64_int64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int64_int64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64_int64().begin();
          it != this->map_int64_int64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapInt64Int64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int64_int64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            57, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapInt64Int64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64_int64().begin();
          it != this->map_int64_int64().end(); ++it) {
        entry.reset(map_int64_int64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            57, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 58;
  if (!this->map_uint32_uint32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_uint32_uint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint32_uint32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_uint32_uint32().begin();
          it != this->map_uint32_uint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint32_uint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            58, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_uint32_uint32().begin();
          it != this->map_uint32_uint32().end(); ++it) {
        entry.reset(map_uint32_uint32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            58, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 59;
  if (!this->map_uint64_uint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_uint64_uint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint64_uint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64_uint64().begin();
          it != this->map_uint64_uint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint64_uint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            59, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64_uint64().begin();
          it != this->map_uint64_uint64().end(); ++it) {
        entry.reset(map_uint64_uint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            59, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 60;
  if (!this->map_sint32_sint32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_sint32_sint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sint32_sint32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sint32_sint32().begin();
          it != this->map_sint32_sint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sint32_sint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            60, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sint32_sint32().begin();
          it != this->map_sint32_sint32().end(); ++it) {
        entry.reset(map_sint32_sint32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            60, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 61;
  if (!this->map_sint64_sint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_sint64_sint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sint64_sint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sint64_sint64().begin();
          it != this->map_sint64_sint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sint64_sint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            61, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sint64_sint64().begin();
          it != this->map_sint64_sint64().end(); ++it) {
        entry.reset(map_sint64_sint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            61, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
  if (!this->map_fixed32_fixed32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_fixed32_fixed32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_fixed32_fixed32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_fixed32_fixed32().begin();
          it != this->map_fixed32_fixed32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_fixed32_fixed32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            62, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_fixed32_fixed32().begin();
          it != this->map_fixed32_fixed32().end(); ++it) {
        entry.reset(map_fixed32_fixed32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            62, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
  if (!this->map_fixed64_fixed64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_fixed64_fixed64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_fixed64_fixed64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_fixed64_fixed64().begin();
          it != this->map_fixed64_fixed64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_fixed64_fixed64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            63, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_fixed64_fixed64().begin();
          it != this->map_fixed64_fixed64().end(); ++it) {
        entry.reset(map_fixed64_fixed64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            63, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
  if (!this->map_sfixed32_sfixed32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_sfixed32_sfixed32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sfixed32_sfixed32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sfixed32_sfixed32().begin();
          it != this->map_sfixed32_sfixed32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            64, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sfixed32_sfixed32().begin();
          it != this->map_sfixed32_sfixed32().end(); ++it) {
        entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            64, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
  if (!this->map_sfixed64_sfixed64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_sfixed64_sfixed64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sfixed64_sfixed64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sfixed64_sfixed64().begin();
          it != this->map_sfixed64_sfixed64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            65, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sfixed64_sfixed64().begin();
          it != this->map_sfixed64_sfixed64().end(); ++it) {
        entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            65, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int32, float> map_int32_float = 66;
  if (!this->map_int32_float().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int32_float().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_float().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_int32_float().begin();
          it != this->map_int32_float().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapInt32FloatEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_float_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            66, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapInt32FloatEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_int32_float().begin();
          it != this->map_int32_float().end(); ++it) {
        entry.reset(map_int32_float_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            66, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int32, double> map_int32_double = 67;
  if (!this->map_int32_double().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_int32_double().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_double().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_int32_double().begin();
          it != this->map_int32_double().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_double_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            67, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_int32_double().begin();
          it != this->map_int32_double().end(); ++it) {
        entry.reset(map_int32_double_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            67, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<bool, bool> map_bool_bool = 68;
  if (!this->map_bool_bool().empty()) {
    typedef ::google::protobuf::Map< bool, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< bool, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->map_bool_bool().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_bool_bool().size()]);
      typedef ::google::protobuf::Map< bool, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< bool, bool >::const_iterator
          it = this->map_bool_bool().begin();
          it != this->map_bool_bool().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapBoolBoolEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_bool_bool_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            68, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapBoolBoolEntry_DoNotUse> entry;
      for (::google::protobuf::Map< bool, bool >::const_iterator
          it = this->map_bool_bool().begin();
          it != this->map_bool_bool().end(); ++it) {
        entry.reset(map_bool_bool_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            68, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<string, string> map_string_string = 69;
  if (!this->map_string_string().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringStringEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringStringEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_string().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_string().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_string().begin();
          it != this->map_string_string().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringStringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_string_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            69, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringStringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_string().begin();
          it != this->map_string_string().end(); ++it) {
        entry.reset(map_string_string_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            69, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> map_string_bytes = 70;
  if (!this->map_string_bytes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringBytesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_bytes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_bytes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_bytes().begin();
          it != this->map_string_bytes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringBytesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_bytes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            70, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringBytesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_bytes().begin();
          it != this->map_string_bytes().end(); ++it) {
        entry.reset(map_string_bytes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            70, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage> map_string_nested_message = 71;
  if (!this->map_string_nested_message().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringNestedMessageEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_nested_message().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_nested_message().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::const_iterator
          it = this->map_string_nested_message().begin();
          it != this->map_string_nested_message().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_nested_message_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            71, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::const_iterator
          it = this->map_string_nested_message().begin();
          it != this->map_string_nested_message().end(); ++it) {
        entry.reset(map_string_nested_message_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            71, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto2.ForeignMessageProto2> map_string_foreign_message = 72;
  if (!this->map_string_foreign_message().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringForeignMessageEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_foreign_message().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_foreign_message().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::const_iterator
          it = this->map_string_foreign_message().begin();
          it != this->map_string_foreign_message().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_foreign_message_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            72, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::const_iterator
          it = this->map_string_foreign_message().begin();
          it != this->map_string_foreign_message().end(); ++it) {
        entry.reset(map_string_foreign_message_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            72, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum> map_string_nested_enum = 73;
  if (!this->map_string_nested_enum().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringNestedEnumEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_nested_enum().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_nested_enum().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::const_iterator
          it = this->map_string_nested_enum().begin();
          it != this->map_string_nested_enum().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            73, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::const_iterator
          it = this->map_string_nested_enum().begin();
          it != this->map_string_nested_enum().end(); ++it) {
        entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            73, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto2.ForeignEnumProto2> map_string_foreign_enum = 74;
  if (!this->map_string_foreign_enum().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringForeignEnumEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_string_foreign_enum().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_foreign_enum().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::const_iterator
          it = this->map_string_foreign_enum().begin();
          it != this->map_string_foreign_enum().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            74, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::const_iterator
          it = this->map_string_foreign_enum().begin();
          it != this->map_string_foreign_enum().end(); ++it) {
        entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            74, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  switch (oneof_field_case()) {
    case kOneofUint32:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(111, this->oneof_uint32(), output);
      break;
    case kOneofNestedMessage:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        112, this->_internal_oneof_nested_message(), output);
      break;
    case kOneofString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->oneof_string().data(), static_cast<int>(this->oneof_string().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_test_messages.proto2.TestAllTypesProto2.oneof_string");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        113, this->oneof_string(), output);
      break;
    case kOneofBytes:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        114, this->oneof_bytes(), output);
      break;
    case kOneofBool:
      ::google::protobuf::internal::WireFormatLite::WriteBool(115, this->oneof_bool(), output);
      break;
    case kOneofUint64:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(116, this->oneof_uint64(), output);
      break;
    case kOneofFloat:
      ::google::protobuf::internal::WireFormatLite::WriteFloat(117, this->oneof_float(), output);
      break;
    case kOneofDouble:
      ::google::protobuf::internal::WireFormatLite::WriteDouble(118, this->oneof_double(), output);
      break;
    case kOneofEnum:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        119, this->oneof_enum(), output);
      break;
    default: ;
  }
  // Extension range [120, 201)
  _extensions_.SerializeWithCachedSizes(
      120, 201, output);

  // optional group Data = 201 { ... };
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      201, this->_internal_data(), output);
  }

  // optional int32 fieldname1 = 401;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(401, this->fieldname1(), output);
  }

  // optional int32 field_name2 = 402;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(402, this->field_name2(), output);
  }

  // optional int32 _field_name3 = 403;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(403, this->_field_name3(), output);
  }

  // optional int32 field__name4_ = 404;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(404, this->field__name4_(), output);
  }

  // optional int32 field0name5 = 405;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(405, this->field0name5(), output);
  }

  // optional int32 field_0_name6 = 406;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(406, this->field_0_name6(), output);
  }

  // optional int32 fieldName7 = 407;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(407, this->fieldname7(), output);
  }

  // optional int32 FieldName8 = 408;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(408, this->fieldname8(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 field_Name9 = 409;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(409, this->field_name9(), output);
  }

  // optional int32 Field_Name10 = 410;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(410, this->field_name10(), output);
  }

  // optional int32 FIELD_NAME11 = 411;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(411, this->field_name11(), output);
  }

  // optional int32 FIELD_name12 = 412;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(412, this->field_name12(), output);
  }

  // optional int32 __field_name13 = 413;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(413, this->__field_name13(), output);
  }

  // optional int32 __Field_name14 = 414;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(414, this->__field_name14(), output);
  }

  // optional int32 field__name15 = 415;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(415, this->field__name15(), output);
  }

  // optional int32 field__Name16 = 416;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(416, this->field__name16(), output);
  }

  // optional int32 field_name17__ = 417;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(417, this->field_name17__(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 Field_name18__ = 418;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(418, this->field_name18__(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto2.TestAllTypesProto2)
}

::google::protobuf::uint8* TestAllTypesProto2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 optional_int32 = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->optional_int32(), target);
  }

  // optional int64 optional_int64 = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->optional_int64(), target);
  }

  // optional uint32 optional_uint32 = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->optional_uint32(), target);
  }

  // optional uint64 optional_uint64 = 4;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->optional_uint64(), target);
  }

  // optional sint32 optional_sint32 = 5;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->optional_sint32(), target);
  }

  // optional sint64 optional_sint64 = 6;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->optional_sint64(), target);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->optional_fixed32(), target);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(8, this->optional_fixed64(), target);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(9, this->optional_sfixed32(), target);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->optional_sfixed64(), target);
  }

  // optional float optional_float = 11;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->optional_float(), target);
  }

  // optional double optional_double = 12;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->optional_double(), target);
  }

  // optional bool optional_bool = 13;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->optional_bool(), target);
  }

  // optional string optional_string = 14;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string().data(), static_cast<int>(this->optional_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.optional_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->optional_string(), target);
  }

  // optional bytes optional_bytes = 15;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->optional_bytes(), target);
  }

  // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage optional_nested_message = 18;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_optional_nested_message(), deterministic, target);
  }

  // optional .protobuf_test_messages.proto2.ForeignMessageProto2 optional_foreign_message = 19;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_optional_foreign_message(), deterministic, target);
  }

  // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum optional_nested_enum = 21;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->optional_nested_enum(), target);
  }

  // optional .protobuf_test_messages.proto2.ForeignEnumProto2 optional_foreign_enum = 22;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->optional_foreign_enum(), target);
  }

  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string_piece().data(), static_cast<int>(this->optional_string_piece().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.optional_string_piece");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->optional_string_piece(), target);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_cord().data(), static_cast<int>(this->optional_cord().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.optional_cord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->optional_cord(), target);
  }

  // optional .protobuf_test_messages.proto2.TestAllTypesProto2 recursive_message = 27;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_recursive_message(), deterministic, target);
  }

  // repeated int32 repeated_int32 = 31;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(31, this->repeated_int32_, target);

  // repeated int64 repeated_int64 = 32;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(32, this->repeated_int64_, target);

  // repeated uint32 repeated_uint32 = 33;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(33, this->repeated_uint32_, target);

  // repeated uint64 repeated_uint64 = 34;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(34, this->repeated_uint64_, target);

  // repeated sint32 repeated_sint32 = 35;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(35, this->repeated_sint32_, target);

  // repeated sint64 repeated_sint64 = 36;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt64ToArray(36, this->repeated_sint64_, target);

  // repeated fixed32 repeated_fixed32 = 37;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed32ToArray(37, this->repeated_fixed32_, target);

  // repeated fixed64 repeated_fixed64 = 38;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(38, this->repeated_fixed64_, target);

  // repeated sfixed32 repeated_sfixed32 = 39;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSFixed32ToArray(39, this->repeated_sfixed32_, target);

  // repeated sfixed64 repeated_sfixed64 = 40;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSFixed64ToArray(40, this->repeated_sfixed64_, target);

  // repeated float repeated_float = 41;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(41, this->repeated_float_, target);

  // repeated double repeated_double = 42;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(42, this->repeated_double_, target);

  // repeated bool repeated_bool = 43;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteBoolToArray(43, this->repeated_bool_, target);

  // repeated string repeated_string = 44;
  for (int i = 0, n = this->repeated_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string(i).data(), static_cast<int>(this->repeated_string(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(44, this->repeated_string(i), target);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0, n = this->repeated_bytes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(45, this->repeated_bytes(i), target);
  }

  // repeated .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage repeated_nested_message = 48;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_nested_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48, this->repeated_nested_message(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protobuf_test_messages.proto2.ForeignMessageProto2 repeated_foreign_message = 49;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_foreign_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49, this->repeated_foreign_message(static_cast<int>(i)), deterministic, target);
  }

  // repeated .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum repeated_nested_enum = 51;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    51, this->repeated_nested_enum_, target);

  // repeated .protobuf_test_messages.proto2.ForeignEnumProto2 repeated_foreign_enum = 52;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    52, this->repeated_foreign_enum_, target);

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0, n = this->repeated_string_piece_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string_piece(i).data(), static_cast<int>(this->repeated_string_piece(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_string_piece");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(54, this->repeated_string_piece(i), target);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0, n = this->repeated_cord_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_cord(i).data(), static_cast<int>(this->repeated_cord(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_test_messages.proto2.TestAllTypesProto2.repeated_cord");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(55, this->repeated_cord(i), target);
  }

  // map<int32, int32> map_int32_int32 = 56;
  if (!this->map_int32_int32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int32_int32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_int32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32_int32().begin();
          it != this->map_int32_int32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapInt32Int32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_int32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       56, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapInt32Int32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_int32_int32().begin();
          it != this->map_int32_int32().end(); ++it) {
        entry.reset(map_int32_int32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       56, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int64, int64> map_int64_int64 = 57;
  if (!this->map_int64_int64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int64_int64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int64_int64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64_int64().begin();
          it != this->map_int64_int64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapInt64Int64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int64_int64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       57, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapInt64Int64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_int64_int64().begin();
          it != this->map_int64_int64().end(); ++it) {
        entry.reset(map_int64_int64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       57, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 58;
  if (!this->map_uint32_uint32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_uint32_uint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint32_uint32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_uint32_uint32().begin();
          it != this->map_uint32_uint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint32_uint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       58, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_uint32_uint32().begin();
          it != this->map_uint32_uint32().end(); ++it) {
        entry.reset(map_uint32_uint32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       58, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 59;
  if (!this->map_uint64_uint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_uint64_uint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_uint64_uint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64_uint64().begin();
          it != this->map_uint64_uint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_uint64_uint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       59, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_uint64_uint64().begin();
          it != this->map_uint64_uint64().end(); ++it) {
        entry.reset(map_uint64_uint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       59, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 60;
  if (!this->map_sint32_sint32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_sint32_sint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sint32_sint32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sint32_sint32().begin();
          it != this->map_sint32_sint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sint32_sint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       60, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sint32_sint32().begin();
          it != this->map_sint32_sint32().end(); ++it) {
        entry.reset(map_sint32_sint32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       60, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 61;
  if (!this->map_sint64_sint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_sint64_sint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sint64_sint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sint64_sint64().begin();
          it != this->map_sint64_sint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sint64_sint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       61, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sint64_sint64().begin();
          it != this->map_sint64_sint64().end(); ++it) {
        entry.reset(map_sint64_sint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       61, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
  if (!this->map_fixed32_fixed32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_fixed32_fixed32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_fixed32_fixed32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_fixed32_fixed32().begin();
          it != this->map_fixed32_fixed32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_fixed32_fixed32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       62, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->map_fixed32_fixed32().begin();
          it != this->map_fixed32_fixed32().end(); ++it) {
        entry.reset(map_fixed32_fixed32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       62, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
  if (!this->map_fixed64_fixed64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_fixed64_fixed64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_fixed64_fixed64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_fixed64_fixed64().begin();
          it != this->map_fixed64_fixed64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_fixed64_fixed64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       63, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
          it = this->map_fixed64_fixed64().begin();
          it != this->map_fixed64_fixed64().end(); ++it) {
        entry.reset(map_fixed64_fixed64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       63, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
  if (!this->map_sfixed32_sfixed32().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_sfixed32_sfixed32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sfixed32_sfixed32().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sfixed32_sfixed32().begin();
          it != this->map_sfixed32_sfixed32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       64, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->map_sfixed32_sfixed32().begin();
          it != this->map_sfixed32_sfixed32().end(); ++it) {
        entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       64, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
  if (!this->map_sfixed64_sfixed64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_sfixed64_sfixed64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_sfixed64_sfixed64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sfixed64_sfixed64().begin();
          it != this->map_sfixed64_sfixed64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       65, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->map_sfixed64_sfixed64().begin();
          it != this->map_sfixed64_sfixed64().end(); ++it) {
        entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       65, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int32, float> map_int32_float = 66;
  if (!this->map_int32_float().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int32_float().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_float().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_int32_float().begin();
          it != this->map_int32_float().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapInt32FloatEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_float_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       66, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapInt32FloatEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
          it = this->map_int32_float().begin();
          it != this->map_int32_float().end(); ++it) {
        entry.reset(map_int32_float_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       66, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int32, double> map_int32_double = 67;
  if (!this->map_int32_double().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_int32_double().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_int32_double().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_int32_double().begin();
          it != this->map_int32_double().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_int32_double_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       67, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->map_int32_double().begin();
          it != this->map_int32_double().end(); ++it) {
        entry.reset(map_int32_double_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       67, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<bool, bool> map_bool_bool = 68;
  if (!this->map_bool_bool().empty()) {
    typedef ::google::protobuf::Map< bool, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< bool, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->map_bool_bool().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_bool_bool().size()]);
      typedef ::google::protobuf::Map< bool, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< bool, bool >::const_iterator
          it = this->map_bool_bool().begin();
          it != this->map_bool_bool().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapBoolBoolEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_bool_bool_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       68, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapBoolBoolEntry_DoNotUse> entry;
      for (::google::protobuf::Map< bool, bool >::const_iterator
          it = this->map_bool_bool().begin();
          it != this->map_bool_bool().end(); ++it) {
        entry.reset(map_bool_bool_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       68, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<string, string> map_string_string = 69;
  if (!this->map_string_string().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringStringEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringStringEntry.value");
      }
    };

    if (deterministic &&
        this->map_string_string().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_string().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_string().begin();
          it != this->map_string_string().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringStringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_string_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       69, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringStringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_string().begin();
          it != this->map_string_string().end(); ++it) {
        entry.reset(map_string_string_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       69, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> map_string_bytes = 70;
  if (!this->map_string_bytes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringBytesEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_bytes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_bytes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_bytes().begin();
          it != this->map_string_bytes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringBytesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_bytes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       70, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringBytesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_string_bytes().begin();
          it != this->map_string_bytes().end(); ++it) {
        entry.reset(map_string_bytes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       70, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage> map_string_nested_message = 71;
  if (!this->map_string_nested_message().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringNestedMessageEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_nested_message().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_nested_message().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::const_iterator
          it = this->map_string_nested_message().begin();
          it != this->map_string_nested_message().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_nested_message_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       71, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::const_iterator
          it = this->map_string_nested_message().begin();
          it != this->map_string_nested_message().end(); ++it) {
        entry.reset(map_string_nested_message_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       71, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto2.ForeignMessageProto2> map_string_foreign_message = 72;
  if (!this->map_string_foreign_message().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringForeignMessageEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_foreign_message().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_foreign_message().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::const_iterator
          it = this->map_string_foreign_message().begin();
          it != this->map_string_foreign_message().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_foreign_message_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       72, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::const_iterator
          it = this->map_string_foreign_message().begin();
          it != this->map_string_foreign_message().end(); ++it) {
        entry.reset(map_string_foreign_message_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       72, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum> map_string_nested_enum = 73;
  if (!this->map_string_nested_enum().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringNestedEnumEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_nested_enum().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_nested_enum().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::const_iterator
          it = this->map_string_nested_enum().begin();
          it != this->map_string_nested_enum().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       73, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::const_iterator
          it = this->map_string_nested_enum().begin();
          it != this->map_string_nested_enum().end(); ++it) {
        entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       73, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .protobuf_test_messages.proto2.ForeignEnumProto2> map_string_foreign_enum = 74;
  if (!this->map_string_foreign_enum().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "protobuf_test_messages.proto2.TestAllTypesProto2.MapStringForeignEnumEntry.key");
      }
    };

    if (deterministic &&
        this->map_string_foreign_enum().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_string_foreign_enum().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::const_iterator
          it = this->map_string_foreign_enum().begin();
          it != this->map_string_foreign_enum().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       74, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::const_iterator
          it = this->map_string_foreign_enum().begin();
          it != this->map_string_foreign_enum().end(); ++it) {
        entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       74, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  switch (oneof_field_case()) {
    case kOneofUint32:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(111, this->oneof_uint32(), target);
      break;
    case kOneofNestedMessage:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          112, this->_internal_oneof_nested_message(), deterministic, target);
      break;
    case kOneofString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->oneof_string().data(), static_cast<int>(this->oneof_string().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "protobuf_test_messages.proto2.TestAllTypesProto2.oneof_string");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          113, this->oneof_string(), target);
      break;
    case kOneofBytes:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          114, this->oneof_bytes(), target);
      break;
    case kOneofBool:
      target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(115, this->oneof_bool(), target);
      break;
    case kOneofUint64:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(116, this->oneof_uint64(), target);
      break;
    case kOneofFloat:
      target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(117, this->oneof_float(), target);
      break;
    case kOneofDouble:
      target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(118, this->oneof_double(), target);
      break;
    case kOneofEnum:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        119, this->oneof_enum(), target);
      break;
    default: ;
  }
  // Extension range [120, 201)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      120, 201, deterministic, target);

  // optional group Data = 201 { ... };
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupToArray(
        201, this->_internal_data(), deterministic, target);
  }

  // optional int32 fieldname1 = 401;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(401, this->fieldname1(), target);
  }

  // optional int32 field_name2 = 402;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(402, this->field_name2(), target);
  }

  // optional int32 _field_name3 = 403;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(403, this->_field_name3(), target);
  }

  // optional int32 field__name4_ = 404;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(404, this->field__name4_(), target);
  }

  // optional int32 field0name5 = 405;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(405, this->field0name5(), target);
  }

  // optional int32 field_0_name6 = 406;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(406, this->field_0_name6(), target);
  }

  // optional int32 fieldName7 = 407;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(407, this->fieldname7(), target);
  }

  // optional int32 FieldName8 = 408;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(408, this->fieldname8(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 field_Name9 = 409;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(409, this->field_name9(), target);
  }

  // optional int32 Field_Name10 = 410;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(410, this->field_name10(), target);
  }

  // optional int32 FIELD_NAME11 = 411;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(411, this->field_name11(), target);
  }

  // optional int32 FIELD_name12 = 412;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(412, this->field_name12(), target);
  }

  // optional int32 __field_name13 = 413;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(413, this->__field_name13(), target);
  }

  // optional int32 __Field_name14 = 414;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(414, this->__field_name14(), target);
  }

  // optional int32 field__name15 = 415;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(415, this->field__name15(), target);
  }

  // optional int32 field__Name16 = 416;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(416, this->field__name16(), target);
  }

  // optional int32 field_name17__ = 417;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(417, this->field_name17__(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 Field_name18__ = 418;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(418, this->field_name18__(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto2.TestAllTypesProto2)
  return target;
}

size_t TestAllTypesProto2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 repeated_int32 = 31;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->repeated_int32_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_int32_size());
    total_size += data_size;
  }

  // repeated int64 repeated_int64 = 32;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->repeated_int64_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_int64_size());
    total_size += data_size;
  }

  // repeated uint32 repeated_uint32 = 33;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->repeated_uint32_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_uint32_size());
    total_size += data_size;
  }

  // repeated uint64 repeated_uint64 = 34;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->repeated_uint64_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_uint64_size());
    total_size += data_size;
  }

  // repeated sint32 repeated_sint32 = 35;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->repeated_sint32_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sint32_size());
    total_size += data_size;
  }

  // repeated sint64 repeated_sint64 = 36;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->repeated_sint64_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sint64_size());
    total_size += data_size;
  }

  // repeated fixed32 repeated_fixed32 = 37;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_fixed32_size());
    size_t data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_fixed32_size());
    total_size += data_size;
  }

  // repeated fixed64 repeated_fixed64 = 38;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_fixed64_size());
    size_t data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_fixed64_size());
    total_size += data_size;
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_sfixed32_size());
    size_t data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sfixed32_size());
    total_size += data_size;
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_sfixed64_size());
    size_t data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_sfixed64_size());
    total_size += data_size;
  }

  // repeated float repeated_float = 41;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_float_size());
    size_t data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_float_size());
    total_size += data_size;
  }

  // repeated double repeated_double = 42;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_double_size());
    size_t data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_double_size());
    total_size += data_size;
  }

  // repeated bool repeated_bool = 43;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_bool_size());
    size_t data_size = 1UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->repeated_bool_size());
    total_size += data_size;
  }

  // repeated string repeated_string = 44;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_string_size());
  for (int i = 0, n = this->repeated_string_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string(i));
  }

  // repeated bytes repeated_bytes = 45;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_bytes_size());
  for (int i = 0, n = this->repeated_bytes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->repeated_bytes(i));
  }

  // repeated .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage repeated_nested_message = 48;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_nested_message_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_nested_message(static_cast<int>(i)));
    }
  }

  // repeated .protobuf_test_messages.proto2.ForeignMessageProto2 repeated_foreign_message = 49;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_foreign_message_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_foreign_message(static_cast<int>(i)));
    }
  }

  // repeated .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum repeated_nested_enum = 51;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->repeated_nested_enum_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_nested_enum(static_cast<int>(i)));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated .protobuf_test_messages.proto2.ForeignEnumProto2 repeated_foreign_enum = 52;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->repeated_foreign_enum_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->repeated_foreign_enum(static_cast<int>(i)));
    }
    total_size += (2UL * count) + data_size;
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_string_piece_size());
  for (int i = 0, n = this->repeated_string_piece_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string_piece(i));
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->repeated_cord_size());
  for (int i = 0, n = this->repeated_cord_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_cord(i));
  }

  // map<int32, int32> map_int32_int32 = 56;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_int32_int32_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapInt32Int32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->map_int32_int32().begin();
        it != this->map_int32_int32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_int32_int32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<int64, int64> map_int64_int64 = 57;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_int64_int64_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapInt64Int64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->map_int64_int64().begin();
        it != this->map_int64_int64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_int64_int64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<uint32, uint32> map_uint32_uint32 = 58;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_uint32_uint32_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->map_uint32_uint32().begin();
        it != this->map_uint32_uint32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_uint32_uint32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<uint64, uint64> map_uint64_uint64 = 59;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_uint64_uint64_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
        it = this->map_uint64_uint64().begin();
        it != this->map_uint64_uint64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_uint64_uint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, sint32> map_sint32_sint32 = 60;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_sint32_sint32_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->map_sint32_sint32().begin();
        it != this->map_sint32_sint32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_sint32_sint32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint64, sint64> map_sint64_sint64 = 61;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_sint64_sint64_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->map_sint64_sint64().begin();
        it != this->map_sint64_sint64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_sint64_sint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_fixed32_fixed32_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->map_fixed32_fixed32().begin();
        it != this->map_fixed32_fixed32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_fixed32_fixed32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_fixed64_fixed64_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint64 >::const_iterator
        it = this->map_fixed64_fixed64().begin();
        it != this->map_fixed64_fixed64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_fixed64_fixed64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_sfixed32_sfixed32_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->map_sfixed32_sfixed32().begin();
        it != this->map_sfixed32_sfixed32().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_sfixed32_sfixed32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_sfixed64_sfixed64_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->map_sfixed64_sfixed64().begin();
        it != this->map_sfixed64_sfixed64().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_sfixed64_sfixed64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<int32, float> map_int32_float = 66;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_int32_float_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapInt32FloatEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, float >::const_iterator
        it = this->map_int32_float().begin();
        it != this->map_int32_float().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_int32_float_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<int32, double> map_int32_double = 67;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_int32_double_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
        it = this->map_int32_double().begin();
        it != this->map_int32_double().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_int32_double_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<bool, bool> map_bool_bool = 68;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_bool_bool_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapBoolBoolEntry_DoNotUse> entry;
    for (::google::protobuf::Map< bool, bool >::const_iterator
        it = this->map_bool_bool().begin();
        it != this->map_bool_bool().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_bool_bool_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, string> map_string_string = 69;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_string_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapStringStringEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->map_string_string().begin();
        it != this->map_string_string().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_string_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, bytes> map_string_bytes = 70;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_bytes_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapStringBytesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->map_string_bytes().begin();
        it != this->map_string_bytes().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_bytes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage> map_string_nested_message = 71;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_nested_message_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >::const_iterator
        it = this->map_string_nested_message().begin();
        it != this->map_string_nested_message().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_nested_message_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .protobuf_test_messages.proto2.ForeignMessageProto2> map_string_foreign_message = 72;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_foreign_message_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignMessageProto2 >::const_iterator
        it = this->map_string_foreign_message().begin();
        it != this->map_string_foreign_message().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_foreign_message_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum> map_string_nested_enum = 73;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_nested_enum_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedEnum >::const_iterator
        it = this->map_string_nested_enum().begin();
        it != this->map_string_nested_enum().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_nested_enum_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<string, .protobuf_test_messages.proto2.ForeignEnumProto2> map_string_foreign_enum = 74;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->map_string_foreign_enum_size());
  {
    ::std::unique_ptr<TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::protobuf_test_messages::proto2::ForeignEnumProto2 >::const_iterator
        it = this->map_string_foreign_enum().begin();
        it != this->map_string_foreign_enum().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(map_string_foreign_enum_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string optional_string = 14;
    if (has_optional_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string());
    }

    // optional bytes optional_bytes = 15;
    if (has_optional_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->optional_bytes());
    }

    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    if (has_optional_string_piece()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string_piece());
    }

    // optional string optional_cord = 25 [ctype = CORD];
    if (has_optional_cord()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_cord());
    }

    // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage optional_nested_message = 18;
    if (has_optional_nested_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *optional_nested_message_);
    }

    // optional .protobuf_test_messages.proto2.ForeignMessageProto2 optional_foreign_message = 19;
    if (has_optional_foreign_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *optional_foreign_message_);
    }

    // optional .protobuf_test_messages.proto2.TestAllTypesProto2 recursive_message = 27;
    if (has_recursive_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *recursive_message_);
    }

    // optional group Data = 201 { ... };
    if (has_data()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          *data_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int64 optional_int64 = 2;
    if (has_optional_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->optional_int64());
    }

    // optional int32 optional_int32 = 1;
    if (has_optional_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optional_int32());
    }

    // optional uint32 optional_uint32 = 3;
    if (has_optional_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->optional_uint32());
    }

    // optional uint64 optional_uint64 = 4;
    if (has_optional_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->optional_uint64());
    }

    // optional sint64 optional_sint64 = 6;
    if (has_optional_sint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->optional_sint64());
    }

    // optional sint32 optional_sint32 = 5;
    if (has_optional_sint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->optional_sint32());
    }

    // optional fixed32 optional_fixed32 = 7;
    if (has_optional_fixed32()) {
      total_size += 1 + 4;
    }

    // optional fixed64 optional_fixed64 = 8;
    if (has_optional_fixed64()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional sfixed64 optional_sfixed64 = 10;
    if (has_optional_sfixed64()) {
      total_size += 1 + 8;
    }

    // optional sfixed32 optional_sfixed32 = 9;
    if (has_optional_sfixed32()) {
      total_size += 1 + 4;
    }

    // optional float optional_float = 11;
    if (has_optional_float()) {
      total_size += 1 + 4;
    }

    // optional double optional_double = 12;
    if (has_optional_double()) {
      total_size += 1 + 8;
    }

    // optional bool optional_bool = 13;
    if (has_optional_bool()) {
      total_size += 1 + 1;
    }

    // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum optional_nested_enum = 21;
    if (has_optional_nested_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_nested_enum());
    }

    // optional int32 Field_name18__ = 418;
    if (has_field_name18__()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name18__());
    }

    // optional .protobuf_test_messages.proto2.ForeignEnumProto2 optional_foreign_enum = 22;
    if (has_optional_foreign_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->optional_foreign_enum());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional int32 fieldname1 = 401;
    if (has_fieldname1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fieldname1());
    }

    // optional int32 field_name2 = 402;
    if (has_field_name2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name2());
    }

    // optional int32 _field_name3 = 403;
    if (has__field_name3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_field_name3());
    }

    // optional int32 field__name4_ = 404;
    if (has_field__name4_()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field__name4_());
    }

    // optional int32 field0name5 = 405;
    if (has_field0name5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field0name5());
    }

    // optional int32 field_0_name6 = 406;
    if (has_field_0_name6()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_0_name6());
    }

    // optional int32 fieldName7 = 407;
    if (has_fieldname7()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fieldname7());
    }

    // optional int32 FieldName8 = 408;
    if (has_fieldname8()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fieldname8());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional int32 field_Name9 = 409;
    if (has_field_name9()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name9());
    }

    // optional int32 Field_Name10 = 410;
    if (has_field_name10()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name10());
    }

    // optional int32 FIELD_NAME11 = 411;
    if (has_field_name11()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name11());
    }

    // optional int32 FIELD_name12 = 412;
    if (has_field_name12()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_name12());
    }

    // optional int32 __field_name13 = 413;
    if (has___field_name13()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->__field_name13());
    }

    // optional int32 __Field_name14 = 414;
    if (has___field_name14()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->__field_name14());
    }

    // optional int32 field__name15 = 415;
    if (has_field__name15()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field__name15());
    }

    // optional int32 field__Name16 = 416;
    if (has_field__name16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field__name16());
    }

  }
  // optional int32 field_name17__ = 417;
  if (has_field_name17__()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name17__());
  }

  switch (oneof_field_case()) {
    // optional uint32 oneof_uint32 = 111;
    case kOneofUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oneof_uint32());
      break;
    }
    // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage oneof_nested_message = 112;
    case kOneofNestedMessage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *oneof_field_.oneof_nested_message_);
      break;
    }
    // optional string oneof_string = 113;
    case kOneofString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oneof_string());
      break;
    }
    // optional bytes oneof_bytes = 114;
    case kOneofBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->oneof_bytes());
      break;
    }
    // optional bool oneof_bool = 115;
    case kOneofBool: {
      total_size += 2 + 1;
      break;
    }
    // optional uint64 oneof_uint64 = 116;
    case kOneofUint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->oneof_uint64());
      break;
    }
    // optional float oneof_float = 117;
    case kOneofFloat: {
      total_size += 2 + 4;
      break;
    }
    // optional double oneof_double = 118;
    case kOneofDouble: {
      total_size += 2 + 8;
      break;
    }
    // optional .protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum oneof_enum = 119;
    case kOneofEnum: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestAllTypesProto2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  GOOGLE_DCHECK_NE(&from, this);
  const TestAllTypesProto2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestAllTypesProto2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto2.TestAllTypesProto2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto2.TestAllTypesProto2)
    MergeFrom(*source);
  }
}

void TestAllTypesProto2::MergeFrom(const TestAllTypesProto2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  repeated_int32_.MergeFrom(from.repeated_int32_);
  repeated_int64_.MergeFrom(from.repeated_int64_);
  repeated_uint32_.MergeFrom(from.repeated_uint32_);
  repeated_uint64_.MergeFrom(from.repeated_uint64_);
  repeated_sint32_.MergeFrom(from.repeated_sint32_);
  repeated_sint64_.MergeFrom(from.repeated_sint64_);
  repeated_fixed32_.MergeFrom(from.repeated_fixed32_);
  repeated_fixed64_.MergeFrom(from.repeated_fixed64_);
  repeated_sfixed32_.MergeFrom(from.repeated_sfixed32_);
  repeated_sfixed64_.MergeFrom(from.repeated_sfixed64_);
  repeated_float_.MergeFrom(from.repeated_float_);
  repeated_double_.MergeFrom(from.repeated_double_);
  repeated_bool_.MergeFrom(from.repeated_bool_);
  repeated_string_.MergeFrom(from.repeated_string_);
  repeated_bytes_.MergeFrom(from.repeated_bytes_);
  repeated_nested_message_.MergeFrom(from.repeated_nested_message_);
  repeated_foreign_message_.MergeFrom(from.repeated_foreign_message_);
  repeated_nested_enum_.MergeFrom(from.repeated_nested_enum_);
  repeated_foreign_enum_.MergeFrom(from.repeated_foreign_enum_);
  repeated_string_piece_.MergeFrom(from.repeated_string_piece_);
  repeated_cord_.MergeFrom(from.repeated_cord_);
  map_int32_int32_.MergeFrom(from.map_int32_int32_);
  map_int64_int64_.MergeFrom(from.map_int64_int64_);
  map_uint32_uint32_.MergeFrom(from.map_uint32_uint32_);
  map_uint64_uint64_.MergeFrom(from.map_uint64_uint64_);
  map_sint32_sint32_.MergeFrom(from.map_sint32_sint32_);
  map_sint64_sint64_.MergeFrom(from.map_sint64_sint64_);
  map_fixed32_fixed32_.MergeFrom(from.map_fixed32_fixed32_);
  map_fixed64_fixed64_.MergeFrom(from.map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.MergeFrom(from.map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.MergeFrom(from.map_sfixed64_sfixed64_);
  map_int32_float_.MergeFrom(from.map_int32_float_);
  map_int32_double_.MergeFrom(from.map_int32_double_);
  map_bool_bool_.MergeFrom(from.map_bool_bool_);
  map_string_string_.MergeFrom(from.map_string_string_);
  map_string_bytes_.MergeFrom(from.map_string_bytes_);
  map_string_nested_message_.MergeFrom(from.map_string_nested_message_);
  map_string_foreign_message_.MergeFrom(from.map_string_foreign_message_);
  map_string_nested_enum_.MergeFrom(from.map_string_nested_enum_);
  map_string_foreign_enum_.MergeFrom(from.map_string_foreign_enum_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_optional_string(from.optional_string());
    }
    if (cached_has_bits & 0x00000002u) {
      set_optional_bytes(from.optional_bytes());
    }
    if (cached_has_bits & 0x00000004u) {
      set_optional_string_piece(from.optional_string_piece());
    }
    if (cached_has_bits & 0x00000008u) {
      set_optional_cord(from.optional_cord());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_optional_nested_message()->::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage::MergeFrom(from.optional_nested_message());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_optional_foreign_message()->::protobuf_test_messages::proto2::ForeignMessageProto2::MergeFrom(from.optional_foreign_message());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_recursive_message()->::protobuf_test_messages::proto2::TestAllTypesProto2::MergeFrom(from.recursive_message());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_data()->::protobuf_test_messages::proto2::TestAllTypesProto2_Data::MergeFrom(from.data());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      optional_int64_ = from.optional_int64_;
    }
    if (cached_has_bits & 0x00000200u) {
      optional_int32_ = from.optional_int32_;
    }
    if (cached_has_bits & 0x00000400u) {
      optional_uint32_ = from.optional_uint32_;
    }
    if (cached_has_bits & 0x00000800u) {
      optional_uint64_ = from.optional_uint64_;
    }
    if (cached_has_bits & 0x00001000u) {
      optional_sint64_ = from.optional_sint64_;
    }
    if (cached_has_bits & 0x00002000u) {
      optional_sint32_ = from.optional_sint32_;
    }
    if (cached_has_bits & 0x00004000u) {
      optional_fixed32_ = from.optional_fixed32_;
    }
    if (cached_has_bits & 0x00008000u) {
      optional_fixed64_ = from.optional_fixed64_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      optional_sfixed64_ = from.optional_sfixed64_;
    }
    if (cached_has_bits & 0x00020000u) {
      optional_sfixed32_ = from.optional_sfixed32_;
    }
    if (cached_has_bits & 0x00040000u) {
      optional_float_ = from.optional_float_;
    }
    if (cached_has_bits & 0x00080000u) {
      optional_double_ = from.optional_double_;
    }
    if (cached_has_bits & 0x00100000u) {
      optional_bool_ = from.optional_bool_;
    }
    if (cached_has_bits & 0x00200000u) {
      optional_nested_enum_ = from.optional_nested_enum_;
    }
    if (cached_has_bits & 0x00400000u) {
      field_name18___ = from.field_name18___;
    }
    if (cached_has_bits & 0x00800000u) {
      optional_foreign_enum_ = from.optional_foreign_enum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      fieldname1_ = from.fieldname1_;
    }
    if (cached_has_bits & 0x02000000u) {
      field_name2_ = from.field_name2_;
    }
    if (cached_has_bits & 0x04000000u) {
      _field_name3_ = from._field_name3_;
    }
    if (cached_has_bits & 0x08000000u) {
      field__name4__ = from.field__name4__;
    }
    if (cached_has_bits & 0x10000000u) {
      field0name5_ = from.field0name5_;
    }
    if (cached_has_bits & 0x20000000u) {
      field_0_name6_ = from.field_0_name6_;
    }
    if (cached_has_bits & 0x40000000u) {
      fieldname7_ = from.fieldname7_;
    }
    if (cached_has_bits & 0x80000000u) {
      fieldname8_ = from.fieldname8_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      field_name9_ = from.field_name9_;
    }
    if (cached_has_bits & 0x00000002u) {
      field_name10_ = from.field_name10_;
    }
    if (cached_has_bits & 0x00000004u) {
      field_name11_ = from.field_name11_;
    }
    if (cached_has_bits & 0x00000008u) {
      field_name12_ = from.field_name12_;
    }
    if (cached_has_bits & 0x00000010u) {
      __field_name13_ = from.__field_name13_;
    }
    if (cached_has_bits & 0x00000020u) {
      __field_name14_ = from.__field_name14_;
    }
    if (cached_has_bits & 0x00000040u) {
      field__name15_ = from.field__name15_;
    }
    if (cached_has_bits & 0x00000080u) {
      field__name16_ = from.field__name16_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_field_name17__(from.field_name17__());
  }
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      set_oneof_uint32(from.oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      mutable_oneof_nested_message()->::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage::MergeFrom(from.oneof_nested_message());
      break;
    }
    case kOneofString: {
      set_oneof_string(from.oneof_string());
      break;
    }
    case kOneofBytes: {
      set_oneof_bytes(from.oneof_bytes());
      break;
    }
    case kOneofBool: {
      set_oneof_bool(from.oneof_bool());
      break;
    }
    case kOneofUint64: {
      set_oneof_uint64(from.oneof_uint64());
      break;
    }
    case kOneofFloat: {
      set_oneof_float(from.oneof_float());
      break;
    }
    case kOneofDouble: {
      set_oneof_double(from.oneof_double());
      break;
    }
    case kOneofEnum: {
      set_oneof_enum(from.oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
}

void TestAllTypesProto2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestAllTypesProto2::CopyFrom(const TestAllTypesProto2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto2.TestAllTypesProto2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestAllTypesProto2::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  if (!::google::protobuf::internal::AllAreInitialized(this->repeated_nested_message())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->map_string_nested_message())) return false;
  if (has_optional_nested_message()) {
    if (!this->optional_nested_message_->IsInitialized()) return false;
  }
  if (has_recursive_message()) {
    if (!this->recursive_message_->IsInitialized()) return false;
  }
  switch (oneof_field_case()) {
    case kOneofUint32: {
      break;
    }
    case kOneofNestedMessage: {
      if (has_oneof_nested_message()) {
        if (!this->oneof_nested_message().IsInitialized()) return false;
      }
      break;
    }
    case kOneofString: {
      break;
    }
    case kOneofBytes: {
      break;
    }
    case kOneofBool: {
      break;
    }
    case kOneofUint64: {
      break;
    }
    case kOneofFloat: {
      break;
    }
    case kOneofDouble: {
      break;
    }
    case kOneofEnum: {
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  return true;
}

void TestAllTypesProto2::Swap(TestAllTypesProto2* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TestAllTypesProto2* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TestAllTypesProto2::UnsafeArenaSwap(TestAllTypesProto2* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TestAllTypesProto2::InternalSwap(TestAllTypesProto2* other) {
  using std::swap;
  repeated_int32_.InternalSwap(&other->repeated_int32_);
  repeated_int64_.InternalSwap(&other->repeated_int64_);
  repeated_uint32_.InternalSwap(&other->repeated_uint32_);
  repeated_uint64_.InternalSwap(&other->repeated_uint64_);
  repeated_sint32_.InternalSwap(&other->repeated_sint32_);
  repeated_sint64_.InternalSwap(&other->repeated_sint64_);
  repeated_fixed32_.InternalSwap(&other->repeated_fixed32_);
  repeated_fixed64_.InternalSwap(&other->repeated_fixed64_);
  repeated_sfixed32_.InternalSwap(&other->repeated_sfixed32_);
  repeated_sfixed64_.InternalSwap(&other->repeated_sfixed64_);
  repeated_float_.InternalSwap(&other->repeated_float_);
  repeated_double_.InternalSwap(&other->repeated_double_);
  repeated_bool_.InternalSwap(&other->repeated_bool_);
  repeated_string_.InternalSwap(CastToBase(&other->repeated_string_));
  repeated_bytes_.InternalSwap(CastToBase(&other->repeated_bytes_));
  CastToBase(&repeated_nested_message_)->InternalSwap(CastToBase(&other->repeated_nested_message_));
  CastToBase(&repeated_foreign_message_)->InternalSwap(CastToBase(&other->repeated_foreign_message_));
  repeated_nested_enum_.InternalSwap(&other->repeated_nested_enum_);
  repeated_foreign_enum_.InternalSwap(&other->repeated_foreign_enum_);
  repeated_string_piece_.InternalSwap(CastToBase(&other->repeated_string_piece_));
  repeated_cord_.InternalSwap(CastToBase(&other->repeated_cord_));
  map_int32_int32_.Swap(&other->map_int32_int32_);
  map_int64_int64_.Swap(&other->map_int64_int64_);
  map_uint32_uint32_.Swap(&other->map_uint32_uint32_);
  map_uint64_uint64_.Swap(&other->map_uint64_uint64_);
  map_sint32_sint32_.Swap(&other->map_sint32_sint32_);
  map_sint64_sint64_.Swap(&other->map_sint64_sint64_);
  map_fixed32_fixed32_.Swap(&other->map_fixed32_fixed32_);
  map_fixed64_fixed64_.Swap(&other->map_fixed64_fixed64_);
  map_sfixed32_sfixed32_.Swap(&other->map_sfixed32_sfixed32_);
  map_sfixed64_sfixed64_.Swap(&other->map_sfixed64_sfixed64_);
  map_int32_float_.Swap(&other->map_int32_float_);
  map_int32_double_.Swap(&other->map_int32_double_);
  map_bool_bool_.Swap(&other->map_bool_bool_);
  map_string_string_.Swap(&other->map_string_string_);
  map_string_bytes_.Swap(&other->map_string_bytes_);
  map_string_nested_message_.Swap(&other->map_string_nested_message_);
  map_string_foreign_message_.Swap(&other->map_string_foreign_message_);
  map_string_nested_enum_.Swap(&other->map_string_nested_enum_);
  map_string_foreign_enum_.Swap(&other->map_string_foreign_enum_);
  optional_string_.Swap(&other->optional_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  optional_bytes_.Swap(&other->optional_bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  optional_string_piece_.Swap(&other->optional_string_piece_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  optional_cord_.Swap(&other->optional_cord_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(optional_nested_message_, other->optional_nested_message_);
  swap(optional_foreign_message_, other->optional_foreign_message_);
  swap(recursive_message_, other->recursive_message_);
  swap(data_, other->data_);
  swap(optional_int64_, other->optional_int64_);
  swap(optional_int32_, other->optional_int32_);
  swap(optional_uint32_, other->optional_uint32_);
  swap(optional_uint64_, other->optional_uint64_);
  swap(optional_sint64_, other->optional_sint64_);
  swap(optional_sint32_, other->optional_sint32_);
  swap(optional_fixed32_, other->optional_fixed32_);
  swap(optional_fixed64_, other->optional_fixed64_);
  swap(optional_sfixed64_, other->optional_sfixed64_);
  swap(optional_sfixed32_, other->optional_sfixed32_);
  swap(optional_float_, other->optional_float_);
  swap(optional_double_, other->optional_double_);
  swap(optional_bool_, other->optional_bool_);
  swap(optional_nested_enum_, other->optional_nested_enum_);
  swap(field_name18___, other->field_name18___);
  swap(optional_foreign_enum_, other->optional_foreign_enum_);
  swap(fieldname1_, other->fieldname1_);
  swap(field_name2_, other->field_name2_);
  swap(_field_name3_, other->_field_name3_);
  swap(field__name4__, other->field__name4__);
  swap(field0name5_, other->field0name5_);
  swap(field_0_name6_, other->field_0_name6_);
  swap(fieldname7_, other->fieldname7_);
  swap(fieldname8_, other->fieldname8_);
  swap(field_name9_, other->field_name9_);
  swap(field_name10_, other->field_name10_);
  swap(field_name11_, other->field_name11_);
  swap(field_name12_, other->field_name12_);
  swap(__field_name13_, other->__field_name13_);
  swap(__field_name14_, other->__field_name14_);
  swap(field__name15_, other->field__name15_);
  swap(field__name16_, other->field__name16_);
  swap(field_name17___, other->field_name17___);
  swap(oneof_field_, other->oneof_field_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata TestAllTypesProto2::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForeignMessageProto2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForeignMessageProto2::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForeignMessageProto2::ForeignMessageProto2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_ForeignMessageProto2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_test_messages.proto2.ForeignMessageProto2)
}
ForeignMessageProto2::ForeignMessageProto2(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_ForeignMessageProto2.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_test_messages.proto2.ForeignMessageProto2)
}
ForeignMessageProto2::ForeignMessageProto2(const ForeignMessageProto2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  c_ = from.c_;
  // @@protoc_insertion_point(copy_constructor:protobuf_test_messages.proto2.ForeignMessageProto2)
}

void ForeignMessageProto2::SharedCtor() {
  c_ = 0;
}

ForeignMessageProto2::~ForeignMessageProto2() {
  // @@protoc_insertion_point(destructor:protobuf_test_messages.proto2.ForeignMessageProto2)
  SharedDtor();
}

void ForeignMessageProto2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ForeignMessageProto2::ArenaDtor(void* object) {
  ForeignMessageProto2* _this = reinterpret_cast< ForeignMessageProto2* >(object);
  (void)_this;
}
void ForeignMessageProto2::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ForeignMessageProto2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForeignMessageProto2::descriptor() {
  ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForeignMessageProto2& ForeignMessageProto2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::scc_info_ForeignMessageProto2.base);
  return *internal_default_instance();
}


void ForeignMessageProto2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ForeignMessageProto2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 c = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_test_messages.proto2.ForeignMessageProto2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_test_messages.proto2.ForeignMessageProto2)
  return false;
#undef DO_
}

void ForeignMessageProto2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 c = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_test_messages.proto2.ForeignMessageProto2)
}

::google::protobuf::uint8* ForeignMessageProto2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 c = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_test_messages.proto2.ForeignMessageProto2)
  return target;
}

size_t ForeignMessageProto2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 c = 1;
  if (has_c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForeignMessageProto2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  GOOGLE_DCHECK_NE(&from, this);
  const ForeignMessageProto2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForeignMessageProto2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_test_messages.proto2.ForeignMessageProto2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_test_messages.proto2.ForeignMessageProto2)
    MergeFrom(*source);
  }
}

void ForeignMessageProto2::MergeFrom(const ForeignMessageProto2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_c()) {
    set_c(from.c());
  }
}

void ForeignMessageProto2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForeignMessageProto2::CopyFrom(const ForeignMessageProto2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_test_messages.proto2.ForeignMessageProto2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForeignMessageProto2::IsInitialized() const {
  return true;
}

void ForeignMessageProto2::Swap(ForeignMessageProto2* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ForeignMessageProto2* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ForeignMessageProto2::UnsafeArenaSwap(ForeignMessageProto2* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ForeignMessageProto2::InternalSwap(ForeignMessageProto2* other) {
  using std::swap;
  swap(c_, other->c_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForeignMessageProto2::GetMetadata() const {
  protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2ftest_5fmessages_5fproto2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto2_MessageSetCorrectExtension1::kMessageSetExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1 >, 11, false >
  TestAllTypesProto2_MessageSetCorrectExtension1::message_set_extension(kMessageSetExtensionFieldNumber, *::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestAllTypesProto2_MessageSetCorrectExtension2::kMessageSetExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2 >, 11, false >
  TestAllTypesProto2_MessageSetCorrectExtension2::message_set_extension(kMessageSetExtensionFieldNumber, *::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_test_messages::proto2::TestAllTypesProto2,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  extension_int32(kExtensionInt32FieldNumber, 0);

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto2
}  // namespace protobuf_test_messages
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_NestedMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32Int32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt64Int64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint32Uint32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapUint64Uint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint32Sint32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSint64Sint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed32Fixed32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapFixed64Fixed64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed32Sfixed32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapSfixed64Sfixed64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32FloatEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapInt32DoubleEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapBoolBoolEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringStringEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringBytesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedMessageEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignMessageEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringNestedEnumEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MapStringForeignEnumEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_Data* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_Data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension1 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2_MessageSetCorrectExtension2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::TestAllTypesProto2* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::TestAllTypesProto2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::TestAllTypesProto2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protobuf_test_messages::proto2::ForeignMessageProto2* Arena::CreateMaybeMessage< ::protobuf_test_messages::proto2::ForeignMessageProto2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_test_messages::proto2::ForeignMessageProto2 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
