// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/compiler/ruby/ruby_generated_code.proto

#ifndef PROTOBUF_INCLUDED_google_2fprotobuf_2fcompiler_2fruby_2fruby_5fgenerated_5fcode_2eproto
#define PROTOBUF_INCLUDED_google_2fprotobuf_2fcompiler_2fruby_2fruby_5fgenerated_5fcode_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fcompiler_2fruby_2fruby_5fgenerated_5fcode_2eproto 

namespace protobuf_google_2fprotobuf_2fcompiler_2fruby_2fruby_5fgenerated_5fcode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fprotobuf_2fcompiler_2fruby_2fruby_5fgenerated_5fcode_2eproto
namespace A {
namespace B {
namespace C {
class TestMessage;
class TestMessageDefaultTypeInternal;
extern TestMessageDefaultTypeInternal _TestMessage_default_instance_;
class TestMessage_MapBoolStringEntry_DoNotUse;
class TestMessage_MapBoolStringEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapBoolStringEntry_DoNotUseDefaultTypeInternal _TestMessage_MapBoolStringEntry_DoNotUse_default_instance_;
class TestMessage_MapInt32StringEntry_DoNotUse;
class TestMessage_MapInt32StringEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapInt32StringEntry_DoNotUseDefaultTypeInternal _TestMessage_MapInt32StringEntry_DoNotUse_default_instance_;
class TestMessage_MapInt64StringEntry_DoNotUse;
class TestMessage_MapInt64StringEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapInt64StringEntry_DoNotUseDefaultTypeInternal _TestMessage_MapInt64StringEntry_DoNotUse_default_instance_;
class TestMessage_MapStringBoolEntry_DoNotUse;
class TestMessage_MapStringBoolEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapStringBoolEntry_DoNotUseDefaultTypeInternal _TestMessage_MapStringBoolEntry_DoNotUse_default_instance_;
class TestMessage_MapStringEnumEntry_DoNotUse;
class TestMessage_MapStringEnumEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapStringEnumEntry_DoNotUseDefaultTypeInternal _TestMessage_MapStringEnumEntry_DoNotUse_default_instance_;
class TestMessage_MapStringInt32Entry_DoNotUse;
class TestMessage_MapStringInt32Entry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapStringInt32Entry_DoNotUseDefaultTypeInternal _TestMessage_MapStringInt32Entry_DoNotUse_default_instance_;
class TestMessage_MapStringMsgEntry_DoNotUse;
class TestMessage_MapStringMsgEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapStringMsgEntry_DoNotUseDefaultTypeInternal _TestMessage_MapStringMsgEntry_DoNotUse_default_instance_;
class TestMessage_MapStringStringEntry_DoNotUse;
class TestMessage_MapStringStringEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapStringStringEntry_DoNotUseDefaultTypeInternal _TestMessage_MapStringStringEntry_DoNotUse_default_instance_;
class TestMessage_MapUint32StringEntry_DoNotUse;
class TestMessage_MapUint32StringEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapUint32StringEntry_DoNotUseDefaultTypeInternal _TestMessage_MapUint32StringEntry_DoNotUse_default_instance_;
class TestMessage_MapUint64StringEntry_DoNotUse;
class TestMessage_MapUint64StringEntry_DoNotUseDefaultTypeInternal;
extern TestMessage_MapUint64StringEntry_DoNotUseDefaultTypeInternal _TestMessage_MapUint64StringEntry_DoNotUse_default_instance_;
class TestMessage_NestedMessage;
class TestMessage_NestedMessageDefaultTypeInternal;
extern TestMessage_NestedMessageDefaultTypeInternal _TestMessage_NestedMessage_default_instance_;
}  // namespace C
}  // namespace B
}  // namespace A
namespace google {
namespace protobuf {
template<> ::A::B::C::TestMessage* Arena::CreateMaybeMessage<::A::B::C::TestMessage>(Arena*);
template<> ::A::B::C::TestMessage_MapBoolStringEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapBoolStringEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapInt32StringEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapInt32StringEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapInt64StringEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapInt64StringEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapStringBoolEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapStringBoolEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapStringEnumEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapStringEnumEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapStringInt32Entry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapStringInt32Entry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapStringMsgEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapStringMsgEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapStringStringEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapStringStringEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapUint32StringEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapUint32StringEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_MapUint64StringEntry_DoNotUse* Arena::CreateMaybeMessage<::A::B::C::TestMessage_MapUint64StringEntry_DoNotUse>(Arena*);
template<> ::A::B::C::TestMessage_NestedMessage* Arena::CreateMaybeMessage<::A::B::C::TestMessage_NestedMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace A {
namespace B {
namespace C {

enum TestEnum {
  Default = 0,
  A = 1,
  B = 2,
  C = 3,
  TestEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestEnum_IsValid(int value);
const TestEnum TestEnum_MIN = Default;
const TestEnum TestEnum_MAX = C;
const int TestEnum_ARRAYSIZE = TestEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestEnum_descriptor();
inline const ::std::string& TestEnum_Name(TestEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestEnum_descriptor(), value);
}
inline bool TestEnum_Parse(
    const ::std::string& name, TestEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestEnum>(
    TestEnum_descriptor(), name, value);
}
// ===================================================================

class TestMessage_MapInt32StringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapInt32StringEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapInt32StringEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  TestMessage_MapInt32StringEntry_DoNotUse();
  TestMessage_MapInt32StringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapInt32StringEntry_DoNotUse& other);
  static const TestMessage_MapInt32StringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapInt32StringEntry_DoNotUse*>(&_TestMessage_MapInt32StringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapInt64StringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapInt64StringEntry_DoNotUse, 
    ::google::protobuf::int64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapInt64StringEntry_DoNotUse, 
    ::google::protobuf::int64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  TestMessage_MapInt64StringEntry_DoNotUse();
  TestMessage_MapInt64StringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapInt64StringEntry_DoNotUse& other);
  static const TestMessage_MapInt64StringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapInt64StringEntry_DoNotUse*>(&_TestMessage_MapInt64StringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapUint32StringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapUint32StringEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapUint32StringEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  TestMessage_MapUint32StringEntry_DoNotUse();
  TestMessage_MapUint32StringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapUint32StringEntry_DoNotUse& other);
  static const TestMessage_MapUint32StringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapUint32StringEntry_DoNotUse*>(&_TestMessage_MapUint32StringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapUint64StringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapUint64StringEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapUint64StringEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  TestMessage_MapUint64StringEntry_DoNotUse();
  TestMessage_MapUint64StringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapUint64StringEntry_DoNotUse& other);
  static const TestMessage_MapUint64StringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapUint64StringEntry_DoNotUse*>(&_TestMessage_MapUint64StringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapBoolStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapBoolStringEntry_DoNotUse, 
    bool, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapBoolStringEntry_DoNotUse, 
    bool, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  TestMessage_MapBoolStringEntry_DoNotUse();
  TestMessage_MapBoolStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapBoolStringEntry_DoNotUse& other);
  static const TestMessage_MapBoolStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapBoolStringEntry_DoNotUse*>(&_TestMessage_MapBoolStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapStringStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapStringStringEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapStringStringEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  TestMessage_MapStringStringEntry_DoNotUse();
  TestMessage_MapStringStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapStringStringEntry_DoNotUse& other);
  static const TestMessage_MapStringStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapStringStringEntry_DoNotUse*>(&_TestMessage_MapStringStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapStringMsgEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapStringMsgEntry_DoNotUse, 
    ::std::string, ::A::B::C::TestMessage,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapStringMsgEntry_DoNotUse, 
    ::std::string, ::A::B::C::TestMessage,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  TestMessage_MapStringMsgEntry_DoNotUse();
  TestMessage_MapStringMsgEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapStringMsgEntry_DoNotUse& other);
  static const TestMessage_MapStringMsgEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapStringMsgEntry_DoNotUse*>(&_TestMessage_MapStringMsgEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapStringEnumEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapStringEnumEntry_DoNotUse, 
    ::std::string, ::A::B::C::TestEnum,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapStringEnumEntry_DoNotUse, 
    ::std::string, ::A::B::C::TestEnum,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
    0 > SuperType;
  TestMessage_MapStringEnumEntry_DoNotUse();
  TestMessage_MapStringEnumEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapStringEnumEntry_DoNotUse& other);
  static const TestMessage_MapStringEnumEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapStringEnumEntry_DoNotUse*>(&_TestMessage_MapStringEnumEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapStringInt32Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapStringInt32Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapStringInt32Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  TestMessage_MapStringInt32Entry_DoNotUse();
  TestMessage_MapStringInt32Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapStringInt32Entry_DoNotUse& other);
  static const TestMessage_MapStringInt32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapStringInt32Entry_DoNotUse*>(&_TestMessage_MapStringInt32Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_MapStringBoolEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TestMessage_MapStringBoolEntry_DoNotUse, 
    ::std::string, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TestMessage_MapStringBoolEntry_DoNotUse, 
    ::std::string, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  TestMessage_MapStringBoolEntry_DoNotUse();
  TestMessage_MapStringBoolEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TestMessage_MapStringBoolEntry_DoNotUse& other);
  static const TestMessage_MapStringBoolEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestMessage_MapStringBoolEntry_DoNotUse*>(&_TestMessage_MapStringBoolEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TestMessage_NestedMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:A.B.C.TestMessage.NestedMessage) */ {
 public:
  TestMessage_NestedMessage();
  virtual ~TestMessage_NestedMessage();

  TestMessage_NestedMessage(const TestMessage_NestedMessage& from);

  inline TestMessage_NestedMessage& operator=(const TestMessage_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestMessage_NestedMessage(TestMessage_NestedMessage&& from) noexcept
    : TestMessage_NestedMessage() {
    *this = ::std::move(from);
  }

  inline TestMessage_NestedMessage& operator=(TestMessage_NestedMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestMessage_NestedMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessage_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestMessage_NestedMessage*>(
               &_TestMessage_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(TestMessage_NestedMessage* other);
  friend void swap(TestMessage_NestedMessage& a, TestMessage_NestedMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestMessage_NestedMessage* New() const final {
    return CreateMaybeMessage<TestMessage_NestedMessage>(NULL);
  }

  TestMessage_NestedMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestMessage_NestedMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestMessage_NestedMessage& from);
  void MergeFrom(const TestMessage_NestedMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessage_NestedMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 foo = 1;
  void clear_foo();
  static const int kFooFieldNumber = 1;
  ::google::protobuf::int32 foo() const;
  void set_foo(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:A.B.C.TestMessage.NestedMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 foo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fprotobuf_2fcompiler_2fruby_2fruby_5fgenerated_5fcode_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:A.B.C.TestMessage) */ {
 public:
  TestMessage();
  virtual ~TestMessage();

  TestMessage(const TestMessage& from);

  inline TestMessage& operator=(const TestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestMessage(TestMessage&& from) noexcept
    : TestMessage() {
    *this = ::std::move(from);
  }

  inline TestMessage& operator=(TestMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestMessage& default_instance();

  enum MyOneofCase {
    kOneofInt32 = 41,
    kOneofInt64 = 42,
    kOneofUint32 = 43,
    kOneofUint64 = 44,
    kOneofBool = 45,
    kOneofDouble = 46,
    kOneofFloat = 47,
    kOneofString = 48,
    kOneofBytes = 49,
    kOneofEnum = 50,
    kOneofMsg = 51,
    MY_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessage* internal_default_instance() {
    return reinterpret_cast<const TestMessage*>(
               &_TestMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(TestMessage* other);
  friend void swap(TestMessage& a, TestMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestMessage* New() const final {
    return CreateMaybeMessage<TestMessage>(NULL);
  }

  TestMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestMessage& from);
  void MergeFrom(const TestMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestMessage_NestedMessage NestedMessage;

  // accessors -------------------------------------------------------

  // repeated int32 repeated_int32 = 21;
  int repeated_int32_size() const;
  void clear_repeated_int32();
  static const int kRepeatedInt32FieldNumber = 21;
  ::google::protobuf::int32 repeated_int32(int index) const;
  void set_repeated_int32(int index, ::google::protobuf::int32 value);
  void add_repeated_int32(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      repeated_int32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_repeated_int32();

  // repeated int64 repeated_int64 = 22;
  int repeated_int64_size() const;
  void clear_repeated_int64();
  static const int kRepeatedInt64FieldNumber = 22;
  ::google::protobuf::int64 repeated_int64(int index) const;
  void set_repeated_int64(int index, ::google::protobuf::int64 value);
  void add_repeated_int64(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      repeated_int64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_repeated_int64();

  // repeated uint32 repeated_uint32 = 23;
  int repeated_uint32_size() const;
  void clear_repeated_uint32();
  static const int kRepeatedUint32FieldNumber = 23;
  ::google::protobuf::uint32 repeated_uint32(int index) const;
  void set_repeated_uint32(int index, ::google::protobuf::uint32 value);
  void add_repeated_uint32(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      repeated_uint32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_repeated_uint32();

  // repeated uint64 repeated_uint64 = 24;
  int repeated_uint64_size() const;
  void clear_repeated_uint64();
  static const int kRepeatedUint64FieldNumber = 24;
  ::google::protobuf::uint64 repeated_uint64(int index) const;
  void set_repeated_uint64(int index, ::google::protobuf::uint64 value);
  void add_repeated_uint64(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      repeated_uint64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_repeated_uint64();

  // repeated bool repeated_bool = 25;
  int repeated_bool_size() const;
  void clear_repeated_bool();
  static const int kRepeatedBoolFieldNumber = 25;
  bool repeated_bool(int index) const;
  void set_repeated_bool(int index, bool value);
  void add_repeated_bool(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      repeated_bool() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_repeated_bool();

  // repeated double repeated_double = 26;
  int repeated_double_size() const;
  void clear_repeated_double();
  static const int kRepeatedDoubleFieldNumber = 26;
  double repeated_double(int index) const;
  void set_repeated_double(int index, double value);
  void add_repeated_double(double value);
  const ::google::protobuf::RepeatedField< double >&
      repeated_double() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_repeated_double();

  // repeated float repeated_float = 27;
  int repeated_float_size() const;
  void clear_repeated_float();
  static const int kRepeatedFloatFieldNumber = 27;
  float repeated_float(int index) const;
  void set_repeated_float(int index, float value);
  void add_repeated_float(float value);
  const ::google::protobuf::RepeatedField< float >&
      repeated_float() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_repeated_float();

  // repeated string repeated_string = 28;
  int repeated_string_size() const;
  void clear_repeated_string();
  static const int kRepeatedStringFieldNumber = 28;
  const ::std::string& repeated_string(int index) const;
  ::std::string* mutable_repeated_string(int index);
  void set_repeated_string(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeated_string(int index, ::std::string&& value);
  #endif
  void set_repeated_string(int index, const char* value);
  void set_repeated_string(int index, const char* value, size_t size);
  ::std::string* add_repeated_string();
  void add_repeated_string(const ::std::string& value);
  #if LANG_CXX11
  void add_repeated_string(::std::string&& value);
  #endif
  void add_repeated_string(const char* value);
  void add_repeated_string(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeated_string() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeated_string();

  // repeated bytes repeated_bytes = 29;
  int repeated_bytes_size() const;
  void clear_repeated_bytes();
  static const int kRepeatedBytesFieldNumber = 29;
  const ::std::string& repeated_bytes(int index) const;
  ::std::string* mutable_repeated_bytes(int index);
  void set_repeated_bytes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeated_bytes(int index, ::std::string&& value);
  #endif
  void set_repeated_bytes(int index, const char* value);
  void set_repeated_bytes(int index, const void* value, size_t size);
  ::std::string* add_repeated_bytes();
  void add_repeated_bytes(const ::std::string& value);
  #if LANG_CXX11
  void add_repeated_bytes(::std::string&& value);
  #endif
  void add_repeated_bytes(const char* value);
  void add_repeated_bytes(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeated_bytes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeated_bytes();

  // repeated .A.B.C.TestEnum repeated_enum = 30;
  int repeated_enum_size() const;
  void clear_repeated_enum();
  static const int kRepeatedEnumFieldNumber = 30;
  ::A::B::C::TestEnum repeated_enum(int index) const;
  void set_repeated_enum(int index, ::A::B::C::TestEnum value);
  void add_repeated_enum(::A::B::C::TestEnum value);
  const ::google::protobuf::RepeatedField<int>& repeated_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_enum();

  // repeated .A.B.C.TestMessage repeated_msg = 31;
  int repeated_msg_size() const;
  void clear_repeated_msg();
  static const int kRepeatedMsgFieldNumber = 31;
  ::A::B::C::TestMessage* mutable_repeated_msg(int index);
  ::google::protobuf::RepeatedPtrField< ::A::B::C::TestMessage >*
      mutable_repeated_msg();
  const ::A::B::C::TestMessage& repeated_msg(int index) const;
  ::A::B::C::TestMessage* add_repeated_msg();
  const ::google::protobuf::RepeatedPtrField< ::A::B::C::TestMessage >&
      repeated_msg() const;

  // map<int32, string> map_int32_string = 61;
  int map_int32_string_size() const;
  void clear_map_int32_string();
  static const int kMapInt32StringFieldNumber = 61;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      map_int32_string() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_map_int32_string();

  // map<int64, string> map_int64_string = 62;
  int map_int64_string_size() const;
  void clear_map_int64_string();
  static const int kMapInt64StringFieldNumber = 62;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
      map_int64_string() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
      mutable_map_int64_string();

  // map<uint32, string> map_uint32_string = 63;
  int map_uint32_string_size() const;
  void clear_map_uint32_string();
  static const int kMapUint32StringFieldNumber = 63;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      map_uint32_string() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_map_uint32_string();

  // map<uint64, string> map_uint64_string = 64;
  int map_uint64_string_size() const;
  void clear_map_uint64_string();
  static const int kMapUint64StringFieldNumber = 64;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      map_uint64_string() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_map_uint64_string();

  // map<bool, string> map_bool_string = 65;
  int map_bool_string_size() const;
  void clear_map_bool_string();
  static const int kMapBoolStringFieldNumber = 65;
  const ::google::protobuf::Map< bool, ::std::string >&
      map_bool_string() const;
  ::google::protobuf::Map< bool, ::std::string >*
      mutable_map_bool_string();

  // map<string, string> map_string_string = 66;
  int map_string_string_size() const;
  void clear_map_string_string();
  static const int kMapStringStringFieldNumber = 66;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      map_string_string() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_map_string_string();

  // map<string, .A.B.C.TestMessage> map_string_msg = 67;
  int map_string_msg_size() const;
  void clear_map_string_msg();
  static const int kMapStringMsgFieldNumber = 67;
  const ::google::protobuf::Map< ::std::string, ::A::B::C::TestMessage >&
      map_string_msg() const;
  ::google::protobuf::Map< ::std::string, ::A::B::C::TestMessage >*
      mutable_map_string_msg();

  // map<string, .A.B.C.TestEnum> map_string_enum = 68;
  int map_string_enum_size() const;
  void clear_map_string_enum();
  static const int kMapStringEnumFieldNumber = 68;
  const ::google::protobuf::Map< ::std::string, ::A::B::C::TestEnum >&
      map_string_enum() const;
  ::google::protobuf::Map< ::std::string, ::A::B::C::TestEnum >*
      mutable_map_string_enum();

  // map<string, int32> map_string_int32 = 69;
  int map_string_int32_size() const;
  void clear_map_string_int32();
  static const int kMapStringInt32FieldNumber = 69;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      map_string_int32() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_map_string_int32();

  // map<string, bool> map_string_bool = 70;
  int map_string_bool_size() const;
  void clear_map_string_bool();
  static const int kMapStringBoolFieldNumber = 70;
  const ::google::protobuf::Map< ::std::string, bool >&
      map_string_bool() const;
  ::google::protobuf::Map< ::std::string, bool >*
      mutable_map_string_bool();

  // string optional_string = 8;
  void clear_optional_string();
  static const int kOptionalStringFieldNumber = 8;
  const ::std::string& optional_string() const;
  void set_optional_string(const ::std::string& value);
  #if LANG_CXX11
  void set_optional_string(::std::string&& value);
  #endif
  void set_optional_string(const char* value);
  void set_optional_string(const char* value, size_t size);
  ::std::string* mutable_optional_string();
  ::std::string* release_optional_string();
  void set_allocated_optional_string(::std::string* optional_string);

  // bytes optional_bytes = 9;
  void clear_optional_bytes();
  static const int kOptionalBytesFieldNumber = 9;
  const ::std::string& optional_bytes() const;
  void set_optional_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_optional_bytes(::std::string&& value);
  #endif
  void set_optional_bytes(const char* value);
  void set_optional_bytes(const void* value, size_t size);
  ::std::string* mutable_optional_bytes();
  ::std::string* release_optional_bytes();
  void set_allocated_optional_bytes(::std::string* optional_bytes);

  // .A.B.C.TestMessage optional_msg = 11;
  bool has_optional_msg() const;
  void clear_optional_msg();
  static const int kOptionalMsgFieldNumber = 11;
  private:
  const ::A::B::C::TestMessage& _internal_optional_msg() const;
  public:
  const ::A::B::C::TestMessage& optional_msg() const;
  ::A::B::C::TestMessage* release_optional_msg();
  ::A::B::C::TestMessage* mutable_optional_msg();
  void set_allocated_optional_msg(::A::B::C::TestMessage* optional_msg);

  // .A.B.C.TestMessage.NestedMessage nested_message = 80;
  bool has_nested_message() const;
  void clear_nested_message();
  static const int kNestedMessageFieldNumber = 80;
  private:
  const ::A::B::C::TestMessage_NestedMessage& _internal_nested_message() const;
  public:
  const ::A::B::C::TestMessage_NestedMessage& nested_message() const;
  ::A::B::C::TestMessage_NestedMessage* release_nested_message();
  ::A::B::C::TestMessage_NestedMessage* mutable_nested_message();
  void set_allocated_nested_message(::A::B::C::TestMessage_NestedMessage* nested_message);

  // int64 optional_int64 = 2;
  void clear_optional_int64();
  static const int kOptionalInt64FieldNumber = 2;
  ::google::protobuf::int64 optional_int64() const;
  void set_optional_int64(::google::protobuf::int64 value);

  // int32 optional_int32 = 1;
  void clear_optional_int32();
  static const int kOptionalInt32FieldNumber = 1;
  ::google::protobuf::int32 optional_int32() const;
  void set_optional_int32(::google::protobuf::int32 value);

  // uint32 optional_uint32 = 3;
  void clear_optional_uint32();
  static const int kOptionalUint32FieldNumber = 3;
  ::google::protobuf::uint32 optional_uint32() const;
  void set_optional_uint32(::google::protobuf::uint32 value);

  // uint64 optional_uint64 = 4;
  void clear_optional_uint64();
  static const int kOptionalUint64FieldNumber = 4;
  ::google::protobuf::uint64 optional_uint64() const;
  void set_optional_uint64(::google::protobuf::uint64 value);

  // double optional_double = 6;
  void clear_optional_double();
  static const int kOptionalDoubleFieldNumber = 6;
  double optional_double() const;
  void set_optional_double(double value);

  // bool optional_bool = 5;
  void clear_optional_bool();
  static const int kOptionalBoolFieldNumber = 5;
  bool optional_bool() const;
  void set_optional_bool(bool value);

  // float optional_float = 7;
  void clear_optional_float();
  static const int kOptionalFloatFieldNumber = 7;
  float optional_float() const;
  void set_optional_float(float value);

  // .A.B.C.TestEnum optional_enum = 10;
  void clear_optional_enum();
  static const int kOptionalEnumFieldNumber = 10;
  ::A::B::C::TestEnum optional_enum() const;
  void set_optional_enum(::A::B::C::TestEnum value);

  // int32 oneof_int32 = 41;
  private:
  bool has_oneof_int32() const;
  public:
  void clear_oneof_int32();
  static const int kOneofInt32FieldNumber = 41;
  ::google::protobuf::int32 oneof_int32() const;
  void set_oneof_int32(::google::protobuf::int32 value);

  // int64 oneof_int64 = 42;
  private:
  bool has_oneof_int64() const;
  public:
  void clear_oneof_int64();
  static const int kOneofInt64FieldNumber = 42;
  ::google::protobuf::int64 oneof_int64() const;
  void set_oneof_int64(::google::protobuf::int64 value);

  // uint32 oneof_uint32 = 43;
  private:
  bool has_oneof_uint32() const;
  public:
  void clear_oneof_uint32();
  static const int kOneofUint32FieldNumber = 43;
  ::google::protobuf::uint32 oneof_uint32() const;
  void set_oneof_uint32(::google::protobuf::uint32 value);

  // uint64 oneof_uint64 = 44;
  private:
  bool has_oneof_uint64() const;
  public:
  void clear_oneof_uint64();
  static const int kOneofUint64FieldNumber = 44;
  ::google::protobuf::uint64 oneof_uint64() const;
  void set_oneof_uint64(::google::protobuf::uint64 value);

  // bool oneof_bool = 45;
  private:
  bool has_oneof_bool() const;
  public:
  void clear_oneof_bool();
  static const int kOneofBoolFieldNumber = 45;
  bool oneof_bool() const;
  void set_oneof_bool(bool value);

  // double oneof_double = 46;
  private:
  bool has_oneof_double() const;
  public:
  void clear_oneof_double();
  static const int kOneofDoubleFieldNumber = 46;
  double oneof_double() const;
  void set_oneof_double(double value);

  // float oneof_float = 47;
  private:
  bool has_oneof_float() const;
  public:
  void clear_oneof_float();
  static const int kOneofFloatFieldNumber = 47;
  float oneof_float() const;
  void set_oneof_float(float value);

  // string oneof_string = 48;
  private:
  bool has_oneof_string() const;
  public:
  void clear_oneof_string();
  static const int kOneofStringFieldNumber = 48;
  const ::std::string& oneof_string() const;
  void set_oneof_string(const ::std::string& value);
  #if LANG_CXX11
  void set_oneof_string(::std::string&& value);
  #endif
  void set_oneof_string(const char* value);
  void set_oneof_string(const char* value, size_t size);
  ::std::string* mutable_oneof_string();
  ::std::string* release_oneof_string();
  void set_allocated_oneof_string(::std::string* oneof_string);

  // bytes oneof_bytes = 49;
  private:
  bool has_oneof_bytes() const;
  public:
  void clear_oneof_bytes();
  static const int kOneofBytesFieldNumber = 49;
  const ::std::string& oneof_bytes() const;
  void set_oneof_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_oneof_bytes(::std::string&& value);
  #endif
  void set_oneof_bytes(const char* value);
  void set_oneof_bytes(const void* value, size_t size);
  ::std::string* mutable_oneof_bytes();
  ::std::string* release_oneof_bytes();
  void set_allocated_oneof_bytes(::std::string* oneof_bytes);

  // .A.B.C.TestEnum oneof_enum = 50;
  private:
  bool has_oneof_enum() const;
  public:
  void clear_oneof_enum();
  static const int kOneofEnumFieldNumber = 50;
  ::A::B::C::TestEnum oneof_enum() const;
  void set_oneof_enum(::A::B::C::TestEnum value);

  // .A.B.C.TestMessage oneof_msg = 51;
  bool has_oneof_msg() const;
  void clear_oneof_msg();
  static const int kOneofMsgFieldNumber = 51;
  private:
  const ::A::B::C::TestMessage& _internal_oneof_msg() const;
  public:
  const ::A::B::C::TestMessage& oneof_msg() const;
  ::A::B::C::TestMessage* release_oneof_msg();
  ::A::B::C::TestMessage* mutable_oneof_msg();
  void set_allocated_oneof_msg(::A::B::C::TestMessage* oneof_msg);

  void clear_my_oneof();
  MyOneofCase my_oneof_case() const;
  // @@protoc_insertion_point(class_scope:A.B.C.TestMessage)
 private:
  void set_has_oneof_int32();
  void set_has_oneof_int64();
  void set_has_oneof_uint32();
  void set_has_oneof_uint64();
  void set_has_oneof_bool();
  void set_has_oneof_double();
  void set_has_oneof_float();
  void set_has_oneof_string();
  void set_has_oneof_bytes();
  void set_has_oneof_enum();
  void set_has_oneof_msg();

  inline bool has_my_oneof() const;
  inline void clear_has_my_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > repeated_int32_;
  mutable int _repeated_int32_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > repeated_int64_;
  mutable int _repeated_int64_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > repeated_uint32_;
  mutable int _repeated_uint32_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > repeated_uint64_;
  mutable int _repeated_uint64_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > repeated_bool_;
  mutable int _repeated_bool_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > repeated_double_;
  mutable int _repeated_double_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > repeated_float_;
  mutable int _repeated_float_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeated_string_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeated_bytes_;
  ::google::protobuf::RepeatedField<int> repeated_enum_;
  mutable int _repeated_enum_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::A::B::C::TestMessage > repeated_msg_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapInt32StringEntry_DoNotUse,
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_int32_string_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapInt64StringEntry_DoNotUse,
      ::google::protobuf::int64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_int64_string_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapUint32StringEntry_DoNotUse,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_uint32_string_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapUint64StringEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_uint64_string_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapBoolStringEntry_DoNotUse,
      bool, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_bool_string_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapStringStringEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map_string_string_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapStringMsgEntry_DoNotUse,
      ::std::string, ::A::B::C::TestMessage,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > map_string_msg_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapStringEnumEntry_DoNotUse,
      ::std::string, ::A::B::C::TestEnum,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > map_string_enum_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapStringInt32Entry_DoNotUse,
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > map_string_int32_;
  ::google::protobuf::internal::MapField<
      TestMessage_MapStringBoolEntry_DoNotUse,
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > map_string_bool_;
  ::google::protobuf::internal::ArenaStringPtr optional_string_;
  ::google::protobuf::internal::ArenaStringPtr optional_bytes_;
  ::A::B::C::TestMessage* optional_msg_;
  ::A::B::C::TestMessage_NestedMessage* nested_message_;
  ::google::protobuf::int64 optional_int64_;
  ::google::protobuf::int32 optional_int32_;
  ::google::protobuf::uint32 optional_uint32_;
  ::google::protobuf::uint64 optional_uint64_;
  double optional_double_;
  bool optional_bool_;
  float optional_float_;
  int optional_enum_;
  union MyOneofUnion {
    MyOneofUnion() {}
    ::google::protobuf::int32 oneof_int32_;
    ::google::protobuf::int64 oneof_int64_;
    ::google::protobuf::uint32 oneof_uint32_;
    ::google::protobuf::uint64 oneof_uint64_;
    bool oneof_bool_;
    double oneof_double_;
    float oneof_float_;
    ::google::protobuf::internal::ArenaStringPtr oneof_string_;
    ::google::protobuf::internal::ArenaStringPtr oneof_bytes_;
    int oneof_enum_;
    ::A::B::C::TestMessage* oneof_msg_;
  } my_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fprotobuf_2fcompiler_2fruby_2fruby_5fgenerated_5fcode_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestMessage_NestedMessage

// int32 foo = 1;
inline void TestMessage_NestedMessage::clear_foo() {
  foo_ = 0;
}
inline ::google::protobuf::int32 TestMessage_NestedMessage::foo() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.NestedMessage.foo)
  return foo_;
}
inline void TestMessage_NestedMessage::set_foo(::google::protobuf::int32 value) {
  
  foo_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.NestedMessage.foo)
}

// -------------------------------------------------------------------

// TestMessage

// int32 optional_int32 = 1;
inline void TestMessage::clear_optional_int32() {
  optional_int32_ = 0;
}
inline ::google::protobuf::int32 TestMessage::optional_int32() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_int32)
  return optional_int32_;
}
inline void TestMessage::set_optional_int32(::google::protobuf::int32 value) {
  
  optional_int32_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_int32)
}

// int64 optional_int64 = 2;
inline void TestMessage::clear_optional_int64() {
  optional_int64_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TestMessage::optional_int64() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_int64)
  return optional_int64_;
}
inline void TestMessage::set_optional_int64(::google::protobuf::int64 value) {
  
  optional_int64_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_int64)
}

// uint32 optional_uint32 = 3;
inline void TestMessage::clear_optional_uint32() {
  optional_uint32_ = 0u;
}
inline ::google::protobuf::uint32 TestMessage::optional_uint32() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_uint32)
  return optional_uint32_;
}
inline void TestMessage::set_optional_uint32(::google::protobuf::uint32 value) {
  
  optional_uint32_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_uint32)
}

// uint64 optional_uint64 = 4;
inline void TestMessage::clear_optional_uint64() {
  optional_uint64_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TestMessage::optional_uint64() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_uint64)
  return optional_uint64_;
}
inline void TestMessage::set_optional_uint64(::google::protobuf::uint64 value) {
  
  optional_uint64_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_uint64)
}

// bool optional_bool = 5;
inline void TestMessage::clear_optional_bool() {
  optional_bool_ = false;
}
inline bool TestMessage::optional_bool() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_bool)
  return optional_bool_;
}
inline void TestMessage::set_optional_bool(bool value) {
  
  optional_bool_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_bool)
}

// double optional_double = 6;
inline void TestMessage::clear_optional_double() {
  optional_double_ = 0;
}
inline double TestMessage::optional_double() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_double)
  return optional_double_;
}
inline void TestMessage::set_optional_double(double value) {
  
  optional_double_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_double)
}

// float optional_float = 7;
inline void TestMessage::clear_optional_float() {
  optional_float_ = 0;
}
inline float TestMessage::optional_float() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_float)
  return optional_float_;
}
inline void TestMessage::set_optional_float(float value) {
  
  optional_float_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_float)
}

// string optional_string = 8;
inline void TestMessage::clear_optional_string() {
  optional_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TestMessage::optional_string() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_string)
  return optional_string_.GetNoArena();
}
inline void TestMessage::set_optional_string(const ::std::string& value) {
  
  optional_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_string)
}
#if LANG_CXX11
inline void TestMessage::set_optional_string(::std::string&& value) {
  
  optional_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:A.B.C.TestMessage.optional_string)
}
#endif
inline void TestMessage::set_optional_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  optional_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:A.B.C.TestMessage.optional_string)
}
inline void TestMessage::set_optional_string(const char* value, size_t size) {
  
  optional_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:A.B.C.TestMessage.optional_string)
}
inline ::std::string* TestMessage::mutable_optional_string() {
  
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.optional_string)
  return optional_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestMessage::release_optional_string() {
  // @@protoc_insertion_point(field_release:A.B.C.TestMessage.optional_string)
  
  return optional_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestMessage::set_allocated_optional_string(::std::string* optional_string) {
  if (optional_string != NULL) {
    
  } else {
    
  }
  optional_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_string);
  // @@protoc_insertion_point(field_set_allocated:A.B.C.TestMessage.optional_string)
}

// bytes optional_bytes = 9;
inline void TestMessage::clear_optional_bytes() {
  optional_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TestMessage::optional_bytes() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_bytes)
  return optional_bytes_.GetNoArena();
}
inline void TestMessage::set_optional_bytes(const ::std::string& value) {
  
  optional_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_bytes)
}
#if LANG_CXX11
inline void TestMessage::set_optional_bytes(::std::string&& value) {
  
  optional_bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:A.B.C.TestMessage.optional_bytes)
}
#endif
inline void TestMessage::set_optional_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  optional_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:A.B.C.TestMessage.optional_bytes)
}
inline void TestMessage::set_optional_bytes(const void* value, size_t size) {
  
  optional_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:A.B.C.TestMessage.optional_bytes)
}
inline ::std::string* TestMessage::mutable_optional_bytes() {
  
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.optional_bytes)
  return optional_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestMessage::release_optional_bytes() {
  // @@protoc_insertion_point(field_release:A.B.C.TestMessage.optional_bytes)
  
  return optional_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestMessage::set_allocated_optional_bytes(::std::string* optional_bytes) {
  if (optional_bytes != NULL) {
    
  } else {
    
  }
  optional_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_bytes);
  // @@protoc_insertion_point(field_set_allocated:A.B.C.TestMessage.optional_bytes)
}

// .A.B.C.TestEnum optional_enum = 10;
inline void TestMessage::clear_optional_enum() {
  optional_enum_ = 0;
}
inline ::A::B::C::TestEnum TestMessage::optional_enum() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_enum)
  return static_cast< ::A::B::C::TestEnum >(optional_enum_);
}
inline void TestMessage::set_optional_enum(::A::B::C::TestEnum value) {
  
  optional_enum_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.optional_enum)
}

// .A.B.C.TestMessage optional_msg = 11;
inline bool TestMessage::has_optional_msg() const {
  return this != internal_default_instance() && optional_msg_ != NULL;
}
inline void TestMessage::clear_optional_msg() {
  if (GetArenaNoVirtual() == NULL && optional_msg_ != NULL) {
    delete optional_msg_;
  }
  optional_msg_ = NULL;
}
inline const ::A::B::C::TestMessage& TestMessage::_internal_optional_msg() const {
  return *optional_msg_;
}
inline const ::A::B::C::TestMessage& TestMessage::optional_msg() const {
  const ::A::B::C::TestMessage* p = optional_msg_;
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.optional_msg)
  return p != NULL ? *p : *reinterpret_cast<const ::A::B::C::TestMessage*>(
      &::A::B::C::_TestMessage_default_instance_);
}
inline ::A::B::C::TestMessage* TestMessage::release_optional_msg() {
  // @@protoc_insertion_point(field_release:A.B.C.TestMessage.optional_msg)
  
  ::A::B::C::TestMessage* temp = optional_msg_;
  optional_msg_ = NULL;
  return temp;
}
inline ::A::B::C::TestMessage* TestMessage::mutable_optional_msg() {
  
  if (optional_msg_ == NULL) {
    auto* p = CreateMaybeMessage<::A::B::C::TestMessage>(GetArenaNoVirtual());
    optional_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.optional_msg)
  return optional_msg_;
}
inline void TestMessage::set_allocated_optional_msg(::A::B::C::TestMessage* optional_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optional_msg_;
  }
  if (optional_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      optional_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optional_msg, submessage_arena);
    }
    
  } else {
    
  }
  optional_msg_ = optional_msg;
  // @@protoc_insertion_point(field_set_allocated:A.B.C.TestMessage.optional_msg)
}

// repeated int32 repeated_int32 = 21;
inline int TestMessage::repeated_int32_size() const {
  return repeated_int32_.size();
}
inline void TestMessage::clear_repeated_int32() {
  repeated_int32_.Clear();
}
inline ::google::protobuf::int32 TestMessage::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_int32)
  return repeated_int32_.Get(index);
}
inline void TestMessage::set_repeated_int32(int index, ::google::protobuf::int32 value) {
  repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_int32)
}
inline void TestMessage::add_repeated_int32(::google::protobuf::int32 value) {
  repeated_int32_.Add(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_int32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TestMessage::repeated_int32() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_int32)
  return repeated_int32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TestMessage::mutable_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_int32)
  return &repeated_int32_;
}

// repeated int64 repeated_int64 = 22;
inline int TestMessage::repeated_int64_size() const {
  return repeated_int64_.size();
}
inline void TestMessage::clear_repeated_int64() {
  repeated_int64_.Clear();
}
inline ::google::protobuf::int64 TestMessage::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_int64)
  return repeated_int64_.Get(index);
}
inline void TestMessage::set_repeated_int64(int index, ::google::protobuf::int64 value) {
  repeated_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_int64)
}
inline void TestMessage::add_repeated_int64(::google::protobuf::int64 value) {
  repeated_int64_.Add(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_int64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TestMessage::repeated_int64() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_int64)
  return repeated_int64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TestMessage::mutable_repeated_int64() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_int64)
  return &repeated_int64_;
}

// repeated uint32 repeated_uint32 = 23;
inline int TestMessage::repeated_uint32_size() const {
  return repeated_uint32_.size();
}
inline void TestMessage::clear_repeated_uint32() {
  repeated_uint32_.Clear();
}
inline ::google::protobuf::uint32 TestMessage::repeated_uint32(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_uint32)
  return repeated_uint32_.Get(index);
}
inline void TestMessage::set_repeated_uint32(int index, ::google::protobuf::uint32 value) {
  repeated_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_uint32)
}
inline void TestMessage::add_repeated_uint32(::google::protobuf::uint32 value) {
  repeated_uint32_.Add(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_uint32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TestMessage::repeated_uint32() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_uint32)
  return repeated_uint32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TestMessage::mutable_repeated_uint32() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_uint32)
  return &repeated_uint32_;
}

// repeated uint64 repeated_uint64 = 24;
inline int TestMessage::repeated_uint64_size() const {
  return repeated_uint64_.size();
}
inline void TestMessage::clear_repeated_uint64() {
  repeated_uint64_.Clear();
}
inline ::google::protobuf::uint64 TestMessage::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_uint64)
  return repeated_uint64_.Get(index);
}
inline void TestMessage::set_repeated_uint64(int index, ::google::protobuf::uint64 value) {
  repeated_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_uint64)
}
inline void TestMessage::add_repeated_uint64(::google::protobuf::uint64 value) {
  repeated_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_uint64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TestMessage::repeated_uint64() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_uint64)
  return repeated_uint64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TestMessage::mutable_repeated_uint64() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_uint64)
  return &repeated_uint64_;
}

// repeated bool repeated_bool = 25;
inline int TestMessage::repeated_bool_size() const {
  return repeated_bool_.size();
}
inline void TestMessage::clear_repeated_bool() {
  repeated_bool_.Clear();
}
inline bool TestMessage::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_bool)
  return repeated_bool_.Get(index);
}
inline void TestMessage::set_repeated_bool(int index, bool value) {
  repeated_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_bool)
}
inline void TestMessage::add_repeated_bool(bool value) {
  repeated_bool_.Add(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_bool)
}
inline const ::google::protobuf::RepeatedField< bool >&
TestMessage::repeated_bool() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_bool)
  return repeated_bool_;
}
inline ::google::protobuf::RepeatedField< bool >*
TestMessage::mutable_repeated_bool() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_bool)
  return &repeated_bool_;
}

// repeated double repeated_double = 26;
inline int TestMessage::repeated_double_size() const {
  return repeated_double_.size();
}
inline void TestMessage::clear_repeated_double() {
  repeated_double_.Clear();
}
inline double TestMessage::repeated_double(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_double)
  return repeated_double_.Get(index);
}
inline void TestMessage::set_repeated_double(int index, double value) {
  repeated_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_double)
}
inline void TestMessage::add_repeated_double(double value) {
  repeated_double_.Add(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_double)
}
inline const ::google::protobuf::RepeatedField< double >&
TestMessage::repeated_double() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_double)
  return repeated_double_;
}
inline ::google::protobuf::RepeatedField< double >*
TestMessage::mutable_repeated_double() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_double)
  return &repeated_double_;
}

// repeated float repeated_float = 27;
inline int TestMessage::repeated_float_size() const {
  return repeated_float_.size();
}
inline void TestMessage::clear_repeated_float() {
  repeated_float_.Clear();
}
inline float TestMessage::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_float)
  return repeated_float_.Get(index);
}
inline void TestMessage::set_repeated_float(int index, float value) {
  repeated_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_float)
}
inline void TestMessage::add_repeated_float(float value) {
  repeated_float_.Add(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_float)
}
inline const ::google::protobuf::RepeatedField< float >&
TestMessage::repeated_float() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_float)
  return repeated_float_;
}
inline ::google::protobuf::RepeatedField< float >*
TestMessage::mutable_repeated_float() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_float)
  return &repeated_float_;
}

// repeated string repeated_string = 28;
inline int TestMessage::repeated_string_size() const {
  return repeated_string_.size();
}
inline void TestMessage::clear_repeated_string() {
  repeated_string_.Clear();
}
inline const ::std::string& TestMessage::repeated_string(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_string)
  return repeated_string_.Get(index);
}
inline ::std::string* TestMessage::mutable_repeated_string(int index) {
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.repeated_string)
  return repeated_string_.Mutable(index);
}
inline void TestMessage::set_repeated_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_string)
  repeated_string_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TestMessage::set_repeated_string(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_string)
  repeated_string_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TestMessage::set_repeated_string(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:A.B.C.TestMessage.repeated_string)
}
inline void TestMessage::set_repeated_string(int index, const char* value, size_t size) {
  repeated_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:A.B.C.TestMessage.repeated_string)
}
inline ::std::string* TestMessage::add_repeated_string() {
  // @@protoc_insertion_point(field_add_mutable:A.B.C.TestMessage.repeated_string)
  return repeated_string_.Add();
}
inline void TestMessage::add_repeated_string(const ::std::string& value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_string)
}
#if LANG_CXX11
inline void TestMessage::add_repeated_string(::std::string&& value) {
  repeated_string_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_string)
}
#endif
inline void TestMessage::add_repeated_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:A.B.C.TestMessage.repeated_string)
}
inline void TestMessage::add_repeated_string(const char* value, size_t size) {
  repeated_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:A.B.C.TestMessage.repeated_string)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestMessage::repeated_string() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_string)
  return repeated_string_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TestMessage::mutable_repeated_string() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_string)
  return &repeated_string_;
}

// repeated bytes repeated_bytes = 29;
inline int TestMessage::repeated_bytes_size() const {
  return repeated_bytes_.size();
}
inline void TestMessage::clear_repeated_bytes() {
  repeated_bytes_.Clear();
}
inline const ::std::string& TestMessage::repeated_bytes(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_bytes)
  return repeated_bytes_.Get(index);
}
inline ::std::string* TestMessage::mutable_repeated_bytes(int index) {
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.repeated_bytes)
  return repeated_bytes_.Mutable(index);
}
inline void TestMessage::set_repeated_bytes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_bytes)
  repeated_bytes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TestMessage::set_repeated_bytes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_bytes)
  repeated_bytes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TestMessage::set_repeated_bytes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:A.B.C.TestMessage.repeated_bytes)
}
inline void TestMessage::set_repeated_bytes(int index, const void* value, size_t size) {
  repeated_bytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:A.B.C.TestMessage.repeated_bytes)
}
inline ::std::string* TestMessage::add_repeated_bytes() {
  // @@protoc_insertion_point(field_add_mutable:A.B.C.TestMessage.repeated_bytes)
  return repeated_bytes_.Add();
}
inline void TestMessage::add_repeated_bytes(const ::std::string& value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_bytes)
}
#if LANG_CXX11
inline void TestMessage::add_repeated_bytes(::std::string&& value) {
  repeated_bytes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_bytes)
}
#endif
inline void TestMessage::add_repeated_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:A.B.C.TestMessage.repeated_bytes)
}
inline void TestMessage::add_repeated_bytes(const void* value, size_t size) {
  repeated_bytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:A.B.C.TestMessage.repeated_bytes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestMessage::repeated_bytes() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_bytes)
  return repeated_bytes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TestMessage::mutable_repeated_bytes() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_bytes)
  return &repeated_bytes_;
}

// repeated .A.B.C.TestEnum repeated_enum = 30;
inline int TestMessage::repeated_enum_size() const {
  return repeated_enum_.size();
}
inline void TestMessage::clear_repeated_enum() {
  repeated_enum_.Clear();
}
inline ::A::B::C::TestEnum TestMessage::repeated_enum(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_enum)
  return static_cast< ::A::B::C::TestEnum >(repeated_enum_.Get(index));
}
inline void TestMessage::set_repeated_enum(int index, ::A::B::C::TestEnum value) {
  repeated_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.repeated_enum)
}
inline void TestMessage::add_repeated_enum(::A::B::C::TestEnum value) {
  repeated_enum_.Add(value);
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_enum)
}
inline const ::google::protobuf::RepeatedField<int>&
TestMessage::repeated_enum() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_enum)
  return repeated_enum_;
}
inline ::google::protobuf::RepeatedField<int>*
TestMessage::mutable_repeated_enum() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_enum)
  return &repeated_enum_;
}

// repeated .A.B.C.TestMessage repeated_msg = 31;
inline int TestMessage::repeated_msg_size() const {
  return repeated_msg_.size();
}
inline void TestMessage::clear_repeated_msg() {
  repeated_msg_.Clear();
}
inline ::A::B::C::TestMessage* TestMessage::mutable_repeated_msg(int index) {
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.repeated_msg)
  return repeated_msg_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::A::B::C::TestMessage >*
TestMessage::mutable_repeated_msg() {
  // @@protoc_insertion_point(field_mutable_list:A.B.C.TestMessage.repeated_msg)
  return &repeated_msg_;
}
inline const ::A::B::C::TestMessage& TestMessage::repeated_msg(int index) const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.repeated_msg)
  return repeated_msg_.Get(index);
}
inline ::A::B::C::TestMessage* TestMessage::add_repeated_msg() {
  // @@protoc_insertion_point(field_add:A.B.C.TestMessage.repeated_msg)
  return repeated_msg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::A::B::C::TestMessage >&
TestMessage::repeated_msg() const {
  // @@protoc_insertion_point(field_list:A.B.C.TestMessage.repeated_msg)
  return repeated_msg_;
}

// int32 oneof_int32 = 41;
inline bool TestMessage::has_oneof_int32() const {
  return my_oneof_case() == kOneofInt32;
}
inline void TestMessage::set_has_oneof_int32() {
  _oneof_case_[0] = kOneofInt32;
}
inline void TestMessage::clear_oneof_int32() {
  if (has_oneof_int32()) {
    my_oneof_.oneof_int32_ = 0;
    clear_has_my_oneof();
  }
}
inline ::google::protobuf::int32 TestMessage::oneof_int32() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_int32)
  if (has_oneof_int32()) {
    return my_oneof_.oneof_int32_;
  }
  return 0;
}
inline void TestMessage::set_oneof_int32(::google::protobuf::int32 value) {
  if (!has_oneof_int32()) {
    clear_my_oneof();
    set_has_oneof_int32();
  }
  my_oneof_.oneof_int32_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_int32)
}

// int64 oneof_int64 = 42;
inline bool TestMessage::has_oneof_int64() const {
  return my_oneof_case() == kOneofInt64;
}
inline void TestMessage::set_has_oneof_int64() {
  _oneof_case_[0] = kOneofInt64;
}
inline void TestMessage::clear_oneof_int64() {
  if (has_oneof_int64()) {
    my_oneof_.oneof_int64_ = GOOGLE_LONGLONG(0);
    clear_has_my_oneof();
  }
}
inline ::google::protobuf::int64 TestMessage::oneof_int64() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_int64)
  if (has_oneof_int64()) {
    return my_oneof_.oneof_int64_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void TestMessage::set_oneof_int64(::google::protobuf::int64 value) {
  if (!has_oneof_int64()) {
    clear_my_oneof();
    set_has_oneof_int64();
  }
  my_oneof_.oneof_int64_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_int64)
}

// uint32 oneof_uint32 = 43;
inline bool TestMessage::has_oneof_uint32() const {
  return my_oneof_case() == kOneofUint32;
}
inline void TestMessage::set_has_oneof_uint32() {
  _oneof_case_[0] = kOneofUint32;
}
inline void TestMessage::clear_oneof_uint32() {
  if (has_oneof_uint32()) {
    my_oneof_.oneof_uint32_ = 0u;
    clear_has_my_oneof();
  }
}
inline ::google::protobuf::uint32 TestMessage::oneof_uint32() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_uint32)
  if (has_oneof_uint32()) {
    return my_oneof_.oneof_uint32_;
  }
  return 0u;
}
inline void TestMessage::set_oneof_uint32(::google::protobuf::uint32 value) {
  if (!has_oneof_uint32()) {
    clear_my_oneof();
    set_has_oneof_uint32();
  }
  my_oneof_.oneof_uint32_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_uint32)
}

// uint64 oneof_uint64 = 44;
inline bool TestMessage::has_oneof_uint64() const {
  return my_oneof_case() == kOneofUint64;
}
inline void TestMessage::set_has_oneof_uint64() {
  _oneof_case_[0] = kOneofUint64;
}
inline void TestMessage::clear_oneof_uint64() {
  if (has_oneof_uint64()) {
    my_oneof_.oneof_uint64_ = GOOGLE_ULONGLONG(0);
    clear_has_my_oneof();
  }
}
inline ::google::protobuf::uint64 TestMessage::oneof_uint64() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_uint64)
  if (has_oneof_uint64()) {
    return my_oneof_.oneof_uint64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void TestMessage::set_oneof_uint64(::google::protobuf::uint64 value) {
  if (!has_oneof_uint64()) {
    clear_my_oneof();
    set_has_oneof_uint64();
  }
  my_oneof_.oneof_uint64_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_uint64)
}

// bool oneof_bool = 45;
inline bool TestMessage::has_oneof_bool() const {
  return my_oneof_case() == kOneofBool;
}
inline void TestMessage::set_has_oneof_bool() {
  _oneof_case_[0] = kOneofBool;
}
inline void TestMessage::clear_oneof_bool() {
  if (has_oneof_bool()) {
    my_oneof_.oneof_bool_ = false;
    clear_has_my_oneof();
  }
}
inline bool TestMessage::oneof_bool() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_bool)
  if (has_oneof_bool()) {
    return my_oneof_.oneof_bool_;
  }
  return false;
}
inline void TestMessage::set_oneof_bool(bool value) {
  if (!has_oneof_bool()) {
    clear_my_oneof();
    set_has_oneof_bool();
  }
  my_oneof_.oneof_bool_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_bool)
}

// double oneof_double = 46;
inline bool TestMessage::has_oneof_double() const {
  return my_oneof_case() == kOneofDouble;
}
inline void TestMessage::set_has_oneof_double() {
  _oneof_case_[0] = kOneofDouble;
}
inline void TestMessage::clear_oneof_double() {
  if (has_oneof_double()) {
    my_oneof_.oneof_double_ = 0;
    clear_has_my_oneof();
  }
}
inline double TestMessage::oneof_double() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_double)
  if (has_oneof_double()) {
    return my_oneof_.oneof_double_;
  }
  return 0;
}
inline void TestMessage::set_oneof_double(double value) {
  if (!has_oneof_double()) {
    clear_my_oneof();
    set_has_oneof_double();
  }
  my_oneof_.oneof_double_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_double)
}

// float oneof_float = 47;
inline bool TestMessage::has_oneof_float() const {
  return my_oneof_case() == kOneofFloat;
}
inline void TestMessage::set_has_oneof_float() {
  _oneof_case_[0] = kOneofFloat;
}
inline void TestMessage::clear_oneof_float() {
  if (has_oneof_float()) {
    my_oneof_.oneof_float_ = 0;
    clear_has_my_oneof();
  }
}
inline float TestMessage::oneof_float() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_float)
  if (has_oneof_float()) {
    return my_oneof_.oneof_float_;
  }
  return 0;
}
inline void TestMessage::set_oneof_float(float value) {
  if (!has_oneof_float()) {
    clear_my_oneof();
    set_has_oneof_float();
  }
  my_oneof_.oneof_float_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_float)
}

// string oneof_string = 48;
inline bool TestMessage::has_oneof_string() const {
  return my_oneof_case() == kOneofString;
}
inline void TestMessage::set_has_oneof_string() {
  _oneof_case_[0] = kOneofString;
}
inline void TestMessage::clear_oneof_string() {
  if (has_oneof_string()) {
    my_oneof_.oneof_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_my_oneof();
  }
}
inline const ::std::string& TestMessage::oneof_string() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_string)
  if (has_oneof_string()) {
    return my_oneof_.oneof_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TestMessage::set_oneof_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_string)
  if (!has_oneof_string()) {
    clear_my_oneof();
    set_has_oneof_string();
    my_oneof_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  my_oneof_.oneof_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_string)
}
#if LANG_CXX11
inline void TestMessage::set_oneof_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_string)
  if (!has_oneof_string()) {
    clear_my_oneof();
    set_has_oneof_string();
    my_oneof_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  my_oneof_.oneof_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:A.B.C.TestMessage.oneof_string)
}
#endif
inline void TestMessage::set_oneof_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_oneof_string()) {
    clear_my_oneof();
    set_has_oneof_string();
    my_oneof_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  my_oneof_.oneof_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:A.B.C.TestMessage.oneof_string)
}
inline void TestMessage::set_oneof_string(const char* value, size_t size) {
  if (!has_oneof_string()) {
    clear_my_oneof();
    set_has_oneof_string();
    my_oneof_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  my_oneof_.oneof_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:A.B.C.TestMessage.oneof_string)
}
inline ::std::string* TestMessage::mutable_oneof_string() {
  if (!has_oneof_string()) {
    clear_my_oneof();
    set_has_oneof_string();
    my_oneof_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.oneof_string)
  return my_oneof_.oneof_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestMessage::release_oneof_string() {
  // @@protoc_insertion_point(field_release:A.B.C.TestMessage.oneof_string)
  if (has_oneof_string()) {
    clear_has_my_oneof();
    return my_oneof_.oneof_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void TestMessage::set_allocated_oneof_string(::std::string* oneof_string) {
  if (!has_oneof_string()) {
    my_oneof_.oneof_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_my_oneof();
  if (oneof_string != NULL) {
    set_has_oneof_string();
    my_oneof_.oneof_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oneof_string);
  }
  // @@protoc_insertion_point(field_set_allocated:A.B.C.TestMessage.oneof_string)
}

// bytes oneof_bytes = 49;
inline bool TestMessage::has_oneof_bytes() const {
  return my_oneof_case() == kOneofBytes;
}
inline void TestMessage::set_has_oneof_bytes() {
  _oneof_case_[0] = kOneofBytes;
}
inline void TestMessage::clear_oneof_bytes() {
  if (has_oneof_bytes()) {
    my_oneof_.oneof_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_my_oneof();
  }
}
inline const ::std::string& TestMessage::oneof_bytes() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_bytes)
  if (has_oneof_bytes()) {
    return my_oneof_.oneof_bytes_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TestMessage::set_oneof_bytes(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_bytes)
  if (!has_oneof_bytes()) {
    clear_my_oneof();
    set_has_oneof_bytes();
    my_oneof_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  my_oneof_.oneof_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_bytes)
}
#if LANG_CXX11
inline void TestMessage::set_oneof_bytes(::std::string&& value) {
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_bytes)
  if (!has_oneof_bytes()) {
    clear_my_oneof();
    set_has_oneof_bytes();
    my_oneof_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  my_oneof_.oneof_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:A.B.C.TestMessage.oneof_bytes)
}
#endif
inline void TestMessage::set_oneof_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_oneof_bytes()) {
    clear_my_oneof();
    set_has_oneof_bytes();
    my_oneof_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  my_oneof_.oneof_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:A.B.C.TestMessage.oneof_bytes)
}
inline void TestMessage::set_oneof_bytes(const void* value, size_t size) {
  if (!has_oneof_bytes()) {
    clear_my_oneof();
    set_has_oneof_bytes();
    my_oneof_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  my_oneof_.oneof_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:A.B.C.TestMessage.oneof_bytes)
}
inline ::std::string* TestMessage::mutable_oneof_bytes() {
  if (!has_oneof_bytes()) {
    clear_my_oneof();
    set_has_oneof_bytes();
    my_oneof_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.oneof_bytes)
  return my_oneof_.oneof_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestMessage::release_oneof_bytes() {
  // @@protoc_insertion_point(field_release:A.B.C.TestMessage.oneof_bytes)
  if (has_oneof_bytes()) {
    clear_has_my_oneof();
    return my_oneof_.oneof_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void TestMessage::set_allocated_oneof_bytes(::std::string* oneof_bytes) {
  if (!has_oneof_bytes()) {
    my_oneof_.oneof_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_my_oneof();
  if (oneof_bytes != NULL) {
    set_has_oneof_bytes();
    my_oneof_.oneof_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oneof_bytes);
  }
  // @@protoc_insertion_point(field_set_allocated:A.B.C.TestMessage.oneof_bytes)
}

// .A.B.C.TestEnum oneof_enum = 50;
inline bool TestMessage::has_oneof_enum() const {
  return my_oneof_case() == kOneofEnum;
}
inline void TestMessage::set_has_oneof_enum() {
  _oneof_case_[0] = kOneofEnum;
}
inline void TestMessage::clear_oneof_enum() {
  if (has_oneof_enum()) {
    my_oneof_.oneof_enum_ = 0;
    clear_has_my_oneof();
  }
}
inline ::A::B::C::TestEnum TestMessage::oneof_enum() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_enum)
  if (has_oneof_enum()) {
    return static_cast< ::A::B::C::TestEnum >(my_oneof_.oneof_enum_);
  }
  return static_cast< ::A::B::C::TestEnum >(0);
}
inline void TestMessage::set_oneof_enum(::A::B::C::TestEnum value) {
  if (!has_oneof_enum()) {
    clear_my_oneof();
    set_has_oneof_enum();
  }
  my_oneof_.oneof_enum_ = value;
  // @@protoc_insertion_point(field_set:A.B.C.TestMessage.oneof_enum)
}

// .A.B.C.TestMessage oneof_msg = 51;
inline bool TestMessage::has_oneof_msg() const {
  return my_oneof_case() == kOneofMsg;
}
inline void TestMessage::set_has_oneof_msg() {
  _oneof_case_[0] = kOneofMsg;
}
inline void TestMessage::clear_oneof_msg() {
  if (has_oneof_msg()) {
    delete my_oneof_.oneof_msg_;
    clear_has_my_oneof();
  }
}
inline const ::A::B::C::TestMessage& TestMessage::_internal_oneof_msg() const {
  return *my_oneof_.oneof_msg_;
}
inline ::A::B::C::TestMessage* TestMessage::release_oneof_msg() {
  // @@protoc_insertion_point(field_release:A.B.C.TestMessage.oneof_msg)
  if (has_oneof_msg()) {
    clear_has_my_oneof();
      ::A::B::C::TestMessage* temp = my_oneof_.oneof_msg_;
    my_oneof_.oneof_msg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::A::B::C::TestMessage& TestMessage::oneof_msg() const {
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.oneof_msg)
  return has_oneof_msg()
      ? *my_oneof_.oneof_msg_
      : *reinterpret_cast< ::A::B::C::TestMessage*>(&::A::B::C::_TestMessage_default_instance_);
}
inline ::A::B::C::TestMessage* TestMessage::mutable_oneof_msg() {
  if (!has_oneof_msg()) {
    clear_my_oneof();
    set_has_oneof_msg();
    my_oneof_.oneof_msg_ = CreateMaybeMessage< ::A::B::C::TestMessage >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.oneof_msg)
  return my_oneof_.oneof_msg_;
}

// map<int32, string> map_int32_string = 61;
inline int TestMessage::map_int32_string_size() const {
  return map_int32_string_.size();
}
inline void TestMessage::clear_map_int32_string() {
  map_int32_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
TestMessage::map_int32_string() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_int32_string)
  return map_int32_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
TestMessage::mutable_map_int32_string() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_int32_string)
  return map_int32_string_.MutableMap();
}

// map<int64, string> map_int64_string = 62;
inline int TestMessage::map_int64_string_size() const {
  return map_int64_string_.size();
}
inline void TestMessage::clear_map_int64_string() {
  map_int64_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
TestMessage::map_int64_string() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_int64_string)
  return map_int64_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
TestMessage::mutable_map_int64_string() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_int64_string)
  return map_int64_string_.MutableMap();
}

// map<uint32, string> map_uint32_string = 63;
inline int TestMessage::map_uint32_string_size() const {
  return map_uint32_string_.size();
}
inline void TestMessage::clear_map_uint32_string() {
  map_uint32_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
TestMessage::map_uint32_string() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_uint32_string)
  return map_uint32_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
TestMessage::mutable_map_uint32_string() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_uint32_string)
  return map_uint32_string_.MutableMap();
}

// map<uint64, string> map_uint64_string = 64;
inline int TestMessage::map_uint64_string_size() const {
  return map_uint64_string_.size();
}
inline void TestMessage::clear_map_uint64_string() {
  map_uint64_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
TestMessage::map_uint64_string() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_uint64_string)
  return map_uint64_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
TestMessage::mutable_map_uint64_string() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_uint64_string)
  return map_uint64_string_.MutableMap();
}

// map<bool, string> map_bool_string = 65;
inline int TestMessage::map_bool_string_size() const {
  return map_bool_string_.size();
}
inline void TestMessage::clear_map_bool_string() {
  map_bool_string_.Clear();
}
inline const ::google::protobuf::Map< bool, ::std::string >&
TestMessage::map_bool_string() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_bool_string)
  return map_bool_string_.GetMap();
}
inline ::google::protobuf::Map< bool, ::std::string >*
TestMessage::mutable_map_bool_string() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_bool_string)
  return map_bool_string_.MutableMap();
}

// map<string, string> map_string_string = 66;
inline int TestMessage::map_string_string_size() const {
  return map_string_string_.size();
}
inline void TestMessage::clear_map_string_string() {
  map_string_string_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
TestMessage::map_string_string() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_string_string)
  return map_string_string_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
TestMessage::mutable_map_string_string() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_string_string)
  return map_string_string_.MutableMap();
}

// map<string, .A.B.C.TestMessage> map_string_msg = 67;
inline int TestMessage::map_string_msg_size() const {
  return map_string_msg_.size();
}
inline void TestMessage::clear_map_string_msg() {
  map_string_msg_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::A::B::C::TestMessage >&
TestMessage::map_string_msg() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_string_msg)
  return map_string_msg_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::A::B::C::TestMessage >*
TestMessage::mutable_map_string_msg() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_string_msg)
  return map_string_msg_.MutableMap();
}

// map<string, .A.B.C.TestEnum> map_string_enum = 68;
inline int TestMessage::map_string_enum_size() const {
  return map_string_enum_.size();
}
inline void TestMessage::clear_map_string_enum() {
  map_string_enum_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::A::B::C::TestEnum >&
TestMessage::map_string_enum() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_string_enum)
  return map_string_enum_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::A::B::C::TestEnum >*
TestMessage::mutable_map_string_enum() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_string_enum)
  return map_string_enum_.MutableMap();
}

// map<string, int32> map_string_int32 = 69;
inline int TestMessage::map_string_int32_size() const {
  return map_string_int32_.size();
}
inline void TestMessage::clear_map_string_int32() {
  map_string_int32_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
TestMessage::map_string_int32() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_string_int32)
  return map_string_int32_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
TestMessage::mutable_map_string_int32() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_string_int32)
  return map_string_int32_.MutableMap();
}

// map<string, bool> map_string_bool = 70;
inline int TestMessage::map_string_bool_size() const {
  return map_string_bool_.size();
}
inline void TestMessage::clear_map_string_bool() {
  map_string_bool_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, bool >&
TestMessage::map_string_bool() const {
  // @@protoc_insertion_point(field_map:A.B.C.TestMessage.map_string_bool)
  return map_string_bool_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, bool >*
TestMessage::mutable_map_string_bool() {
  // @@protoc_insertion_point(field_mutable_map:A.B.C.TestMessage.map_string_bool)
  return map_string_bool_.MutableMap();
}

// .A.B.C.TestMessage.NestedMessage nested_message = 80;
inline bool TestMessage::has_nested_message() const {
  return this != internal_default_instance() && nested_message_ != NULL;
}
inline void TestMessage::clear_nested_message() {
  if (GetArenaNoVirtual() == NULL && nested_message_ != NULL) {
    delete nested_message_;
  }
  nested_message_ = NULL;
}
inline const ::A::B::C::TestMessage_NestedMessage& TestMessage::_internal_nested_message() const {
  return *nested_message_;
}
inline const ::A::B::C::TestMessage_NestedMessage& TestMessage::nested_message() const {
  const ::A::B::C::TestMessage_NestedMessage* p = nested_message_;
  // @@protoc_insertion_point(field_get:A.B.C.TestMessage.nested_message)
  return p != NULL ? *p : *reinterpret_cast<const ::A::B::C::TestMessage_NestedMessage*>(
      &::A::B::C::_TestMessage_NestedMessage_default_instance_);
}
inline ::A::B::C::TestMessage_NestedMessage* TestMessage::release_nested_message() {
  // @@protoc_insertion_point(field_release:A.B.C.TestMessage.nested_message)
  
  ::A::B::C::TestMessage_NestedMessage* temp = nested_message_;
  nested_message_ = NULL;
  return temp;
}
inline ::A::B::C::TestMessage_NestedMessage* TestMessage::mutable_nested_message() {
  
  if (nested_message_ == NULL) {
    auto* p = CreateMaybeMessage<::A::B::C::TestMessage_NestedMessage>(GetArenaNoVirtual());
    nested_message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:A.B.C.TestMessage.nested_message)
  return nested_message_;
}
inline void TestMessage::set_allocated_nested_message(::A::B::C::TestMessage_NestedMessage* nested_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete nested_message_;
  }
  if (nested_message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nested_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nested_message, submessage_arena);
    }
    
  } else {
    
  }
  nested_message_ = nested_message;
  // @@protoc_insertion_point(field_set_allocated:A.B.C.TestMessage.nested_message)
}

inline bool TestMessage::has_my_oneof() const {
  return my_oneof_case() != MY_ONEOF_NOT_SET;
}
inline void TestMessage::clear_has_my_oneof() {
  _oneof_case_[0] = MY_ONEOF_NOT_SET;
}
inline TestMessage::MyOneofCase TestMessage::my_oneof_case() const {
  return TestMessage::MyOneofCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace C
}  // namespace B
}  // namespace A

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::A::B::C::TestEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::A::B::C::TestEnum>() {
  return ::A::B::C::TestEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fprotobuf_2fcompiler_2fruby_2fruby_5fgenerated_5fcode_2eproto
